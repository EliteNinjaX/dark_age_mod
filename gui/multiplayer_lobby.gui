template LobbyViewBackground
{
	texture = "gfx/interface/tiles/marble_tile_l.dds"
	spriteType = Corneredtiled
	spriteborder = { 0 0 }
	margin = { -6 -6 }
	shaderfile = "gfx/FX/pdxgui_default.shader"
}

template LobbyViewModuleBackground
{
	block "modulebackgroundstyle"
	{
		shaderfile = "gfx/FX/pdxgui_default.shader"
		texture = "gfx/editor_gui/editor_field.dds"
		spriteType = CorneredStretched
		spriteborder = { 6 6 }
	}
}

types MultiplayerLobby
{
	type LobbyViewTitle = textbox {
		size = { 100% 24 }
		using = MarbleButtonFont
		position = { 0 10 }
		align = center
	}
	
	type PlayerlistWrapper = widget {
		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding
		filter_mouse = left|right
		
		widget = {
			visible = "[LobbyView.HasServerInfo]"
			size = { 100% 100% }
			
			background = {
				texture = "gfx/interface/tiles/marble_tile_l.dds"
				spriteType = Corneredtiled
				spriteborder = { 0 0 }
				margin = { -6 -6 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}
			
			icon = {
				texture = "gfx/interface/tiles/small_window_frame_corners.dds"
				spriteType = Corneredtiled
				size = { 100% 100% }
				spriteborder = { 32 24 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}
		}
	}
	
	type LobbyViewSelectionWidget = widget {
		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding
		filter_mouse = left|right
		alwaystransparent = no

		background = {
			using = LobbyViewBackground
		}
		
		LobbyViewBackgroundBorders = {}
		
		widget = {
			size = { 100% 48 }
			
			icon = {
				texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
				spriteType = Corneredtiled
				size = { 332 51 }
				spriteborder = { 16 0 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}
			
			LobbyViewTitle = {
				visible = "[LobbyView.HasSelectedPlayable]"
				text = "[LobbyView.GetSelectedPlayable.GetCountry.GetName]"
				fontsize = 20
				position = { 0 12 }
			}
			
			LobbyViewTitle = {
				visible = "[Not(LobbyView.HasSelectedPlayable)]"
				text = "SELECT_TITLE_SULLA_V"
				fontsize = 20
				position = { 0 10 }
			}
		}
		
		#LOBBY RIGHT SIDE FLOWCONTAINER
		vbox = {
			visible = "[LobbyView.HasSelectedPlayable]"
			alwaystransparent = no
			filter_mouse = left|right
			
			widget = {
				size = { 0 12 }
			}

			#COUNTRY INFO WIDGET
			widget = {
				size = { 328 252 }
				
				banner_migrant_horde = {
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
					
					position = { 20 40 }
					visible = "[LobbyView.GetSelectedPlayable.GetCountry.HasRank('(int32)0')]"
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
				}

				banner_city_state = {
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
					
					position = { 20 40 }
					visible = "[LobbyView.GetSelectedPlayable.GetCountry.HasRank('(int32)1')]"
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
				}
				
				banner_local_power = {
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
					
					position = { 20 40 }
					visible = "[LobbyView.GetSelectedPlayable.GetCountry.HasRank('(int32)2')]"
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
				}
				
				banner_regional_power = {
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
					
					position = { 20 40 }
					visible = "[LobbyView.GetSelectedPlayable.GetCountry.HasRank('(int32)3')]"
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
				}
				banner_major_power = {
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
					
					position = { 20 40 }
					visible = "[LobbyView.GetSelectedPlayable.GetCountry.HasRank('(int32)4')]"
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
				}
				
				banner_great_power = {
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
					
					position = { 20 40 }
					visible = "[LobbyView.GetSelectedPlayable.GetCountry.HasRank('(int32)5')]"
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
				}
				
				widget = {
					position = { 108 120 }
					size = { 204 34 }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetHeritage.GetTooltip]"
					
					icon = {
						name = "frame"
						position = { 0 0 }
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 12 12 }
						size = { 204 34 }
					}
		
					modifier_icon = {
						position = { 3 3 }
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetHeritage.GetModifier]"
						size = { 28 28 }
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetHeritage.GetTooltip]"
					}

					textbox = {
						size = { 164 24 }
						align = right
						elide = right
						using = MarbleButtonFontS
						text = "[LobbyView.GetSelectedPlayable.GetCountry.GetHeritage.GetName]"
						position = { 34 2 }
					}
				}				

				widget = {
					size = { 198 72 }
					position = { 110 42 }
					
					mt_owned = {
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetMilitaryTradition.GetStartBonus]"
						size = { 198 72 }
						
						blockoverride "texture"
						{
							texture = "[GetMilitaryBonusIcon(MilitaryBonus.GetBonus)]"
						}
					}
					
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetMilitaryTraditionToolTip]"
				}
				
				flowcontainer = {
					direction = vertical
					position = { 16 156 }
					
					widget = {
						size = { 296 32 }
						
						icon = {
							name = "frame"
							position = { 0 2 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 296 28 }
						}
						
						textbox = {
							position = { 10 2 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "GOVERNMENT"
							minimumsize = { -1 24 }
						}
						
						textbox = {
							size = { 100% 24 }
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetGovernment.GetName]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetGovernment.GetTooltip]"
							align = right
							margin_right = 6
							position = { 0 2 }
						}
					}
					
					widget = {
						size = { 296 32 }
						
						icon = {
							name = "frame"
							position = { 0 2 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 296 28 }
						}
						
						textbox = {
							position = { 10 2 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "RELIGION"
							minimumsize = { -1 24 }
						}
						textbox = {
							size = { 100% 24 }
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetReligion.GetName]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetReligion.GetTooltip]"
							align = right
							margin_right = 6
							position = { 0 2 }
						}
					}
					
					widget = {
						size = { 296 32 }
						
						icon = {
							name = "frame"
							position = { 0 2 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 296 28 }
						}
						
						textbox = {
							position = { 10 2 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "CULTURE"
							minimumsize = { -1 24 }
						}
						
						textbox = {
							size = { 100% 24 }
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetPrimaryCulture.GetName]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetPrimaryCulture.GetTooltip]"
							align = right
							margin_right = 6
							position = { 0 2 }
						}
					}
				}
			}
			
			#Ruler info container
			container = {
				DefaultHeaderBackground = {
					name = "province_header"
					size = { 308 46 }
					parentanchor = hcenter
					
					blockoverride "text"
					{
						text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRulerTitle]"
						parentanchor = top|hcenter
						position = { 0 6 }
					}
					
					widget = {
						size = { 100% 100% }
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetHeaderToolTip]"
					}
				}
				
				portrait_button = {
					using = portrait_60_no_pop
					position = { 10 44 }
					parentanchor = top|left
					alwaystransparent = yes
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler]"
					blockoverride "portrait_button_template_onclick"
					{}
					blockoverride "portrait_button_template_onrightclick"
					{}
					blockoverride "portrait_button_template_tooltip"
					{
						tooltip = "[Character.GetPortraitTooltipNoClick]"
					}

				} 
				widget = {
					position = { 102 42 }
					size = { 200 41 }

					textbox = {
						using = MarbleButtonFontS
						text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetName]"
						size = { 200 41 }
						multiline = yes
						align = left|vcenter
						parentanchor = hcenter
					}
				}
				
				flowcontainer = {
					position = { 104 88 }
					
					container = {
						icon = {
							using = icon_military
							size = { 32 32 }
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetMartialToolTip]"
						}
						
						icon = {
							name = "frame"
							position = { 38 2 }
							texture = "gfx/interface/tiles/value_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 59 4 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetMartial]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetMartialToolTip]"
							widgetanchor = top|hcenter
							align = center
						}
						
						icon = {
							using = icon_civic
							size = { 32 32 }
							position = { 92 0 }
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetFinesseToolTip]"
						}
						
						icon = {
							position = { 126 2 }
							texture = "gfx/interface/tiles/value_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 147 4 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetFinesse]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetFinesseToolTip]"
							widgetanchor = top|hcenter
							align = center
						}
					}
				}
				
				flowcontainer = {
					position = { 104 124 }
					
					container = {
						icon = {
							using = icon_oratory
							size = { 32 32 }
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetCharismaToolTip]"
						}
						
						icon = {
							name = "frame"
							position = { 38 2 }
							texture = "gfx/interface/tiles/value_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 59 4 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetCharisma]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetCharismaToolTip]"
							widgetanchor = top|hcenter
							align = center
						}
						
						icon = {
							using = icon_religious
							size = { 32 32 }
							position = { 92 0 }
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetZealToolTip]"
						}
						
						icon = {
							position = { 126 2 }
							texture = "gfx/interface/tiles/value_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 147 4 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetZeal]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetZealToolTip]"
							widgetanchor = top|hcenter
							align = center							
						}
					}
				}
			}
			
			
			#Co-Ruler info container
			container = {
				visible = "[LobbyView.GetSelectedPlayable.GetCountry.UseCoRuler]"
				DefaultHeaderBackground = {
					name = "province_header"
					size = { 308 46 }
					parentanchor = hcenter
					
					blockoverride "text"
					{
						text = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRulerTitle]"
						parentanchor = top|hcenter
						position = { 0 6 }
					}
					
					widget = {
						size = { 100% 100% }
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetHeaderToolTip]"
					}
				}
				
				portrait_button = {
					using = portrait_60_no_pop
					position = { 10 44 }
					parentanchor = top|left
					alwaystransparent = yes
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler]"
					blockoverride "portrait_button_template_onclick"
					{}
					blockoverride "portrait_button_template_onrightclick"
					{}
					blockoverride "portrait_button_template_tooltip"
					{
						tooltip = "[Character.GetPortraitTooltipNoClick]"
					}

				}
				widget = {
					position = { 102 42 }
					size = { 200 41 }

					textbox = {
						using = MarbleButtonFontS
						text = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetName]"
						size = { 200 41 }
						multiline = yes
						align = left|vcenter
						parentanchor = hcenter
					}
				}
				
				flowcontainer = {
					position = { 104 88 }
					
					container = {
						icon = {
							using = icon_military
							size = { 32 32 }
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetMartialToolTip]"
						}
						
						icon = {
							name = "frame"
							position = { 38 2 }
							texture = "gfx/interface/tiles/value_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 59 4 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetMartial]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetMartialToolTip]"
							widgetanchor = top|hcenter
							align = center
						}
						
						icon = {
							using = icon_civic
							size = { 32 32 }
							position = { 92 0 }
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetFinesseToolTip]"
						}
						
						icon = {
							position = { 126 2 }
							texture = "gfx/interface/tiles/value_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 147 4 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetFinesse]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetFinesseToolTip]"
							widgetanchor = top|hcenter
							align = center
						}
					}
				}
				
				flowcontainer = {
					position = { 104 124 }
					
					container = {
						icon = {
							using = icon_oratory
							size = { 32 32 }
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetCharismaToolTip]"
						}
						
						icon = {
							name = "frame"
							position = { 38 2 }
							texture = "gfx/interface/tiles/value_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 59 4 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetCharisma]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetCharismaToolTip]"
							widgetanchor = top|hcenter
							align = center
						}
						
						icon = {
							using = icon_religious
							size = { 32 32 }
							position = { 92 0 }
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetZealToolTip]"
						}
						
						icon = {
							position = { 126 2 }
							texture = "gfx/interface/tiles/value_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 147 4 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetZeal]"
							tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetCoRuler.GetZealToolTip]"
							widgetanchor = top|hcenter
							align = center							
						}
					}
				}
			}
			
			#POPS INFO CONTAINER
			container = {
				DefaultHeaderBackground = {
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetPopulationHeaderToolTip]"
					name = "province_header"
					size = { 308 46 }
					
					blockoverride "text"
					{
						#margin_left = 50
						text = "LOBBY_LABEL_POPULATION"
						parentanchor = top|hcenter
						position = { 0 6 }
					}
				}
				
				widget = {
					position = { 6 10 }
					size = { 298 108 }
					
					widget = {
						size = { 42 62 }
						position = { 8 42 }
						
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetOwnedProvinceTooltip]"
						
						icon = {
							position = { 2 0 }
							using = icon_local
							size = { 34 34 }
						}
						
						icon = {
							name = "frame"
							position = { 0 36 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 21 37 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetOwnedProvinceCount]"
							widgetanchor = top|hcenter
							align = center
						}
					}
					
					widget = {
						size = { 42 62 }
						position = { 52 42 }
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.BuildTotalPopulationToolTip]"
						
						icon = {
							position = { 2 0 }
							using = icon_population
							size = { 34 34 }
						}
						
						icon = {
							name = "frame"
							position = { 0 36 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 21 37 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetTotalPopulation]"
							widgetanchor = top|hcenter
							align = center
						}
					}
					
					icon = {
						position = { 102 48 }
						texture = "gfx/interface/tiles/vertical_divider.dds"
						spriteType = corneredtiled
						spriteborder = { 10 1 }
						size = { 6 46 }
					}
					
					widget = {
						size = { 42 62 }
						position = { 116 42 }
						
						icon = {
							using = icon_pop_citizens
							position = { 4 0 }
							size = { 32 32 }
						}
						
						icon = {
							name = "frame"
							position = { 0 36 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 21 37 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetPopulation('citizen')]"
							widgetanchor = top|hcenter
							align = center
						}
						
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.BuildPopulationToolTip('citizen')]"
					}
					
					widget = {
						size = { 42 62 }
						position = { 160 42 }
						
						icon = {
							using = icon_pop_freemen
							position = { 4 0 }
							size = { 32 32 }
						}
						
						icon = {
							name = "frame"
							position = { 0 36 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 21 37 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetPopulation('freemen')]"
							widgetanchor = top|hcenter
							align = center
						}
						
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.BuildPopulationToolTip('freemen')]"
					}
					
					widget = {
						size = { 42 62 }
						position = { 204 42 }
						
						icon = {
							using = icon_pop_tribal
							position = { 4 0 }
							size = { 32 32 }
						}
						
						icon = {
							name = "frame"
							position = { 0 36 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 21 37 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetPopulation('tribesmen')]"
							widgetanchor = top|hcenter
							align = center
						}
						
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.BuildPopulationToolTip('tribesmen')]"
					}
					
					widget = {
						size = { 42 62 }
						position = { 248 42 }
						
						icon = {
							using = icon_pop_slaves
							position = { 4 0 }
							size = { 32 32 }
						}
						
						icon = {
							name = "frame"
							position = { 0 36 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 12 12 }
							size = { 42 28 }
						}
						
						textbox = {
							position = { 21 37 }
							autoresize = yes
							using = MarbleButtonFontS
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetPopulation('slaves')]"
							widgetanchor = top|hcenter
							align = center
						}
						
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.BuildPopulationToolTip('slaves')]"
					}
				}
			}
			
			widget = {
				size = { 308 46 }
				DefaultHeaderBackground = {
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetDiplomacyHeaderToolTip]"
					name = "province_header"
					size = { 100% 100% }
					
					blockoverride "text"
					{
						text = "LOBBY_LABEL_DIPLOMACY"
						parentanchor = top|hcenter
						position = { 0 6 }
					}
				}
			}
			
			# DIPLOMATIC RELATIONS
			widget = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				
				scrollarea = {
					size = { 295 90% }
					parentanchor = hcenter
					
					scrollbar_vertical = {
						using = MarbleScrollBar
					}
					scrollbarpolicy_horizontal = always_off
					
					scrollwidget = {
						fixedgridbox = {
							name = "diplomatic_relations"
							size = { 100% 100% }
							addrow = 45
							addcolumn = 100%
							
							item = {
								flowcontainer = {
									spacing = 5
									
									widget = {
										size = { 40 40 }
										icon = {
											texture = "[RelationTypeItem.AccessIcon]"
											tooltip = "[RelationTypeItem.GetToolTip]"
											size = { 30 30 }
											parentanchor = center
										}
									}
									
									overlappingitembox = {
										datamodel = "[RelationTypeItem.GetRelations]"
										size = { 245 40 }
										spacing = 5
										
										background = {
											texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
											spriteType = Corneredtiled
											spriteborder = { 10 10 }
											shaderfile = "gfx/FX/pdxgui_default.shader"
										}
										
										item = {
											margin_widget = {
												size = { 35 35 }
												margin = { 8 5 }

												country_flag = {
													tooltip = "[RelationDescItem.GetToolTip]"
													datacontext = "[RelationDescItem.GetCountry]"
													
													blockoverride "flag"
													{
														texture = "[RelationDescItem.AccessFlagIcon]"
														frame = "[RelationDescItem.GetFlagFrame]"
														framesize = { 56 56 }
													}
													
													blockoverride "size"
													{
														size = { 30 30 }
													}
													
													blockoverride "click"
													{
														onclick = "[RelationDescItem.OnClick]"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	type LobbyViewSpaceWidget = widget {
		size = { 0 160 }
		layoutpolicy_horizontal = expanding
		visible = yes
	}

	
	type LobbyViewGameInfoPanel = vbox {
		layoutpolicy_horizontal = expanding
		background = {
			using = LobbyViewModuleBackground
		}
		block "game_info"
		{
		}
	}
	
	type LobbyViewButtons = vbox {
		widget = {
			size = { 332 44 }
			alwaystransparent = no
			filter_mouse = all
			LobbyViewBackgroundBorders = {
				size = { 100% 64 }
				position = { 0 -10 }
			}

			background = {
				using = LobbyViewBackground
				margin_top = 10
				margin_bottom = 5
			}

			flowcontainer = {
				ignoreinvisible = yes
				
				widget = {
					size = { 138 41 }
					container = {
						position = { 14 5 }
						button = {
							texture = "gfx/interface/buttons/checkbox.dds"
							framesize = { 36 36 }
							frame = "[Select_int32(LobbyView.IsObserver,'(int32)2','(int32)1'))]"
							onclick = "[LobbyView.ToggleObserve]"
							using = tooltip_ne
							tooltip = "JOMINI_MULTIPLAYER_GUI_OBSERVE_TOOLTIP"
						}
						textbox = {
							using = MarbleButtonFont
							text = "JOMINI_MULTIPLAYER_GUI_OBSERVE"
							tooltip = "JOMINI_MULTIPLAYER_GUI_OBSERVE_TOOLTIP"
							align = nobaseline
							using = tooltip_ne
							autoresize = yes
							position = { 38 5 }
							maximumsize = { 75 -1 }
							elide = right
						}
					}
				}

				button_standard = {
					text = "JOMINI_MULTIPLAYER_GUI_START"
					using = tooltip_ne
					onclick = "[LobbyView.Start]"
					enabled = "[LobbyView.CanStart]"
					tooltip = "[LobbyView.StartToolTip]"
					visible = "[And(PlayerIsHost, And(GameIsMultiplayer,IsPreparationLobby))]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
				}
				
				button_standard = {
					text = "JOMINI_MULTIPLAYER_GUI_START"
					using = tooltip_ne
					onclick = "[GameLobby.StartGame]"
					onclick = "[LobbyView.Ready]"
					enabled = "[LobbyView.CanControlSelected]"
					tooltip = "[LobbyView.GetControlToolTip]"
					visible = "[And(PlayerIsHost,And(Or(Not(GameIsMultiplayer),Not(IsPreparationLobby)),Or(LobbyView.HasSelectedPlayable,LobbyView.IsObserver)))]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
				}

				widget = {
					size = { 138 41 }
					visible = "[And(IsPreparationLobby, Not(PlayerIsHost))]"
					hbox = {
						button = {
							visible = "[LobbyView.IsReady]"
							texture = "gfx/interface/buttons/checkbox.dds"
							framesize = { 36 36 }
							frame = "[Select_int32(LobbyView.IsReady,'(int32)2','(int32)1'))]"
							onclick = "[LobbyView.UnReady]"
							using = tooltip_ne
						}
						button = {
							visible = "[Not(LobbyView.IsReady)]"
							texture = "gfx/interface/buttons/checkbox.dds"
							framesize = { 36 36 }
							frame = "[Select_int32(LobbyView.IsReady,'(int32)2','(int32)1'))]"
							onclick = "[LobbyView.Ready]"
							tooltip = "[LobbyView.GetReadyToolTip]"
							enabled = "[LobbyView.CanReady]"
							using = tooltip_ne
						}
						textbox = {
							using = MarbleButtonFont
							text = "JOMINI_MULTIPLAYER_GUI_READY"
							tooltip = "[LobbyView.GetReadyToolTip]"
							align = nobaseline
							autoresize = yes
							using = tooltip_ne
						}
					}
				}
			}
		}
		
		widget = {# Spacer
			size = { 1 10 }
		}
	}
	
	type LobbyViewBackgroundBorders = icon {
		texture = "gfx/interface/tiles/small_window_frame_corners.dds"
		spriteType = Corneredtiled	
		size = { 100% 100% }
		spriteborder = { 32 24 }
		shaderfile = "gfx/FX/pdxgui_default.shader"
		parentanchor = top|right
		widgetanchor = top|right
	}

	type LobbyViewPlayerList = widget {
		layoutpolicy_vertical = expanding
		alwaystransparent = no
		visible = "[GameIsMultiplayer]"
		
		widget = {
			size = { 100% 100% }
			visible = "[And(Not(LobbyView.HasServerInfo), GameIsMultiplayer)]"
			
			background = {
				texture = "gfx/interface/tiles/marble_tile_l.dds"
				spriteType = Corneredtiled
				spriteborder = { 0 0 }
				margin = { -6 -6 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}
			
			icon = {
				texture = "gfx/interface/tiles/small_window_frame_corners.dds"
				spriteType = Corneredtiled
				size = { 100% 100% }
				spriteborder = { 32 24 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}
		}

		DefaultHeaderBackground = {
			visible = "[GameIsMultiplayer]"
			size = { 308 46 }
			parentanchor = hcenter
			
			blockoverride "text"
			{
				text = "JOMINI_MULTIPLAYER_GUI_PLAYER_LIST_LABEL"
				parentanchor = top|hcenter
				position = { 0 6 }
			}
		}
		
		scrollarea = {
			size = { 307 535 }
			position = { 14 45 }
			visible = "[GameIsMultiplayer]"
			
			scrollbarpolicy_vertical = as_needed
			scrollbaralign_vertical = right
			scrollbarpolicy_horizontal = always_off
			
			scrollbar_vertical = {
				using = MarbleScrollBar
			}
			
			scrollwidget = {
				fixedgridbox = {
					addcolumn = 300
					addrow = 60
					setitemsizefromcell = yes
					
					datamodel = "[LobbyView.Players]"
					item = {
						JominiLobbyViewPlayerItem = {
						}
					}
				}
			}
		}
	}
	
	type TROLLBOX = vbox { 
		name = "mp_info"
		layoutpolicy_horizontal = expanding
		#layoutpolicy_vertical = expanding

		visible = "[LobbyView.HasServerInfo]"
		alwaystransparent = no
		filter_mouse = left|right

		block "mp_info_properties" {
			margin = { 10 10 }
			spacing = 10
			
			background = {
				using = JominiLobbyViewModuleBackground
			}
		}
		
		JominiMultiplayerSetupCheckButton = {
			blockoverride "checkbutton"
			{
				name = "mpconfig_private"
				checked = "[LobbyView.GetServerInfo.IsInvite]"
				onclick = "[LobbyView.ToggleVisibility]"
				enabled = "[CanEditSettingsAfterHost]"
			}

			blockoverride "label"
			{
				text = "JOMINI_MULTIPLAYER_GUI_PRIVATE"
			}
		}

		JominiMultiplayerSetupCheckButton = {
			blockoverride "checkbutton"
			{
				name = "mpconfig_public"
				checked = "[LobbyView.GetServerInfo.IsPublic]"
				onclick = "[LobbyView.ToggleVisibility]"
				enabled = "[CanEditSettingsAfterHost]"
			}

			blockoverride "label"
			{
				text = "JOMINI_MULTIPLAYER_GUI_PUBLIC"
			}
		}

		vbox = {
			spacing = 10
			layoutpolicy_horizontal = expanding
			restrictparent_min = yes
			block "setup_hbox_height" {}

			hbox = {
				layoutpolicy_horizontal = expanding

				JominiMultiplayerSetupTextBox = {
					text = "JOMINI_MULTIPLAYER_GUI_SERVER_NAME"
					layoutpolicy_horizontal = expanding
				}

				JominiMultiplayerSetupEditBox = {
					name = "game_name"
					size = { 0 30 }
					block "setup_editbox_margins" {}
					text = "[LobbyView.GetServerInfo.GetServerName]"
					tooltip = "JOMINI_MULTIPLAYER_GUI_SERVER_NAME"
					layoutpolicy_horizontal = expanding
					onreturnpressed = "[LobbyView.SetName]"
					ontextedited = "[LobbyView.OnNameEdit]"
					enabled = "[CanEditSettingsAfterHost]"
				}

				JominiLobbyViewButton = {
					size = { 30 30 }
					block "text_edit_button" {}
					enabled = "[CanEditSettingsAfterHost]"
					visible = "[CanEditSettingsAfterHost]"
					onclick = "[LobbyView.SetName]"
					tooltip = "JOMINI_MULTIPLAYER_GUI_CHANGE_SERVER_NAME"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				visible = "[JominiIsHostOrLocal]"

				JominiMultiplayerSetupTextBox = {
					text = "JOMINI_MULTIPLAYER_GUI_SERVER_PASSWORD"
					layoutpolicy_horizontal = expanding
				}

				JominiMultiplayerSetupEditBox = {
					name = "game_password"
					size = { 0 30 }
					block "setup_editbox_margins" {}
					tooltip = "JOMINI_MULTIPLAYER_GUI_SERVER_PASSWORD"
					layoutpolicy_horizontal = expanding
					onreturnpressed = "[LobbyView.SetPassword]"
					ontextedited = "[LobbyView.OnPasswordEdit]"
					enabled = "[CanEditSettingsAfterHost]"
				}

				JominiLobbyViewButton = {
					size = { 30 30 }
					block "text_edit_button" {}
					enabled = "[CanEditSettingsAfterHost]"
					visible = "[CanEditSettingsAfterHost]"
					onclick = "[LobbyView.SetPassword]"
					tooltip = "JOMINI_MULTIPLAYER_GUI_CHANGE_SERVER_PASSWORD"
				}
			}

			hbox = {
				block "game_options_left" {}
				block "game_options_right" {}
			}
		}

		JominiMultiplayerSetupCheckButton = {
			visible = "[And( LobbyView.GetServerInfo.IsInvite, JominiIsHostOrLocal)]"

			blockoverride "checkbutton"
			{
				name = "hotjoin_autoaccept"
				checked = "[LobbyView.IsAutoAccept]"
				onclick = "[LobbyView.ToggleAutoAccept]"
				tooltip = "JOMINI_MULTIPLAYER_GUI_AUTO_ACCEPT_TT"
				enabled = "[CanEditSettingsAfterHost]"
			}

			blockoverride "label"
			{
				autoresize = yes
				text = "JOMINI_MULTIPLAYER_GUI_AUTO_ACCEPT"
				tooltip = "JOMINI_MULTIPLAYER_GUI_AUTO_ACCEPT_TT"
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			spacing = 5

			block "mp_info_header" {}

			block "mp_info_left_info" {}

			JominiLobbyViewServerInfoEntry = {
				visible = "[LobbyView.GetServerInfo.HasServerID]"
				text = "JOMINI_MULTIPLAYER_GUI_SERVER_ID"
				tooltip = "JOMINI_MULTIPLAYER_GUI_SERVER_ID_TOOLTIP"
				onclick = "[LobbyView.CopyServerID]"
			}

			JominiLobbyViewServerInfoEntry = {
				text = "JOMINI_MULTIPLAYER_GUI_GAME_VERSION"
				tooltip = "JOMINI_MULTIPLAYER_GUI_GAME_VERSION_TOOLTIP"
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = preferred 

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = preferred
				spacing = 10
				block "mp_info_margin" {}

				JominiLobbyCollapseButton = {
					enabled = "[LobbyView.HasEnabledDLCs]"
					onclick = "[LobbyView.ToggleShowEnabledDLCs]"
					visible = "[LobbyView.ShouldShowEnabledDLCs]"
				}

				JominiLobbyExpandButton = {
					enabled = "[LobbyView.HasEnabledDLCs]"
					onclick = "[LobbyView.ToggleShowEnabledDLCs]"
					visible = "[Not(LobbyView.ShouldShowEnabledDLCs)]"
				}

				textbox = {
					layoutpolicy_horizontal = expanding
					text = "JOMINI_MULTIPLAYER_GUI_ENABLED_DLCS"
					align = nobaseline
					autoresize = yes
					block "jomini_standard_textbox" {}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				block "mp_info_margin" {}
				visible = "[LobbyView.ShouldShowEnabledDLCs]"
				datamodel = "[LobbyView.GetEnabledDLCs]"
				block "mp_info_item_spacing" {}


				item = {
					textbox = {
						layoutpolicy_horizontal = expanding
						text = "[CString.GetString]"
						autoresize = yes
						block "mp_info_item_background" {}
					}
				}
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = preferred 
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = preferred 
				spacing = 10
				block "mp_info_margin" {}

				JominiLobbyCollapseButton = {
					enabled = "[LobbyView.HasEnabledMods]"
					onclick = "[LobbyView.ToggleShowEnabledMods]"
					visible = "[LobbyView.ShouldShowEnabledMods]"
				}

				JominiLobbyExpandButton = {
					enabled = "[LobbyView.HasEnabledMods]"
					onclick = "[LobbyView.ToggleShowEnabledMods]"
					visible = "[Not(LobbyView.ShouldShowEnabledMods)]"
				}

				textbox = {
					layoutpolicy_horizontal = expanding
					text = "JOMINI_MULTIPLAYER_GUI_ENABLED_MODS"
					align = nobaseline
					autoresize = yes
					block "jomini_standard_textbox" {}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding

				datamodel = "[LobbyView.GetEnabledMods]"
				visible = "[LobbyView.ShouldShowEnabledMods]"
				block "mp_info_item_spacing" {}
				block "mp_info_margin" {}
				item = {
					textbox = {
						layoutpolicy_horizontal = expanding
						text = "[CString.GetString]"
						autoresize = yes
						block "mp_info_item_background" {}
					}
				}
			}
		}

		widget = {
			layoutpolicy_vertical = growing
			layoutpolicy_horizontal = growing
		}
	}
	
	type LobbyViewGameConfiguration = vbox {
		layoutpolicy_horizontal = expanding
		
		button_standard = {
			onclick = "[LobbyView.OpenGameConfigurationWindow]"
			text = "JOMINI_MULTIPLAYER_GUI_GAME_CONFIGURATION"
			visible = no# Window opened automatically by the game
		}
		widget = {
			filter_mouse = left|right
			alwaystransparent = no
			
			LobbyViewBackgroundBorders = {
				size = { 100% 120% }
				position = { 0 -12}
			}

			background = {
				using = LobbyViewBackground
				margin_top = 2
				#margin_bottom = 5
			}

			size = { 0 60 }
			layoutpolicy_horizontal = expanding
			button_standard = {
				size = { 90% 46 }
				position = { 0 -6 }
				parentanchor = center|hcenter
				enabled = "[LobbyView.CanGoBack]"
				tooltip = "[LobbyView.GetGoBackToolTip]"
				onclick = "[LobbyView.GoBack]"
				text = "BACK"
			}
		}
	}

	type SullaLobbyViewHost = widget {
		size = { 332 72 }
		visible = "[And(Not(HasHostError),Not(GameIsMultiplayer))]"
		alwaystransparent = no
		filter_mouse = left|right

		LobbyViewBackgroundBorders = {
		}

		background = {
			using = LobbyViewBackground
		}

		
		block "host_background" {
			background = {
				using = JominiLobbyViewModuleBackground
			}
		}
		JominiLobbyViewButton = {
			size = { 298 46 }
			parentanchor = center
			block "host_button"
			{
				text = "JOMINI_MULTIPLAYER_GUI_HOST_BUTTON"
			}
			onclick = "[LobbyView.OpenMultiplayer]"
			tooltip = "[LobbyView.GetOpenMultiplayerToolTip]"
			enabled = "[And(JominiIsMultiplayerAccessible, JominiIsHostOrLocal)]"
			fontsize = 18
			margin_bottom = 2
		}
	}
}

JominiMultiplayerLobby = {
	blockoverride "window_background" {
		texture = "gfx/interface/tiles/small_window_frame_corners_copy.dds"
		spriteType = Corneredtiled
		spriteborder = { 32 24 }
		margin = { 0 0 }
		shaderfile = "gfx/FX/pdxgui_default.shader"	
	}

	icon = {
		name = "cloud_save_indicator"
		position = { -330 2 }
		parentanchor = top|right
		texture = "gfx/interface/cloud_uplink.dds"
		shaderfile = "gfx/FX/pdxgui_glow.shader"
		tooltip = "CLOUD_SAVE_IN_PROGRESS_TOOLTIP"
		visible = "[GameIsCloudStorageOperationInProgress]"
	}


	blockoverride "collapse_button_properties" {
		texture = "gfx/interface/buttons/bigger_button_down.dds"
		size = { 22 23 }
	}

	blockoverride "expand_button_properties" {
		texture = "gfx/interface/buttons/bigger_button_right.dds"
		size = { 22 23 }
	}

	blockoverride "text_edit_button"
	{
		texture = "gfx/interface/buttons/bigger_button_right.dds"
		size = { 22 23 }
	}

	blockoverride "buttonstyle" {
		gfxtype = buttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click"
		texture = "gfx/interface/tiles/marble_button_s.dds"
		spriteType = Corneredtiled
		spriteborder = { 60 0 }
		size = { 240 38 }
		
		buttonText = {
			textbox = {
				parentanchor = bottom|hcenter
				using = MarbleButtonFont
				autoresize = yes
				position = { 0 -12 }
			}
		}
	}

	blockoverride "host_modify_button" {}

	blockoverride "remove_player_button_style" {
		texture = "gfx/interface/icons/font_icons/font_icon_paper_cross.dds"
		gfxtype = framedbuttongfx
		effectname = "NoHighlight"
		framesize = { 16 16 }
		upframe = 1
		downframe = 2
		overframe = 2
	}
	

	blockoverride "jomini_standard_textbox" {
		using = MarbleButtonFontS
	}

	blockoverride "host_button" {
		texture = "gfx/interface/tiles/text_button_tiles.dds"
		spriteType = Corneredtiled
		spriteborder = { 80 0 }
		size = { 298 46 }
		text = "JOMINI_MULTIPLAYER_GUI_HOST_BUTTON"
	}

	blockoverride "lobbyview_button_size" {
		size = { 200 38 }
		layoutpolicy_horizontal = fixed
	}

	blockoverride "host_background" {
		# No need for a background here
	}
	
	blockoverride "error_bottom_margin" {
		margin_bottom = 12
	}

	blockoverride "player_item_styling"
	{
		icon = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "gfx/interface/tiles/entry_button_tiles.dds"
			spriteType = Corneredtiled
			spriteborder = { 40 8 }
			size = { 298 62 }
		}
	}

	blockoverride "playerlist_item_content" {
		widget = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			JominiLobbyRemovePlayer = {
				position = { -10 8 }
				parentanchor = top|right
				widgetanchor = top|right
			}

			widget = {
				size = { 232 60 }
				parentanchor = top|right
				widgetanchor = top|right

				textbox = {
					size = { 140 20 }
					position = { 0 8 }
					text = "[LobbyPlayer.GetName]"
					using = MarbleButtonFontS
					#align = center
				}

				widget = {
					size = { 100 60 }
					position = { -5 0 }
					parentanchor = top|right
					widgetanchor = top|right
					
					block "player_loading_progress"
					{
						textbox = {
							text = "[LobbyPlayer.GetTransferProgress]"
							visible = "[LobbyPlayer.IsHotjoining]"
							using = MarbleButtonFontS
							margin_bottom = 4
						}
					}
					
					#Readyness
					hbox = {
						visible = "[LobbyPlayer.ShowReadyStatus]"
						block "readyness" {
							vbox = {
								textbox = {
									layoutpolicy_horizontal = expanding
									text = "JOMINI_MULTIPLAYER_GUI_READY"
									visible = "[LobbyPlayer.IsReady]"
									using = MarbleButtonFontS
									align = right
									margin_bottom = -13
									autoresize = yes
								}
								textbox = {
									layoutpolicy_horizontal = expanding
									text = "JOMINI_MULTIPLAYER_GUI_NOT_READY"
									visible = "[Not(LobbyPlayer.IsReady)]"
									using = MarbleButtonFontS
									align = right
									margin_bottom = -13
									autoresize = yes
								}
								textbox = {
									layoutpolicy_horizontal = expanding
									text = "JOMINI_MULTIPLAYER_GUI_OBSERVER"
									visible = "[LobbyPlayer.IsObserver]"
									using = MarbleButtonFontS
									align = right
									margin_bottom = -13
									autoresize = yes
								}
							}
						}
					}
				}
			}
		}
	}

	blockoverride "playerlist_playable"
	{
		container = {
			visible = "[LobbyPlayer.HasPlayable]"

			country_flag = {
				position = { 8 2 }

				blockoverride "flag"
				{
					#alwaystransparent = yes
					texture = "[LobbyPlayer.GetPlayable.GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
					frame = "[LobbyPlayer.GetPlayable.GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
					framesize = { 56 56 }
				}

				blockoverride "size"
				{
					size = { 56 56 }
				}

				blockoverride "click"
				{
					onclick = "[PanToCountry(GetCountry( LobbyPlayer.GetPlayable.GetCountry.GetTag ).Self)]"
				}

				blockoverride "hover" { }
			}

			textbox = {
				text = "[LobbyPlayer.GetPlayable.GetCountry.GetName]"
				align = center
				autoresize = yes
				using = MarbleButtonFontS
				position = { 68 26 }
			}
		}
	}

	blockoverride "marble_scrollbar" {
		using = MarbleScrollbar
	}

	blockoverride "mp_info_properties" {
		margin = { 20 20 }
		spacing = 10
		visible = "[And(LobbyView.HasServerInfo, GameIsMultiplayer)]"
	}

	blockoverride "server_info_entry_styling"
	{
		alwaystransparent = no
		using = MarbleButtonFontS
		margin_bottom = 2
		margin_left = 10
		margin_right = 4
		align = left
		elide = right

		icon = {
			name = "frame"
			texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
			spriteType = Corneredtiled
			spriteborder = { 12 12 }
			size = { 296 28 }
		}
	}

	blockoverride "server_info_entry_size"
	{
		size = { 296 28 }
	}

	block "servermode_text" {
		text = "JOMINI_MULTIPLAYER_GUI_SESSION_SERVER_MODE"
	}

	blockoverride "mp_info_margin" {
		#margin_left = 18
	}

	blockoverride "mp_info_item_spacing" {
		spacing = 3
		margin_top = 8
	}

	blockoverride "mp_info_item_background" {
		using = MarbleButtonFontS
		margin_top = 4
		margin_bottom = 5
		margin_left = 10

		icon = {
			texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
			spriteType = Corneredtiled
			spriteborder = { 12 12 }
			size = { 296 28 }
		}
	}

	blockoverride "left_panel_content"
	{
		background = {
			using = LobbyViewBackground
			visible = "[GameIsMultiplayer]"
		}

		widget = {
			size = { 0 64 }
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = fixed
			visible = "[GameIsMultiplayer]"

			icon = {
				texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
				spriteType = Corneredtiled
				size = { 332 51 }
				spriteborder = { 16 0 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}

			textbox = {
				using = MarbleButtonFont
				text = "JOMINI_MULTIPLAYER_GUI_SESSION_HEADER"
				size = { 100% 44 }
				align = center
				fontsize = 20
			}
		}

		JominiLobbyViewHostError = {}
		JominiLobbyViewHostingStatus = {}
		SullaLobbyViewHost = {}

		PlayerlistWrapper = {
			vbox = { 
				TROLLBOX = {}
				LobbyViewPlayerList = {}
			} 
		}

		LobbyViewGameConfiguration = {}
	}

	blockoverride "player_loading_progress"
	{
		textbox = {
			text = "[LobbyPlayer.GetLoadingString]"
			size = { 80 56 }
			parentanchor = top|right
			visible = "[LobbyPlayer.IsHotjoining]"
			using = MarbleButtonFontS
			align = right
		}
	}
	
	blockoverride "left_panel_properties"
	{
		size = { 332 100% }
		alwaystransparent = no
	}
	
	
	blockoverride "right_panel_properties"
	{
		size = { 332 100% }
		
		alwaystransparent = no
		parentanchor = top|right
		widgetanchor = top|right
	}
	
	blockoverride "right_panel_content"
	{
		LobbyViewGameInfoPanel = {}
		LobbyViewSelectionWidget = {}
		LobbyViewSpaceWidget = {}
		LobbyViewButtons = {}
	}

	blockoverride "setup_editbox"
	{
		using = MarbleButtonFontS
		fontsize = 15
		fontcolor = { 1 1 1 1 }
		cursorcolor = { 1 1 0.5 1 }

		background = {
			margin_left = 5
			margin_top = 0
			texture = "gfx/editor_gui/editor_field.dds"
			spriteType = CorneredStretched
			spriteborder = { 4 4 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}
	}

	blockoverride "setup_textbox"
	{
		using = MarbleButtonFontS
	}

	blockoverride "setup_checkbutton"
	{
		texture = "gfx/interface/buttons/checkbox.dds"
		framesize = { 36 36 }
	}

	textbox = {
		visible = "[Not(IsLiveBuild)]"
		parentanchor = bottom|right
		widgetanchor = bottom|right
		position = { -340 6 }
		name = "version_label"
		text = "[GetCompleteVersionInfoString]"
		size = { 400 120 }
		using = MarbleButtonFont
		multiline = yes
		fontsize = 16
		align = right
		
	}
	
	widget = {
		size = { 440 100 }
		parentanchor = top|hcenter
		filter_mouse = left|right
		alwaystransparent = no

		widget = {
			size = { 440 52 }
			position = { 0 39 }

			icon = {
				texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
				spriteType = Corneredtiled
				size = { 440 51 }
				spriteborder = { 16 0 }
				parentanchor = top|hcenter
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}

			flowcontainer = {
				name = "mapmodes_row_1"
				position = { 6 6 }
				parentanchor = top|left

				mapmodebutton = {
					texture = "gfx/interface/icons/minimap/terrain.dds"
					framesize = { 45 37 }
					down = "[IsMapMode('terrain')]"
					onclick = "[SetMapMode('terrain')]"
					shortcut = "map_mode_1"
					tooltip = "MAPMODE_TERRAIN"
					blockoverride "visibility" {}
				}

				mapmodebutton = {
					texture = "gfx/interface/icons/minimap/political.dds"
					framesize = { 45 37 }
					onclick = "[SetMapMode('political')]"
					shortcut = "map_mode_2"
					tooltip = "MAPMODE_POLITICAL"
					down = "[IsMapMode('political')]"
					blockoverride "visibility" {}
				}

				mapmodebutton = {
					texture = "gfx/interface/icons/minimap/culture.dds"
					framesize = { 45 37 }
					onclick = "[SetMapMode('culture')]"
					shortcut = "map_mode_3"
					tooltip = "culture_MAPMODE_DESC"
					down = "[IsMapMode('culture')]"
					blockoverride "visibility" {}
				}

				mapmodebutton = {
					texture = "gfx/interface/icons/minimap/religion.dds"
					framesize = { 45 37 }
					onclick = "[SetMapMode('religion')]"
					shortcut = "map_mode_4"
					tooltip = "religion_MAPMODE_DESC"
					down = "[IsMapMode('religion')]"
					blockoverride "visibility" {}
				}

				mapmodebutton = {
					texture = "gfx/interface/icons/minimap/tradegoods.dds"
					framesize = { 45 37 }
					onclick = "[SetMapMode('tradegoods')]"
					shortcut = "map_mode_5"
					tooltip = "tradegoods_MAPMODE_DESC"
					down = "[IsMapMode('tradegoods')]"
					blockoverride "visibility" {}
				}

				mapmodebutton = {
					texture = "gfx/interface/icons/minimap/civilization.dds"
					framesize = { 45 37 }
					onclick = "[SetMapMode('civilization')]"
					shortcut = "map_mode_6"
					tooltip = "civilization_MAPMODE_DESC"
					down = "[IsMapMode('civilization')]"
					blockoverride "visibility" {}
				}

				mapmodebutton = {
					texture = "gfx/interface/icons/minimap/government.dds"
					framesize = { 45 37 }
					onclick = "[SetMapMode('government')]"
					shortcut = "map_mode_7"
					tooltip = "government_MAPMODE_DESC"
					down = "[IsMapMode('government')]"
					blockoverride "visibility" {}
				}

				mapmodebutton = {
					texture = "gfx/interface/icons/minimap/players.dds"
					framesize = { 45 37 }
					onclick = "[SetMapMode('allplayers')]"
					shortcut = "map_mode_8"
					tooltip = "MAPMODE_PLAYERS"
					down = "[IsMapMode('allplayers')]"
					blockoverride "visibility" {}
				}
			}
		}
		
		icon = {
			texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
			spriteType = Corneredtiled
			size = { 440 51 }
			spriteborder = { 16 0 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
			tooltip = "THE_WORLD_TOOLTIP"
		}

		textbox = {
			position = { 0 19 }
			size = { 440 16 }
			align = center|nobaseline
			using = MarbleButtonFontL
			text = "THE_WORLD"
			elide = right
			visible = "[Not(IsLocalPlayerReplayingCommands)]"
		}
		
		textbox = {
			position = { 0 19 }
			size = { 440 16 }
			align = center|nobaseline
			using = MarbleButtonFontL
			text = "THE_WORLD_CATCHING_UP"
			elide = right
			visible = "[IsLocalPlayerReplayingCommands]"
		}

		button = {
			name = "find_province"
			onclick = "[OnFindProvince]"
			shortcut = "find_province"
			parentanchor = top|right
			position = { -4 48 }
			gfxtype = framedbuttongfx
			effectname = "NoHighlight"
			clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
			oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
			upframe = 1
			overframe = 2
			downframe = 3
			texture = "gfx/interface/minimap/minimap_find_province.dds"
			framesize = { 45 37 }
			tooltip = "MAPACTION_FIND_PROVINCE"
			size = { 45 37 }
			scale = 0.9
		}
	}
	
	widget = {
		size = { 340 108 }
		parentanchor = bottom|hcenter
		alwaystransparent = no
		filter_mouse = left|right

		icon = {
			texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
			spriteType = Corneredtiled
			position = { 0 60 }
			size = { 340 51 }
			spriteborder = { 16 0 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}

		textbox = {
			visible = "[Not(IsSaveGame)]"
			position = { 0 80 }
			size = { 340 16 }
			align = center|nobaseline
			using = MarbleButtonFontL
			text = "RECOMMENDED"
		}

		textbox = {
			visible = "[And(IsSaveGame, HasMigratingNations)]"
			position = { 0 80 }
			size = { 340 16 }
			align = center|nobaseline
			using = MarbleButtonFontL
			text = "MIGRATORY_NATIONS"
		}

		container = {
			parentanchor = hcenter
			position = { 0 6 }
			visible = "[Not(IsSaveGame)]"
			
			country_flag = {
				position = { 2 0 }
				name = "Roman Empire"
				tooltip = "EREINTRO"
				onmousehierarchyenter = "[SetHighlightCountry( GetCountry('ERE').Self )]"
				onmousehierarchyleave = "[ClearHighlightColors]"
				
				blockoverride "flag"
				{
					texture = "[GetCountry('ERE').AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
					frame = "[GetCountry('ERE').AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
					framesize = { 56 56 }
				}
				
				blockoverride "size"
				{
					size = { 56 56 }
				}
				
				blockoverride "click"
				{
					onclick = "[SetLobbyCountryTag('ERE')]"
					clicksound = "event:/SFX/UI/Province/sfx_ui_province_select"
					oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
				}			
			}

			country_flag = {
				position = { 56 0 }
				name = "Persia"
				tooltip = "PERINTRO"
				onmousehierarchyenter = "[SetHighlightCountry( GetCountry('PER').Self )]"
				onmousehierarchyleave = "[ClearHighlightColors]"
				
				blockoverride "flag"
				{
					texture = "[GetCountry('PER').AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
					frame = "[GetCountry('PER').AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
					framesize = { 56 56 }
				}
				
				blockoverride "size"
				{
					size = { 56 56 }
				}
				
				blockoverride "click"
				{
					onclick = "[SetLobbyCountryTag('PER')]"
					clicksound = "event:/SFX/UI/Province/sfx_ui_province_select"
					oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
				}
			}
			
			country_flag = {
				position = { 110 0 }
				name = "Ostrogoths"
				tooltip = "OGOINTRO"
				onmousehierarchyenter = "[SetHighlightCountry( GetCountry('OGO').Self )]"
				onmousehierarchyleave = "[ClearHighlightColors]"
				
				blockoverride "flag"
				{
					texture = "[GetCountry('OGO').AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
					frame = "[GetCountry('OGO').AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
					framesize = { 56 56 }
				}
				
				blockoverride "size"
				{
					size = { 56 56 }
				}
				
				blockoverride "click"
				{
					onclick = "[SetLobbyCountryTag('OGO')]"
					clicksound = "event:/SFX/UI/Province/sfx_ui_province_select"
					oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
				}			
			}
			
			country_flag = {
				position = { 164 0 }
				name = "Visigoths"
				tooltip = "VGOINTRO"
				onmousehierarchyenter = "[SetHighlightCountry( GetCountry('VGO').Self )]"
				onmousehierarchyleave = "[ClearHighlightColors]"
				
				blockoverride "flag"
				{
					texture = "[GetCountry('VGO').AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
					frame = "[GetCountry('VGO').AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
					framesize = { 56 56 }
				}
				
				blockoverride "size"
				{
					size = { 56 56 }
				}
				
				blockoverride "click"
				{
					onclick = "[SetLobbyCountryTag('VGO')]"
					clicksound = "event:/SFX/UI/Province/sfx_ui_province_select"
					oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
				}			
			}
	
			country_flag = {
				position = { 218 0 }
				name = "Burgundians"
				tooltip = "BURINTRO"
				onmousehierarchyenter = "[SetHighlightCountry( GetCountry('BUR').Self )]"
				onmousehierarchyleave = "[ClearHighlightColors]"
				
				blockoverride "flag"
				{
					texture = "[GetCountry('BUR').AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
					frame = "[GetCountry('BUR').AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
					framesize = { 56 56 }
				}
				
				blockoverride "size"
				{
					size = { 56 56 }
				}
				
				blockoverride "click"
				{
					onclick = "[SetLobbyCountryTag('BUR')]"
					clicksound = "event:/SFX/UI/Province/sfx_ui_province_select"
					oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
				}
			}
	
			country_flag = {
				position = { 272 0 }
				name = "Gupta"
				tooltip = "GUPINTRO"
				onmousehierarchyenter = "[SetHighlightCountry( GetCountry('GUP').Self )]"
				onmousehierarchyleave = "[ClearHighlightColors]"
				
				blockoverride "flag"
				{
					texture = "[GetCountry('GUP').AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
					frame = "[GetCountry('GUP').AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
					framesize = { 56 56 }
				}
				
				blockoverride "size"
				{
					size = { 56 56 }
				}
				
				blockoverride "click"
				{
					onclick = "[SetLobbyCountryTag('GUP')]"
					clicksound = "event:/SFX/UI/Province/sfx_ui_province_select"
					oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
				}
			}			
		}

		dynamicgridbox = {
			parentanchor = hcenter
			position = { 0 6 }
			size = { 300 300 }
			flipdirection = yes
			visible = "[And(IsSaveGame, HasMigratingNations)]"
			datamodel = "[GetMigratingNations]"
			
			item = {
				country_flag = {
					tooltip = "[Country.GetName]"
					
					blockoverride "flag"
					{
						texture = "[Country.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
						frame = "[Country.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
						framesize = { 56 56 }
					}
					
					blockoverride "size"
					{
						size = { 56 56 }
					}
					
					blockoverride "click"
					{
						onclick = "[SetLobbyCountry(Country.GetCountry)]"
						clicksound = "event:/SFX/UI/Province/sfx_ui_province_select"
						oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
					}
				}
			}	
		}
	}
}

JominiLobbyViewEndPreparationConfirmation = {
	blockoverride "properties"
	{
		modal = yes
		modality = all
		
		size = { 300 200 }
		parentanchor = center
		widgetanchor = center
	}
	
	blockoverride "content"
	{
		textbox = {
			name = "info"
			size = { 100% 50% }
			multiline = yes
			align = center|center
			text = "JOMINI_MULTIPLAYER_GUI_CONFIRMATION"
		}
		
		JominiLobbyViewButton = {
			onclick = "[EndPrepConfirm.Cancel]"
			text = "JOMINI_MULTIPLAYER_GUI_CANCEL"

			blockoverride "buttonstyle" {
				size = { 50% 19.999998% }
				parentanchor = bottom|left
				widgetanchor = bottom|left
				texture = "gfx/editor_gui/editor_button.dds"
				gfxtype = framedbuttongfx
				spriteType = CorneredStretched
				spriteborder = { 4 4 }
				effectname = "NoHighlight"
				framesize = { 16 16 }
				upframe = 1
				downframe = 2
				overframe = 3
				disableframe = 4
				intersectionmask = yes
			}
		}
		
		JominiLobbyViewButton = {
			onclick = "[EndPrepConfirm.Confirm]"
			text = "JOMINI_MULTIPLAYER_GUI_CONFIRM"

			blockoverride "buttonstyle" {
				size = { 50% 19.999998% }
				parentanchor = bottom|right
				widgetanchor = bottom|right
				texture = "gfx/editor_gui/editor_button.dds"
				gfxtype = framedbuttongfx
				spriteType = CorneredStretched
				spriteborder = { 4 4 }
				effectname = "NoHighlight"
				framesize = { 16 16 }
				upframe = 1
				downframe = 2
				overframe = 3
				disableframe = 4
				intersectionmask = yes
			}
		}
	}
}

JominiMultiplayerJoinRequest = {
	blockoverride "joinrequest_background" {
		minimumsize = { 300 300 }

		background = {
			texture = "gfx/interface/tiles/marble_tile_l.dds"
			spriteType = Corneredtiled
			spriteborder = { 0 0 }
			margin = { -6 -6 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}

		icon = {
			texture = "gfx/interface/tiles/small_window_frame_corners.dds"
			spriteType = Corneredtiled
			size = { 100% 100% }
			spriteborder = { 32 24 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}
	}

	blockoverride "buttonstyle" {
		text = "Words.."
		gfxtype = buttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click"
		texture = "gfx/interface/tiles/marble_button_s.dds"
		spriteType = Corneredtiled
		spriteborder = { 60 0 }
		size = { 124 38 }
		
		buttonText = {
			textbox = {
				parentanchor = bottom|hcenter
				using = MarbleButtonFont
				autoresize = yes
				position = { 0 -12 }
			}
		}
	}

	blockoverride "joinrequest_playername" {
		margin_bottom = 8
		size = { 180 20 }
		text = "[PlayerJoinRequest.GetPlayerName]"
		multiline = yes
		#autoresize = yes
		#layoutpolicy_horizontal = expanding
		#layoutpolicy_vertical = expanding
		using = MarbleButtonFontS
	}

	blockoverride "joinrequest_margins" {
		margin_top = 32
		margin_left = 32
		margin_right = 32
	}

	blockoverride "joinrequest_font" {
		using = MarbleButtonFontS
		fontsize = 16
	}

	blockoverride "joinrequest_scrollarea_size" {
		size = { 500 0 }
	}

	blockoverride "joinrequest_scrollbar" {
		using = MarbleScrollBar
	}

	blockoverride "joinrequest_addrow" {
		addrow = 40
	}
}

JominiMultiplayerOosMessage = {
	blockoverride "oos_background" {
		minimumsize = { 300 300 }

		background = {
			texture = "gfx/interface/tiles/marble_tile_l.dds"
			spriteType = Corneredtiled
			spriteborder = { 0 0 }
			margin = { -6 -6 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}
	}

	blockoverride "oos_item" {
		layoutpolicy_horizontal = expanding

		hbox = {
			datacontext = "[OosData.GetPlayable.GetCountry]"
			layoutpolicy_horizontal = expanding

			widget = {
				size = { 120 120 }

				country_flag = {
					visible = "[Not( OosData.IsObserver )]"

					blockoverride "flag" {
						texture = "[Country.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
						frame = "[Country.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
						framesize = { 120 120 }
					}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				margin = { 5 0 }

				textbox = {
					text = "[Country.GetName]"
					visible = "[Not( OosData.IsObserver )]"
					autoresize = yes
					layoutpolicy_horizontal = expanding
					using = MarbleButtonFontS
				}

				textbox = {
					text = "JOMINI_MULTIPLAYER_GUI_OBSERVER"
					visible = "[OosData.IsObserver]"
					autoresize = yes
					layoutpolicy_horizontal = expanding
					using = MarbleButtonFontS
				}

				textbox = {
					text = "JOMINI_MULTIPLAYER_GUI_OOS_MESSAGE_PLAYER_NAME"
					max_width = 490
					autoresize = yes
					layoutpolicy_horizontal = expanding
					using = MarbleButtonFontS
				}

				textbox = {
					text = "JOMINI_MULTIPLAYER_GUI_OOS_MESSAGE_TYPE"
					max_width = 490
					autoresize = yes
					layoutpolicy_horizontal = expanding
					using = MarbleButtonFontS
				}

				textbox = {
					text = "JOMINI_MULTIPLAYER_GUI_OOS_MESSAGE_FOLDER"
					max_width = 490
					autoresize = yes
					layoutpolicy_horizontal = expanding
					using = MarbleButtonFontS
					multiline = yes
				}
			}
		}
	}

	blockoverride "oos_textbox" {
		using = MarbleButtonFontS
	}

	blockoverride "oos_button" {
		text = "Words.."
		gfxtype = buttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"

		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click"
		texture = "gfx/interface/tiles/text_button_tiles.dds"
		spriteType = Corneredtiled
		spriteborder = { 80 0 }
		size = { 300 46 }

		buttonText = {
			textbox = {
				parentanchor = bottom|hcenter
				using = MarbleButtonFont
				autoresize = yes
				position = { 0 -16 }
			}
		}
	}
}
