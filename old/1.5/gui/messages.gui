template MessageBackground
{
	icon = {
		name = "bg"
		texture = "gfx/interface/tooltips/tooltip_bg.dds"
		spriteType = Corneredtiled
		spriteborder = { 16 16 }
		#shaderfile = "gfx/FX/pdxgui_default.shader"
		size = { 100% 100% }
	}
	icon = {
		name = "frame"
		texture = "gfx/interface/tooltips/tooltip_frame.dds"
		spriteType = Corneredtiled
		spriteborder = { 20 20 }
		size = { 100% 100% }
	}

}


template message_template
{
	name = "basic_message_template"
	
	container = {
		resizeparent = yes
		
		widget = {
			
			state = {
				name = _show
				trigger_on_create = yes
				start_sound = {
					soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
				}
			}
			
			name = "background"
			using = ScrollMessageBackground
			size = { 100% 100% }
			alwaystransparent = no
			
			blockoverride "margins_1"
			{
				margin_left = -20
				margin_right = -20
				margin_top = -10
				margin_bottom = 2
			}
		
			blockoverride "margins_2"
			{
				margin_left = 14
				margin_right = 14
				margin_top = 36
				margin_bottom = 40
			}			
		}
		
		flowcontainer = {
			direction = horizontal
			resizeparent = yes
			
			widget = {
				size = { 20 10 }
			}		
		
			flowcontainer = {
				margin_top = 6
				direction = vertical
				
				widget = {
					name = "spacing"
					size = { 10 10 }
				}
				
				textbox = {
					name = "subtitle"
					size = { 380 30 }
					multiline = yes
					using = ScrollFontS
					parentanchor = top|hcenter
					align = center|nobaseline
				}
				
	
				textbox = {
					name = "title"
					size = { 380 50 }
					multiline = yes
					using = MarbleButtonFont
					parentanchor = top|hcenter
					align = center|nobaseline
					elide = right
				}
				
				
				widget = {
					name = "spacing_5"
					block "desc_spacing"
					{
						size = { 10 10 }
					}
				}
				
				
				textbox = {
					name = "description"
					
					autoresize = yes
					maximumsize = { 570 -1 }
					minimumsize = { 570 -1 }
					
					multiline = yes
					parentanchor = top|hcenter
					align = center|nobaseline
					using = MarbleButtonFontS
					
					margin_bottom = 15
				}
				
				widget = {
					size = { 100% 44 }
					
					button_standard = {
						name = "accept_button"
						block "accept_title"
						{
							text = "OK_BUTTON"
						}
						block "ok_button_position"
						{
							parentanchor = bottom|right
							position = { -48 0 }
						}
						shortcut = "confirm"
					}
					
					block "settings_button_block"
					{
						settings_button = {
							name = "message_settings"
							clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
							tooltip = "MESSAGE_SETTINGS_POPUP"
							position = { 8 -1 }
							parentanchor = bottom|left
						}
					}
					
					block "cancel_button"
					{
						button_standard = {
							position = { 48 0 }
							name = "decline_button"
							block "cancel_title"
							{
								text = "CANCEL_BUTTON"
							}
							parentanchor = bottom|left
							shortcut = "close_window"
						}
					}
				}
			}
			widget = {
				size = { 20 10 }
			}
		}
	}
}


window = {
	name = "basic_message_popup"
	using = message_template
	
	state = {
		name = _show
		
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
		}
	}
	
	parentanchor = center

}



window = {
	name = "character_message_popup"
	
	state = {
		name = _show
		
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
		}
	}
	
	
	parentanchor = center
	
	portrait_button = {
		using = portrait_60_no_pop
		name = "portrait"
		position = { 28 8 }
		parentanchor = top|left
		datacontext = "[CharMessage.GetCharacter]"
	}
	
	
	country_flag = {
		position = { -76 16 }
		parentanchor = top|right
		widgetanchor = hcenter|top
		tooltip = "[CharMessage.GetCharacter.GetCountry.GetDescriptiveName|T]"
		datacontext = "[CharMessage.GetCharacter.GetCountry]"
		
		datacontext = "[CharMessage.GetCharacter.GetCountry]"
		blockoverride "flag"
		{
			texture = "[CharMessage.GetCharacter.GetCountry.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
			frame = "[CharMessage.GetCharacter.GetCountry.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
			framesize = { 120 120 }
		}
		
		blockoverride "size"
		{
			size = { 80 80 }
		}
		
		blockoverride "click"
		{
			onclick = "[OpenDiplomacy(CharMessage.GetCharacter.GetCountry)]"
		}
	
	#framesize = { 40 40 }
	}
	
	using = message_template
	
	blockoverride "desc_spacing"
	{
		size = { 10 40 }
	}

	
	blockoverride "ok_button_position"
	{
		parentanchor = bottom|hcenter
	}
	
	blockoverride "cancel_button"
	{
	}
}

window = {
	name = "province_message_popup"
	using = message_template
	
	state = {
		name = _show
		
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
		}
	}
	
	
	
	parentanchor = center


	
	blockoverride "cancel_title"
	{
		text = "GOTO_PROVINCE"
	}
}


window = {
	name = "country_message_popup"
	using = message_template
	
	state = {
		name = _show
		
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
		}
	}
	
	
	
	parentanchor = center
	
	country_flag = {
		position = { 30 16 }
		tooltip = "[CountryMessage.GetFirstCountry.GetDescriptiveName]"
		datacontext = "[CountryMessage.GetFirstCountry]"
		
		blockoverride "flag"
		{
			texture = "[CountryMessage.GetFirstCountry.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
			frame = "[CountryMessage.GetFirstCountry.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
			framesize = { 120 120 }
		}
		
		blockoverride "size"
		{
			size = { 80 80 }
		}
		
		blockoverride "click"
		{
			onclick = "[OpenDiplomacy(CountryMessage.GetFirstCountry)]"
		}
	}
	
	
	
	country_flag = {
		position = { -68 16 }
		tooltip = "[CountryMessage.GetSecondCountry.GetDescriptiveName]"
		parentanchor = top|right
		widgetanchor = hcenter|top
		datacontext = "[CountryMessage.GetSecondCountry]"
		
		blockoverride "flag"
		{
			texture = "[CountryMessage.GetSecondCountry.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
			frame = "[CountryMessage.GetSecondCountry.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
			framesize = { 120 120 }
		}
		
		blockoverride "size"
		{
			size = { 80 80 }
		}
		
		blockoverride "click"
		{
			onclick = "[OpenDiplomacy(CountryMessage.GetSecondCountry)]"
		}
	
	#framesize = { 40 40 }
	}
	
	
	blockoverride "desc_spacing"
	{
		size = { 10 20 }
	}

	
	blockoverride "cancel_title"
	{
		text = "GOTO_COUNTRY"
	}
}



window = {
	name = "goods_message_popup"
	
	using = message_template
	
	state = {
		name = _show
		
		trigger_on_create = yes
		
		start_sound = {
			soundeffect = "event:/SFX/UI/Diplomacy/sfx_ui_diplomacy_trade_new_route"
		}
	}
	
	
	parentanchor = center
	
	icon = {
		position = { -58 16 }
		parentanchor = top|right
		widgetanchor = hcenter|top
		
		size = { 80 80 }
		texture = "[GetTradeGoodsIcon(GoodsMessage.GetGoods)]"
		tooltip = "[GoodsMessage.GetGoods.GetTooltip]"
	}
	
	
	icon = {
		position = { 20 16 }
		
		size = { 80 80 }
		texture = "[GetTradeGoodsIcon(GoodsMessage.GetGoods)]"
		tooltip = "[GoodsMessage.GetGoods.GetTooltip]"
	}
	
	
	blockoverride "ok_button_position"
	{
		parentanchor = bottom|hcenter
		position = { 0 -12 }
	}
	
	blockoverride "cancel_button"
	{
	}
}


window = {
	name = "newborn_message_popup"
	
	state = {
		name = _show
		
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
		}
	}
	
	
	parentanchor = center
	
	portrait_button = {
		using = portrait_60_no_pop
		name = "portrait"
		position = { 28 8 }
		parentanchor = top|left
		datacontext = "[NewBornMessage.GetCharacter]"
	}
	
	margin_widget = {
		size = { 320 40 }
		position = { 0 60 }

			parentanchor = top|hcenter
		
		background = {
			texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
			spriteType = Corneredtiled
			spriteborder = { 10 10 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}
	
		editbox = {
			position = { 8 0 }
			size = { 300 34 }
			name = "newborn_name"
			using = MarbleButtonFontM
			text = "[NewBornMessage.GetCharacter.GetFirstNameForEditbox]"
			focuspolicy = all
			alwaystransparent = no
			multiline = no
			
			tooltip = "EDIT_NEWBORN_FIRST_NAME"
		}
	}
	
	country_flag = {
		position = { -76 16 }
		parentanchor = top|right
		widgetanchor = hcenter|top
		tooltip = "[NewBornMessage.GetCharacter.GetCountry.GetDescriptiveName|T]"
		datacontext = "[NewBornMessage.GetCharacter.GetCountry]"
		
		datacontext = "[NewBornMessage.GetCharacter.GetCountry]"
		blockoverride "flag"
		{
			texture = "[NewBornMessage.GetCharacter.GetCountry.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
			frame = "[NewBornMessage.GetCharacter.GetCountry.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
			framesize = { 120 120 }
		}
		
		blockoverride "size"
		{
			size = { 80 80 }
		}
		
		blockoverride "click"
		{
			onclick = "[OpenDiplomacy(NewBornMessage.GetCharacter.GetCountry)]"
		}
	
	#framesize = { 40 40 }
	}
	
	using = message_template
	
	blockoverride "desc_spacing"
	{
		size = { 10 40 }
	}

	
	blockoverride "ok_button_position"
	{
		parentanchor = bottom|hcenter
	}
	
	blockoverride "cancel_button"
	{
	}
}



template battle_result_side_template_outer
{
	country_flag = {
		position = { 0 -2 }
		tooltip = "[BattleSide.GetCommandingCountryStats.GetCountry.GetDescriptiveName]"
		datacontext = "[BattleSide.GetCommandingCountryStats.GetCountry]"
		
		blockoverride "flag"
		{
			texture = "[BattleSide.GetCommandingCountryStats.GetCountry.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
			frame = "[BattleSide.GetCommandingCountryStats.GetCountry.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
			framesize = { 120 120 }
		}
		
		blockoverride "size"
		{
			size = { 100 100 }
		}
		
		blockoverride "click"
		{
			onclick = "[OpenDiplomacy(BattleSide.GetCommandingCountryStats.GetCountry.GetCountry)]"
		}
	}
	
	portrait_button = {
		using = portrait_80_no_pop
		position = { 0 92 }
		datacontext = "[BattleSide.GetCommander]"
	}


}

template battle_result_side_template_inner
{
	overlappingitembox = {
		position = { 0 0 }
		size = { 362 60 }
		datamodel = "[BattleResultMessageSide.GetParticipants]"
		
		item = {
			country_flag = {
				position = { 0 0 }
				tooltip = "[BattleResultMessageParticipant.GetCountryStats.GetCountry.GetDescriptiveName]"
				datacontext = "[BattleResultMessageParticipant.GetCountryStats.GetCountry]"
				
				blockoverride "flag"
				{
					texture = "[BattleResultMessageParticipant.GetCountryStats.GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
					frame = "[BattleResultMessageParticipant.GetCountryStats.GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
					framesize = { 56 56 }
				}
				
				blockoverride "size"
				{
					size = { 48 48 }
				}
				
				blockoverride "click"
				{
					onclick = "[BattleResultMessageParticipant.OnClick]"
				}
			}
		}
	}
	
	icon = {
		position = { 0 50 }
		size = { 362 138 }
		texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
		spriteType = Corneredtiled
		spriteborder = { 28 20 }
	}
	
	overlappingitembox = {
		position = { 0 52 }
		size = { 360 136 }
		
		datamodel = "[BattleResultMessageSide.GetActiveParticipant.GetCountryStats.GetUnitTypeStats]"
		ignoreinvisible = yes
		
		# Can't use UnitCards since these are not subunits
		item = {
			container = {
				alwaystransparent = no
				filter_mouse = all
				
				datacontext = "[BattleUnitTypeStats.GetCountryStats]"
				
				tooltip = "BATTLE_UNIT_TYPE_STATS_TT"
				
				position = { 20 0 }
				
				visible = "[Not(BattleUnitTypeStats.IsEmpty)]"
				
				icon = {
					name = "unti_type_card"
					position = { 0 0 }
					#	size = { 70 130 }
					texture = "gfx/interface/tiles/unit_card_result.dds"
				}
				
				icon = {
					name = "type_icon"
					position = { 1 4 }
					size = { 57 57 }
					texture = "[GetSubUnitIcon(BattleUnitTypeStats.GetTypeIndex)]"
					
					parentanchor = hcenter
				}
				
				textbox = {
					position = { 6 54 }
					size = { 64 30 }
					using = MarbleButtonFont
					text = "[BattleUnitTypeStats.GetTotalUnits|0]"
					align = center|nobaseline
					tooltip = "BATTLE_UNIT_TYPE_STATS_TT_TOAL_UNITS"
					
					alwaystransparent = yes
					multiline = no
				#parentanchor = top|hcenter
				}
				
				textbox = {
					position = { 6 77 }
					size = { 64 30 }
					using = WhiteFont
					text = "-[BattleUnitTypeStats.GetLosses|0]"
					align = center|nobaseline
					alwaystransparent = yes
					tooltip = "BATTLE_UNIT_TYPE_STATS_TT_LOSSES"
					multiline = no
				#parentanchor = top|hcenter
				}
				
				flowcontainer = {
					position = { 2 50 }
					ignoreinvisible = yes
					widgetanchor = vcenter|hcenter
					parentanchor = vcenter|hcenter
					spacing = 5

					textbox = {
						# position = { 6 122 }
						#size = { 64 30 }
						autoresize = yes
						using = MarbleButtonFontS
						text = "[BattleUnitTypeStats.GetRemainingUnits|0]"
						align = center|nobaseline
						alwaystransparent = yes
						tooltip = "BATTLE_UNIT_TYPE_STATS_TT_REMAINING_UNITS"
						multiline = no
					#parentanchor = top|hcenter
					}

					textbox = {
						# position = { 6 102 }
						#size = { 64 30 }
						autoresize = yes
						using = MarbleButtonFontS
						text =  "(+[BattleUnitTypeStats.GetCaptured])"
						align = center|nobaseline
						alwaystransparent = yes
						#visible = "[BattleUnitTypeStats.GetCaptured]"
						visible = "[GreaterThan_int32(BattleUnitTypeStats.GetCaptured,'(int32)0')]"
						tooltip = "BATTLE_UNIT_TYPE_STATS_TT_CAPTURED"
						multiline = no
					#parentanchor = top|hcenter
					}
				}
			}
		}
	}
}

window = {
	name = "battle_result_message_popup"
	parentanchor = center
	size = { 1000 400 }
	
	state = {
		name = _show
		
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
		}
	}
	
	widget = {
		name = "background"
		using = small_window_type
		size = { 100% 100% }
		alwaystransparent = yes
		
		state = {
			name = _show
			trigger_on_create = yes
			start_sound = {
				soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
			}
		}
	}
	
	icon = {
		texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
		spriteType = Corneredtiled
		position = { 0 0 }
		size = { 100% 51 }
		spriteborder = { 16 0 }
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	textbox = {
		position = { 0 8 }
		widgetanchor = top|hcenter
		parentanchor = top|hcenter
		using = MarbleButtonFontL
		text = "[BattleResultMessage.GetBattleResult.GetName]"
		autoresize = yes
	}
	
	container = {
		resizeparent = yes
		
		flowcontainer = {
			direction = vertical
			
			
			widget = {
				size = { 1000 445 }
				
				widget = {
					size = { 480 400 }
					
					position = { 10 0 }
					widgetanchor = top|left
					parentanchor = top|left
					
					datacontext = "[BattleResultMessage.GetAttacker]"
					datacontext = "[BattleResultMessage.GetBattleResult.GetAttacker]"
					
					container = {
						position = { 8 0 }
						using = battle_result_side_template_outer
					}
					
					container = {
						using = battle_result_side_template_inner
						position = { 120 48 }
					}
					
					dynamicgridbox = {
						position = { 7 244 }
						using = combatant_modifiers
						
						blockoverride "datamodel"
						{
							datamodel = "[BattleSide.GetCombatModifiers]"
						}
						
						blockoverride "Not_for_land"
						{
						}
					}
					
					icon = {
						position = { 2 239 }
						size = { 112 52 }
						texture = "gfx/interface/tiles/golden_frame.dds"
						spriteType = Corneredtiled
						spriteborder = { 10 10 }
					}
					
					icon = {
						position = { 120 241 }
						size = { 70 48 }
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 28 20 }
						
						icon = {
							position = { 6 8 }
							size = { 28 28 }
							using = icon_military
						}
						
						textbox = {
							position = { 14 9 }
							autoresize = yes
							using = MarbleButtonFont
							text = "[BattleSide.GetCommander.GetMartial]"
							tooltip = "BATTLE_SIDE_TT_COMMANDER_MARTIAL"
							widgetanchor = top|hcenter
							parentanchor = top|hcenter
							align = center
						}
					}
					
					
					container = {
						position = { 4 296 }
						icon = {
							position = { 4 1 }
							size = { 28 28 }
							using = icon_popularity
						}
						icon = {
							
							size = { 108 32 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 28 20 }
							
							textbox = {
								position = { 6	-2 }
								datacontext = "[BattleResultMessageSide.GetActiveParticipant.GetCountryStats]"
								size = { 108 32 }
								using = MarbleButtonFont
								text = "[BattleSide.GetCommanderPopularityChange|+=2]"
								tooltip = "BATTLE_SIDE_TT_COMMANDER_POPULARITY_CHANGE"
								widgetanchor = top|hcenter
								parentanchor = top|hcenter
								align = center
							}
						}
					
					}
					
					
					
					icon = {
						position = { 4 332 }
						size = { 108 32 }
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 28 20 }
						
						textbox = {
							position = { 4 -1 }
							datacontext = "[BattleResultMessageSide.GetActiveParticipant.GetCountryStats]"
							size = { 108 32 }
							using = MarbleButtonFont
							text = "[BattleCountryStats.GetWarExhaustion|-=2]"
							tooltip = "BATTLE_COUNTRY_STATS_TT_WAR_EXHAUSTION"
							widgetanchor = top|hcenter
							parentanchor = top|hcenter
							align = center
						}
					}
					
					icon = {
						position = { 6 334 }
						size = { 28 28 }
						texture = "gfx/interface/icons/modifiers/war_exhaustion.dds"
					}
					
					
				}
				
				widget = {
					size = { 480 400 }
					
					position = { -10 0 }
					widgetanchor = top|right
					parentanchor = top|right
					
					datacontext = "[BattleResultMessage.GetDefender]"
					datacontext = "[BattleResultMessage.GetBattleResult.GetDefender]"
					
					container = {
						using = battle_result_side_template_inner
						widgetanchor = top|right
						parentanchor = top|right
						position = { -120 48 }
					}
					container = {
						using = battle_result_side_template_outer
						widgetanchor = top|right
						parentanchor = top|right
						position = { -8 0 }
					}
					
					dynamicgridbox = {
						position = { -7 244 }
						using = combatant_modifiers
						widgetanchor = top|right
						parentanchor = top|right
						
						blockoverride "datamodel"
						{
							datamodel = "[BattleSide.GetCombatModifiers]"
						}
						
						blockoverride "Not_for_land"
						{
						}
					}
					
					icon = {
						position = { -2 239 }
						size = { 112 52 }
						texture = "gfx/interface/tiles/golden_frame.dds"
						spriteType = Corneredtiled
						spriteborder = { 10 10 }
						widgetanchor = top|right
						parentanchor = top|right
					}
					
					icon = {
						position = { -120 241 }
						size = { 70 48 }
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 28 20 }
						widgetanchor = top|right
						parentanchor = top|right
						
						icon = {
							position = { 6 8 }
							size = { 28 28 }
							using = icon_military
						}
						
						textbox = {
							position = { 14 9 }
							autoresize = yes
							using = MarbleButtonFont
							text = "[BattleSide.GetCommander.GetMartial]"
							tooltip = "BATTLE_SIDE_TT_COMMANDER_MARTIAL"
							widgetanchor = top|hcenter
							parentanchor = top|hcenter
							align = center
						}
					}
					

					icon = {
						position = { -4 296 }
						size = { 108 32 }
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 28 20 }
						widgetanchor = top|right
						parentanchor = top|right
						
						textbox = {
							position = { -12 1 }
							datacontext = "[BattleResultMessageSide.GetActiveParticipant.GetCountryStats]"
							autoresize = yes
							size = { 108 32 }
							using = MarbleButtonFont
							text = "[BattleSide.GetCommanderPopularityChange|+=2]"
							tooltip = "BATTLE_SIDE_TT_COMMANDER_POPULARITY_CHANGE"
							widgetanchor = top|hcenter
							parentanchor = top|hcenter
							align = center
						}
					}
					
					icon = {
						position = { -8 296 }
						size = { 28 28 }
						using = icon_popularity
						widgetanchor = top|right
						parentanchor = top|right
					}
					
					container = {
						position = { -4 332 }
						widgetanchor = top|right
							parentanchor = top|right
						icon = {
							
							size = { 108 32 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 28 20 }
							
							
							textbox = {
								position = { -8 1 }
								datacontext = "[BattleResultMessageSide.GetActiveParticipant.GetCountryStats]"
								autoresize = yes
								size = { 108 32 }
								using = MarbleButtonFont
								text = "[BattleCountryStats.GetWarExhaustion|-=2]"
								tooltip = "BATTLE_COUNTRY_STATS_TT_WAR_EXHAUSTION"
								widgetanchor = top|hcenter
								parentanchor = top|hcenter
								align = center
							}
						}
						icon = {
							position = {78 4	 }
							size = { 28 28 }
							
							texture = "gfx/interface/icons/modifiers/war_exhaustion.dds"
						}
					}
					
				}
			}
		}
		
		widget = {
			size = { 100% 56 }
			parentanchor = bottom|hcenter
			
			button_standard_white_marble_s = {
				position = { 12 -10 }
				size = { 192 38 }
				name = "decline_button"
				parentanchor = bottom|left
				shortcut = "close_window"
				
				buttonText = {
					textbox = {
						parentanchor = bottom|hcenter
						using = MarbleButtonFontS
						autoresize = yes
						position = { 0 -12 }
						text = "GOTO_GOTO"
					}
				}
			}
			
			button_standard_white_marble_s = {
				position = { -12 -10 }
				size = { 192 38 }
				name = "accept_button"
				shortcut = "confirm"
				
				block "ok_button_position"
				{
					parentanchor = bottom|right
				}
				
				buttonText = {
					textbox = {
						parentanchor = bottom|hcenter
						using = MarbleButtonFontS
						autoresize = yes
						position = { 0 -12 }
						text = "OK_BUTTON"
					}
				}
			}
		}
		
		
		DefaultHeaderBackground = {
			position = { 0 238 }
			size = { 540 46 }
			widgetanchor = top|hcenter
			parentanchor = top|hcenter
			
			blockoverride "text"
			{
			#	text = "CONVERT_HEADER"
			}
			
			textbox = {
				position = { 0 7 }
				widgetanchor = top|hcenter
				parentanchor = top|hcenter
				using = BlackMarbleFont
				text = "BATTLE_RESULT_WON"
				autoresize = yes
				visible = "[BattleResultMessage.IsPlayerWinner]"
			}
			
			textbox = {
				position = { 0 7 }
				widgetanchor = top|hcenter
				parentanchor = top|hcenter
				using = BlackMarbleFont
				text = "BATTLE_RESULT_LOST"
				autoresize = yes
				visible = "[BattleResultMessage.IsPlayerLoser]"
			}
			
			textbox = {
				position = { 0 7 }
				widgetanchor = top|hcenter
				parentanchor = top|hcenter
				using = BlackMarbleFont
				text = "BATTLE_RESULT_OTHER"
				autoresize = yes
				visible = "[Not(Or(BattleResultMessage.IsPlayerWinner,BattleResultMessage.IsPlayerLoser))]"
			}
		}
		
		
		container = {
			position = { 0 282 }
			widgetanchor = top|hcenter
			parentanchor = top|hcenter
			using = ScrollMessageBackground
			
			blockoverride "margins_2"
			{
				margin_left = 20
				margin_right = 20
				margin_top = 32
				margin_bottom = 36
			}
			
			
			
			#blockoverride "margins_1"
			#{
			#	margin_left = -4
			#	margin_top = -10
			#	margin_bottom = -28
			#}
			
			#blockoverride "margins_2"
			#{
			#	margin_left = 34
			#	margin_right = 34
			#	margin_top = 36
			#	margin_bottom = 20
			#}
			
			textbox = {
				name = "description"
				position = { 0 2 }
				widgetanchor = bottom|hcenter
				parentanchor = bottom|hcenter
				
				margin_left = 20
				margin_right = 20
				
				autoresize = yes
				maximumsize = { 560 -1 }
				minimumsize = { 560 130 }
				
				multiline = yes
				align = center|nobaseline
				using = MarbleButtonFontS
			}
		}
	
	}
}

window = {
	name = "player_leave_popup"
	using = message_template
	
	state = {
		name = _show
		
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_message_appears"
		}
	}
	
	
	
	parentanchor = center
	
	country_flag = {
		position = { 30 16 }
		tooltip = "[PlayerLeaveMessage.GetCountry.GetDescriptiveName]"
		datacontext = "[PlayerLeaveMessage.GetCountry]"
		
		blockoverride "flag"
		{
			texture = "[PlayerLeaveMessage.GetCountry.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
			frame = "[PlayerLeaveMessage.GetCountry.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
			framesize = { 120 120 }
		}
		
		blockoverride "size"
		{
			size = { 80 80 }
		}
		
		blockoverride "click"
		{
			onclick = "[OpenDiplomacy(PlayerLeaveMessage.GetCountry)]"
		}
	}
	
	
	
	country_flag = {
		position = { -68 16 }
		tooltip = "[PlayerLeaveMessage.GetCountry.GetDescriptiveName]"
		parentanchor = top|right
		widgetanchor = hcenter|top
		datacontext = "[PlayerLeaveMessage.GetCountry]"
		
		blockoverride "flag"
		{
			texture = "[PlayerLeaveMessage.GetCountry.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
			frame = "[PlayerLeaveMessage.GetCountry.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
			framesize = { 120 120 }
		}
		
		blockoverride "size"
		{
			size = { 80 80 }
		}
		
		blockoverride "click"
		{
			onclick = "[OpenDiplomacy(PlayerLeaveMessage.GetCountry)]"
		}
	
	#framesize = { 40 40 }
	}
	
	
	blockoverride "desc_spacing"
	{
		size = { 10 20 }
	}

	
	blockoverride "settings_button_block"
	{
	}
	
	blockoverride "cancel_title"
	{
		text = "UNLOBOTOMIZE"
	}
	
	blockoverride "accept_title"
	{
		text = "ZOMBIE"
	}
}

