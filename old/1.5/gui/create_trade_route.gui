window = {
	gfxtype = windowgfx
	name = "create_trade_route_window"
	size = { 960 800 }
	parentanchor = bottom|left
	widgetanchor = bottom|left
	movable = yes
	
	using = advice_trigger_highlights

	state = {
		name = _show
		
		animation = {
			position = { 0 0 }
		}
		
	}
	
	widget = {
		name = "background"
		using = standard_window_type
		size = { 100% 100% }
		alwaystransparent = no
	}
	
	square_close_button = {
		name = "close_button"
		position = { -2 5 }
		parentanchor = top|right
		shortcut = "close_window"
		onclick = "[CreateTradeWindow.Close]"
		tooltip = "CLOSE"
	}
	
	container = {
		resizeparent = yes
		ignoreinvisible = yes
		
		flowcontainer = {
			position = { 12 10 }
			direction = vertical
			visible = "[CreateTradeWindow.ShowTradeGoods]"
			ignoreinvisible = yes
			
			textbox = {
				autoresize = yes
				using = MarbleButtonFontM
				text = "TRADE_GOODS"
			}
			
			widget = {
				size = { 721 11 }
			}
			
			scrollarea = {
				size = { 706 620 }
				scrollbarpolicy_horizontal = always_off
				
				scrollbar_vertical = {
					using = MarbleScrollBar
					blockoverride "ScrollBar_offset"
					{
						size = { 0 4 }
					}
				}
				
				scrollwidget = {
					dynamicgridbox = {
						size = { 280 200 }
						
						datamodel = "[CreateTradeWindow.GetCategories]"
						
						item = {
							container = {								
								DefaultHeaderBackground = {
									position = { -4 0 }
									size = { 702 42 }
									
									blockoverride "text"
									{
										text = "[TradeGoodsCategoryGlue.GetName]"
										position = { 4 2 }
									}
								}
								
								dynamicgridbox = {
									position = { 2 39 }
									size = { 280 200 }
									
									datamodel_wrap = 3
									flipdirection = yes
									
									datamodel = "[TradeGoodsCategoryGlue.GetTradeGoods]"
									
									item = {
										widget = {
											size = { 231 32 }
											tooltip = "[SelectTradeGoods.GetGoods.GetTooltip]"
											
											entry_button = {
												size = { 230 34 }
												enabled = "[SelectTradeGoods.IsEnabled]"
												onclick = "[SelectTradeGoods.OnClick]"
												
												buttonText = {
													textbox = {
														parentanchor = bottom|left
														using = MarbleButtonFontS
														autoresize = yes
														text = "[SelectTradeGoods.GetGoods.GetName]"
														position = { 36 -10 }
													}
												}
												textbox = {
													parentanchor = bottom|right
													using = MarbleButtonFontS
													fontsize = 14
													autoresize = yes
													text = "[SelectTradeGoods.GetGoods.GetRoutePrice]@gold!"
													position = { -30 -10 }
													align = right
												}
											}
											
											icon = {
												using = highlight_button_184
												visible = "[And(ShouldHighlight(SelectTradeGoods.GetHighlightKey),Not(SelectTradeGoods.IsNoTradePossible))]"
											}

											icon = {
												name = "Slot"
												texture = "gfx/interface/unit_view/unit_card_square.dds"
												position = { 0 0 }
												size = { 34 34 }
											}
											
											icon = {
												position = { 4 2 }
												size = { 28 28 }
												texture = "[GetTradeGoodsIcon(SelectTradeGoods.GetGoods)]"
												tooltip = "[SelectTradeGoods.GetGoods.GetTooltip]"
											}
											
											icon = {
												position = { 201 7 }
												size = { 18 18 }
												texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
												visible = "[SelectTradeGoods.IsNoTradePossible]"
												tooltip = "[SelectTradeGoods.GetTradePossibleBlock]"
											}
											
											icon = {
												position = { 201 7 }
												size = { 18 18 }
												texture = "gfx/interface/icons/font_icons/font_icon_tick.dds"
												visible = "[Not(SelectTradeGoods.IsNoTradePossible)]"
												tooltip = "TRADE_AVAILABLE"
											}
										}
									}
								}
							}
						}
					}
				}
			}
			
			widget = {
				size = { 702 45 }
				
				icon = {
					texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
					spriteType = Corneredtiled
					position = { -12 -2 }
					size = { 732 51 }
					spriteborder = { 14 0 }
				}
				
				textbox = {
					position = { 0 8 }
					autoresize = yes
					using = MarbleButtonFontM
					text = "CURRENT_IMPORT_ROUTES"
				}
			}
			
			scrollarea = {
				size = { 705 -1 }
				maximumsize = { 705 182 }
				scrollbarpolicy_horizontal = always_off
				
				scrollbar_vertical = {
					using = MarbleScrollBar
					blockoverride "ScrollBar_offset"
					{
						size = { 0 4 }
					}
				}
				
				scrollwidget = {					
					dynamicgridbox = {
						size = { 705 -1 }
						resizeparent = yes
						datamodel = "[CreateTradeWindow.GetCurrentTradeRoutes]"
						
						item = {
							widget = {
								size = { 705 36 }
								tooltip = "[ActiveTradeRoute.GetTooltip]"
								
								icon = {
									name = "Slot"
									texture = "gfx/interface/unit_view/unit_card_square.dds"
									position = { 4 0 }
									size = { 36 36 }
								}
								
								icon = {
									position = { 8 2 }
									size = { 30 30 }
									texture = "[GetTradeGoodsIcon(ActiveTradeRoute.GetGoods)]"
									tooltip = "[ActiveTradeRoute.GetGoods.GetTooltip]"
								}
								
								button_standard_white_marble_s = {
									position = { 44 0 }
									size = { 658 36 }
									onclick = "[ActiveTradeRoute.OnClick]"
									
									buttonText = {
										textbox = {
											parentanchor = bottom|hcenter
											using = MarbleButtonFontS
											autoresize = yes
											text = "[ActiveTradeRoute.GetName]"
											position = { 0 -10 }
										}
									}
								}
							}
						}
					}
				}
			}
			widget = {
				visible = "[IsDataModelEmpty(CreateTradeWindow.GetCurrentTradeRoutes)]"
				size = { 600 28 }
				
				textbox = {
					position = { 2 2 }
					autoresize = yes
					using = MarbleButtonFontS
					text = no_imports_right_now
				}
			}
			
			widget = {
				size = { 8 9 }
			}
		}
		
		# Trade Good Info
		flowcontainer = {
			position = { 14 10 }
			direction = vertical
			visible = "[Not(CreateTradeWindow.ShowTradeGoods)]"
			
			textbox = {
				autoresize = yes
				using = MarbleButtonFontM
				text = "SELECT_WHERE_TO_IMPORT_FROM"
				widgetanchor = top|left
			}
			
			container = {				
				widget = {
					name = "right_spacing"
					position = { 418 0 }
					size = { 4 4 }
				}
				
				DefaultHeaderBackground = {
					position = { -4 10 }
					size = { 416 46 }
					
					blockoverride "text"
					{
						margin_left = 48
						text = "[CreateTradeWindow.GetGoods.GetName]"
					}
				}
				
				icon = {
					name = "Slot"
					texture = "gfx/interface/unit_view/unit_card_square.dds"
					position = { 1 9 }
					size = { 52 52 }
				}
				
				icon = {
					position = { 6 12 }
					size = { 44 44 }
					texture = "[GetTradeGoodsIcon(CreateTradeWindow.GetGoods)]"
					tooltip = "[CreateTradeWindow.GetGoods.GetTooltip]"
				
				}
				
				flowcontainer = {
					position = { 0 60 }
					direction = vertical
					
					widget = {

						icon = {
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 10 10 }
							position = { 0 -4 }
							size = { 100% 100% }
							shaderfile = "gfx/FX/pdxgui_default.shader"
						}
						
						flowcontainer = {
							position = { 0 -4 }
							direction = vertical
							resizeparent = yes
							
							container = {
								textbox = {
									position = { 6 1 }
									minimumsize = { 400 -1 }
									maximumsize = { 400 -1 }
									autoresize = yes
									multiline = yes
									using = MarbleButtonFontS
									text = "[CreateTradeWindow.GetGoods.GetLocalDescription]"
								}
							}
							
							widget = {
								size = { 6 6 }
							}

						}
					}
					
					widget = {
						
						icon = {
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 10 10 }
							position = { 0 -4 }
							size = { 100% 100% }
							shaderfile = "gfx/FX/pdxgui_default.shader"
						}
						
						flowcontainer = {
							position = { 0 -4 }
							direction = vertical
							resizeparent = yes
							
							container = {
								textbox = {
									position = { 6 -20 }
									minimumsize = { 400 -1 }
									maximumsize = { 400 -1 }
									autoresize = yes
									multiline = yes
									using = MarbleButtonFontS
									text = "[CreateTradeWindow.GetGoods.GetAppliedBonusDescription]"
								}
							}
							
							widget = {
								size = { 6 6 }
							}
						}
					}
				}
			}
			
			widget = {
				size = { 6 6 }
			}
			
			icon = {
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 10 10 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
				size = { 406 308 }
				
				scrollarea = {
					position = { 4 1 }
					size = { 396 306 }
					
					scrollbar_horizontal = {
						using = editor_horizontal_scrollbar
					}
					scrollbar_vertical = {
						using = MarbleScrollBar
						blockoverride "ScrollBar_offset"
						{
							size = { 0 4 }
						}
					}
					
					scrollwidget = {
						dynamicgridbox = {
							position = { 0 0 }
							size = { 320 200 }
							
							datamodel = "[CreateTradeWindow.GetStates]"
							
							item = {
								widget = {
									size = { 380 38 }
									
									button_standard_white_marble_s = {
										position = { 34 2 }
										size = { 348 38 }
										onclick = "[CreateTradeRoute.OnClick]"
										enabled = "[CreateTradeRoute.CanClick]"
										tooltip = "[CreateTradeRoute.GetTooltip]"
										
										buttonText = {
											textbox = {
												parentanchor = bottom|hcenter
												using = MarbleButtonFontS
												autoresize = yes
												position = { 0 -13 }
												text = "[CreateTradeRoute.GetName]"
											}
										}
									}
									
									country_flag = {
										position = { 0 4 }
										tooltip = "[CreateTradeRoute.GetCountry.GetDescriptiveName]"
										
										blockoverride "flag"
										{
											texture = "[CreateTradeRoute.GetCountry.AccessCoatOfArms.GetTexture('(int32)32','(int32)32')]"
											frame = "[CreateTradeRoute.GetCountry.AccessCoatOfArms.GetFrame('(int32)32','(int32)32')]"
											framesize = { 32 32 }
										}
										
										blockoverride "size"
										{
											size = { 32 32 }
										}
										
										blockoverride "click"
										{
											onclick = "[OpenDiplomacy(CreateTradeRoute.GetCountry)]"
										}
									}
									
									icon = {
										position = { 36 2 }
										framesize = { 46 46 }
										size = { 36 36 }
										visible = "[CreateTradeRoute.RequireAcceptance]"
										texture = "gfx/interface/diplomacy/ai_accept_decline_icon.dds"
										frame = "[CreateTradeRoute.GetAcceptanceFrame]"
										tooltip = "[CreateTradeRoute.GetAcceptanceTooltip]"
									}
								}
							}
						}
					}
				}
			}
			
			widget = {
				size = { 6 6 }
			}
			
			widget = {
				size = { 100% 50 }
				
				button_standard_white_marble_s = {
					size = { 180 38 }
					parentanchor = top|hcenter
					widgetanchor = top|hcenter
					shortcut = "close_window"
					onclick = "[CreateTradeWindow.Back]"
					
					buttonText = {
						textbox = {
							parentanchor = bottom|hcenter
							using = MarbleButtonFontS
							autoresize = yes
							position = { 0 -13 }
							text = "BACK"
						}
					}
				}
			}
		}
	}
}

