window = {
	gfxtype = windowgfx
	name = "mercenaries_view"
	
	parentanchor = top|left
	size = { 900 840 }
	position = { 5 120 }
	widgetanchor = top|left
	movable = no
	
	widget = {
		name = "background"
		using = Large_window_type
		size = { 100% 100% }
		alwaystransparent = yes
		position = { 0 0 }
		
		blockoverride "header"
		{
			text = "MERCENARY_MENU_HEADER"
			tooltip = "MERCENARY_MENU_HEADER_TT"
		}
	}
	
	square_close_button = {
		name = "close_button"
		position = { -12 12 }
		parentanchor = top|right
		shortcut = "close_window"
		onclick = "[MercenaryView.OnClose]"
		tooltip = "CLOSE"
	}
	
	left_arrow_button = {
		name = "previous_button"
		position = { 244 14 }
		parentanchor = top|left
		shortcut = "previous_window"
		onclick = "[MercenaryView.OnPrevious]"
		tooltip = "PREVIOUS_MERCENARY_VIEW"
	}
	
	sort_button = {
		name = "Show Army Mercs"
		visible = yes
		position = { 50 68 }
		size = { 300 40 }
		tooltip = MERCENARY_VIEW_ARMY_TOOLTIP
		onclick = "[MercenaryView.ShowArmy]"
		down = "[MercenaryView.IsShowArmy]"
		
		
		textbox = {
			using = MarbleButtonFontM
			#parentanchor = top|left
			size = { 280 24 }
			position = { 12 4 }
			align = center
			text = "MERCENARY_VIEW_SHOW_ARMY"
		}
	}
	
	sort_button = {
		name = "Show Naval Mercs"
		visible = yes
		position = { -52 68 }
		parentanchor = top|right
		
		size = { 300 40 }
		tooltip = MERCENARY_VIEW_NAVAL_TOOLTIP
		onclick = "[MercenaryView.ShowNaval]"
		down = "[Not(MercenaryView.IsShowArmy)]"
		
		textbox = {
			using = MarbleButtonFontM
			#parentanchor = top|left
			size = { 280 24 }
			position = { 12 4 }
			align = center
			text = "MERCENARY_VIEW_SHOW_NAVAL"
		}
	}

	flowcontainer = {
		parentanchor = hcenter
		position = { 0 120 }
		
		CharacterFilterButton = {
			onclick = "[MercenaryView.Filter('recruitable')]"
			down = "[MercenaryView.IsFiltered('recruitable')]"
			clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"
			
			blockoverride "button_values"
			{
				name = "filter_recruitable"
			}
			
			CharacterFilterButtonIcon = {
				visible = "[MercenaryView.IsFilterYes('recruitable')]"
				texture = "gfx/interface/icons/font_icons/font_icon_tick.dds"
			}
			
			CharacterFilterButtonIcon = {
				visible = "[MercenaryView.IsFilterNo('recruitable')]"
				texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
			}
		}
		
		CharacterFiltericon = {
			blockoverride "icon_values"
			{
				tooltip = "MERCENARY_VIEW_FILTER_BY_RECRUITABLE_TOOLTIP"
			}
			
			blockoverride "textbox_values"
			{
				text = "MERCENARY_VIEW_FILTER_BY_RECRUITABLE"
			}
		}
		CharacterFilterButton = {
			onclick = "[MercenaryView.Filter('employed')]"
			down = "[MercenaryView.IsFiltered('employed')]"
			clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"
			
			blockoverride "button_values"
			{
				name = "filter_employed"
			}
			
			CharacterFilterButtonIcon = {
				visible = "[MercenaryView.IsFilterYes('employed')]"
				texture = "gfx/interface/icons/font_icons/font_icon_tick.dds"
			}
			
			CharacterFilterButtonIcon = {
				visible = "[MercenaryView.IsFilterNo('employed')]"
				texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
			}
		}
		CharacterFiltericon = {
			blockoverride "icon_values"
			{
				tooltip = "MERCENARY_VIEW_FILTER_BY_EMPLOYMENT_TOOLTIP"
			}
			
			blockoverride "textbox_values"
			{
				text = "MERCENARY_VIEW_FILTER_BY_EMPLOYMENT"
			}
		}
		CharacterFilterButton = {
			onclick = "[MercenaryView.Filter('hostile')]"
			down = "[MercenaryView.IsFiltered('hostile')]"
			clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"
			
			blockoverride "button_values"
			{
				name = "filter_employed"
			}
			
			CharacterFilterButtonIcon = {
				visible = "[MercenaryView.IsFilterYes('hostile')]"
				texture = "gfx/interface/icons/font_icons/font_icon_tick.dds"
			}
			
			CharacterFilterButtonIcon = {
				visible = "[MercenaryView.IsFilterNo('hostile')]"
				texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
			}
		}
		CharacterFiltericon = {
			blockoverride "icon_values"
			{
				tooltip = "MERCENARY_VIEW_FILTER_BY_HOSTILE_TOOLTIP"
			}
			
			blockoverride "textbox_values"
			{
				text = "MERCENARY_VIEW_FILTER_BY_HOSTILE"
			}
		}
	}
	
	icon = {
		position = { 50 169 }
		size = { 798 637 }
		texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
		spriteType = Corneredtiled
		spriteborder = { 28 20 }
	}	
	
	scrollarea = {
		position = { 56 170 }
		size = { 780 635 }
		scrollbarpolicy_horizontal = always_off
		
		scrollbar_vertical = {
			using = MarbleScrollBar
			blockoverride "ScrollBar_offset"
			{
				size = { 0 4 }
			}
		}
		
		scrollwidget = {

			fixedgridbox = {
				name = "mercenaries_grid"
				size = { 180 200 }
				
				datamodel = "[MercenaryView.GetFilteredMercenaries]"
				addcolumn = 760
				addrow = 112
				item = {
					
					widget = {
						size = { 760 112 }
						
						icon = {
							position = { 72 6 }
							texture = "gfx/interface/tiles/mercenary_bg.dds"
						}
						
						button = {
							using = portrait_60_no_pop
							datacontext = "[MercenaryItem.GetMercenary.GetCommander]"
							parentanchor = top|left
							position = { 0 -1 }
							clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
						}
						
						icon = {
							name = "Military"
							position = { 90 20 }
							size = { 82 32 }
							texture = "gfx/interface/tiles/merc_card_price.dds"
							spriteType = Corneredtiled
							spriteborder = { 28 20 }
							tooltip = "[MercenaryItem.GetMercenary.GetCommander.GetMartialToolTip]"
							
							icon = {
								position = { 4 1 }
								size = { 28 28 }
								using = icon_military
							}
							
							textbox = {
								name = "military_value"
								size = { 40 20 }
								position = { 58 3 }
								multiline = no
								using = MarbleButtonFont
								text = "[MercenaryItem.GetMercenary.GetCommander.GetMartial]"
								widgetanchor = top|hcenter
								align = center
							}
						}
						
						icon = {
							texture = "gfx/interface/tiles/merc_card_price.dds"
							spriteType = Corneredtiled
							position = { 168 20 }
							spriteborder = { 28 20 }
							size = { 82 32 }
							shaderfile = "gfx/FX/pdxgui_default.shader"
							
							
							textbox = {
								position = { 40 0 }
								autoresize = yes
								multiline = no
								using = MarbleButtonFont
								align = center
								text = "[MercenaryItem.GetVisualStrength]"
								tooltip = "[MercenaryItem.GetStrengthTooltip]"
								widgetanchor = top|hcenter
							}
						}	
						
						country_flag = {
							visible = "[MercenaryItem.GetMercenary.IsEmployed]"
							position = { 94 55 }
							tooltip = "[MercenaryItem.GetFlagTooltip]"
							datacontext = "[MercenaryItem.GetMercenary.GetEmployer]"
							
							blockoverride "flag"
							{
								texture = "[MercenaryItem.GetMercenary.GetEmployer.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
								frame = "[MercenaryItem.GetMercenary.GetEmployer.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
								framesize = { 120 120 }
							}
							
							blockoverride "size"
							{
								size = { 40 40 }
							}
							
							blockoverride "click"
							{
								# ToDo: This should be made to open the dimplomacy view of that country.
								#onclick = "[OpenDiplomacy( )]"
							}							
						}

						textbox = {
							position = { 134 52 }
							size = { 116 22 }
							elide = right
							using = GoldenFontS
							tooltip = "MERCENARY_MAINTENANCE_TT"
							text = "[MercenaryItem.GetMaintenance|2]@gold!"
						}

						textbox = {
							position = { 134 72 }
							size = { 116 22 }
							elide = right
							visible = "[MercenaryItem.GetMercenary.IsEmployed]"
							text = "[MercenaryItem.GetMercenary.GetEmployer.GetName]"
							using = GoldenFontS
						}

						button_standard_white_marble_s = {
							position = { 508 60 }
							size = { 230 38 }
							visible = "[Not(MercenaryItem.GetMercenary.IsEmployed)]"
							onclick = "[MercenaryItem.OnClick]"
							enabled = "[MercenaryItem.CanHire]"
							tooltip = "[MercenaryItem.GetButtonTooltip]"
							clicksound = "event:/SFX/Events/Generic/sfx_event_generic_trade"
							oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
							buttonText = {
								textbox = {
									parentanchor = bottom|hcenter
									widgetanchor = bottom|hcenter
									using = MarbleButtonFontS
									autoresize = yes
									position = { 0 -12 }
									text = "RECRUIT_MERCENARY_BUTTON"
								}
							}
						}
						
						button_standard_white_marble_s = {
							position = { 508 60 }
							size = { 230 38 }
							visible = "[MercenaryItem.GetMercenary.IsEmployed]"
							
							onclick = "[MercenaryItem.OnClick]"
							enabled = "[MercenaryItem.CanFire]"
							tooltip = "[MercenaryItem.GetFireButtonTooltip]"
							clicksound = "event:/SFX/Events/Generic/sfx_event_generic_trade"
							oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
							
							buttonText = {
								textbox = {
									parentanchor = bottom|hcenter
									widgetanchor = bottom|hcenter
									using = MarbleButtonFontS
									autoresize = yes
									position = { 0 -12 }
									text = "FIRE_MERCENARY_BUTTON"
								}
							}
						}
						button_standard_white_marble_s = {
							position = { 508 60 }
							size = { 230 38 }
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( MercenaryItem.GetMercenary.GetCommander.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							datacontext = "[GetScriptedGui('bribe_mercenary_button')]"
							clicksound = "event:/SFX/Events/Generic/sfx_event_generic_trade"
							oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"

							enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( MercenaryItem.GetMercenary.GetCommander.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( MercenaryItem.GetMercenary.GetCommander.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							tooltip = "BRIBE_MERCENARY_BUTTON_TOOLTIP"
							
							buttonText = {
								textbox = {
									parentanchor = bottom|hcenter
									widgetanchor = bottom|hcenter
									using = MarbleButtonFontS
									autoresize = yes
									position = { 0 -12 }
									text = "BRIBE_MERCENARY_BUTTON"
								}
							}
						}

						button_standard_white_marble_s = {
							position = { 508 20 }
							size = { 230 38 }
							text = "MERCENARY_GOTO_LOCATION"
							onclick = "[MercenaryItem.OnGoto]"
							tooltip = "MERC_GOTO_TOOLTIP"
							onmousehierarchyenter = "[SetHighlightProvince( MercenaryItem.GetMercenary.GetUnit.GetLocation.GetId )]"
							onmousehierarchyleave = "[ClearHighlightColors]"
						}
						
						overlappingitembox = {
							using = UnitCards
							name = "unit_types_grid"
							position = { 250 4 }
							size = { 256 104 }
							datamodel = "[MercenaryItem.GetSubUnitCounts]"
						}
					}
				}
			}
		}
	}
}

