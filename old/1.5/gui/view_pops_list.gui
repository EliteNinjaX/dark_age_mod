window = {
	gfxtype = windowgfx
	name = "view_pops_window"
	parentanchor = bottom|left
	size = { 944 444 }
	position = { 0 0 }
	widgetanchor = bottom|left
	movable = yes
	scale = 1.1
	state = {
		name = _show
		
		animation = {
			position = { 0 0 }
		}
	
	}
	
	widget = {
		name = "background"
		using = standard_window_type
		size = { 100% 100% }
		alwaystransparent = no
	}
	
	square_close_button = {
		name = "close_button"
		position = { -2 5 }
		parentanchor = top|right
		shortcut = "close_window"
		onclick = "[ViewPopsWindow.OnClose]"
		tooltip = "CLOSE"
	}
	
	container = {
		textbox = {
			position = { 20 11 }
			autoresize = yes
			using = MarbleButtonFontM
			text = "[ViewPopsWindow.GetTitle]"
		}
	#icon = {
	#	texture = "[ViewPopsWindow.GetProvince.GetRank.GetIcon]"
	#}
	}
	
	textbox = {
		position = { -50 14 }
		parentanchor = top|right
		widgetanchor = top|right
		autoresize = yes
		align = top|right
		using = MarbleButtonFontM
		text = "[ViewPopsWindow.GetProvince.GetPopulation('total')]/[ViewPopsWindow.GetProvince.GetPopulationCapacityValue]"
		tooltip = "[ViewPopsWindow.GetProvince.GetPopulationCapacityInfo]"
	}
	
	
	#####################################
	# Piecharts!
	#####################################
	flowcontainer = {
		position = { 16 44 }
		spacing = 3
		container = {
			flowcontainer = {
				direction = vertical
				
				container = {
					
					DefaultHeaderBackground = {
						name = "province_header"
						position = { -5 0 }
						size = { 300 46 }
						
						blockoverride "text"
						{
							text = "CULTURE_RELIGION"
							parentanchor = top|hcenter
							position = { 0 6 }
						}
					}
					
					icon = {
						position = { 0 44 }
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 12 12 }
						size = { 290 176 }
						
						flowcontainer = {
							direction = vertical
							spacing = 3
							container = {
								piechart = {
									size = { 70 70 }
									position = { 20 10 }
									
									datamodel = "[ViewPopsWindow.GetPopCultures]"
									
									item = {
										pieslice = {
											texture = "gfx/interface/piechart.dds"
											tooltip = "[PopCultureItem.GetTooltip]"
											value = "[PopCultureItem.GetSize]"
											color = "[PopCultureItem.GetColor]"
										}
									}
								}
								
								icon = {
									name = "frame"
									position = { 15 5 }
									size = { 80 80 }
									texture = "gfx/interface/tiles/pie_chart_overlay_100.dds"
								}
								
								flowcontainer = {
									direction = vertical
									ignoreinvisible = yes
									position = { 0 14 }
									container = {
										textbox = {
											position = { 140 10 }
											using = MarbleButtonFontS
											text = "ASSIMILATION_TITLE"
											fontsize = 14
										}
									}
									
									container = {
										visible = "[ViewPopsWindow.GetProvince.HasPopActivity('assimilate')]"
										flowcontainer = {
											position = { 112 10 }
											spacing = 4
											tooltip = "[ViewPopsWindow.GetProvince.GetActivityInformation('assimilate')]"
											container = {
												
												icon = {
													texture = "[GetPopIcon(ViewPopsWindow.GetProvince.GetPopActivity('assimilate').GetPop.GetType)]"
													size = { 28 28 }
												}
												
												container = {
													position = { 28 8 }
													
													icon = {
														name = "progressbar_frame"
														spriteType = Corneredtiled
														spriteborder = { 5 2 }
														size = { 70 11 }
														texture = "gfx/interface/tiles/progressbar_green_frame.dds"
														position = { 2 0 }
													}
													
													progressbar = {
														using = progressbar_green_horizontal
														position = { 4 2 }
														size = { 66 7 }
														value = "[FixedPointToFloat(ViewPopsWindow.GetProvince.GetActivityStatus('assimilate'))]"
													}
												}
											}
											
											# Speed
											container = {
												tooltip = "[ViewPopsWindow.GetProvince.GetActivitySpeedTooltip('assimilate')]"
												
												textbox = {
													position = { 0 1 }
													autoresize = yes
													using = MarbleButtonFont
													fontsize = 14
													text = "[ViewPopsWindow.GetProvince.GetActivitySpeed('assimilate')|+=/%]"
												}
											}
										
										}
									}
									
									container = {
										visible = "[Not(ViewPopsWindow.GetProvince.HasPopActivity('assimilate'))]"
										
										icon = {
											position = { 158 12 }
											texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
											size = { 26 26 }
											tooltip = "NO_POP_ASSIMILATE"
										}
									}
								}
							}
							
							container = {
								
								piechart = {
									size = { 70 70 }
									position = { 20 8 }
									
									datamodel = "[ViewPopsWindow.GetPopReligions]"
									
									item = {
										pieslice = {
											texture = "gfx/interface/piechart.dds"
											tooltip = "[PopReligionItem.GetName]"
											value = "[PopReligionItem.GetSize]"
											color = "[PopReligionItem.GetColor]"
										}
									}
								}
								
								icon = {
									name = "frame"
									size = { 80 80 }
									position = { 15 3 }
									texture = "gfx/interface/tiles/pie_chart_overlay_100.dds"
								}
								
								flowcontainer = {
									direction = vertical
									ignoreinvisible = yes
									position = { 0 14 }
									container = {
										textbox = {
											position = { 140 10 }
											using = MarbleButtonFontS
											text = "CONVERSION_TITLE"
											fontsize = 14
										}
									}
									
									container = {
										visible = "[ViewPopsWindow.GetProvince.HasPopActivity('convert')]"
										flowcontainer = {
											position = { 112 10 }
											spacing = 4
											tooltip = "[ViewPopsWindow.GetProvince.GetActivityInformation('convert')]"
											container = {
												
												icon = {
													texture = "[GetPopIcon(ViewPopsWindow.GetProvince.GetPopActivity('convert').GetPop.GetType)]"
													size = { 28 28 }
												}
												
												container = {
													position = { 28 8 }
													
													icon = {
														name = "progressbar_frame"
														spriteType = Corneredtiled
														spriteborder = { 5 2 }
														size = { 70 11 }
														texture = "gfx/interface/tiles/progressbar_green_frame.dds"
														position = { 2 0 }
													}
													
													progressbar = {
														using = progressbar_green_horizontal
														position = { 4 2 }
														size = { 66 7 }
														value = "[FixedPointToFloat(ViewPopsWindow.GetProvince.GetActivityStatus('convert'))]"
													}
												}
											}
											
											# Speed
											container = {
												tooltip = "[ViewPopsWindow.GetProvince.GetActivitySpeedTooltip('convert')]"
												
												textbox = {
													position = { 0 1 }
													autoresize = yes
													using = MarbleButtonFont
													fontsize = 14
													text = "[ViewPopsWindow.GetProvince.GetActivitySpeed('convert')|+=/%]"
												}
											}
										
										}
									}
									
									container = {
										visible = "[Not(ViewPopsWindow.GetProvince.HasPopActivity('convert'))]"
										
										icon = {
											position = { 158 12 }
											texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
											size = { 26 26 }
											tooltip = "NO_POP_CONVERSION"
										}
									}
								}
							
							}
						}
					
					}
				}
			}
		}
		
		container = {
			
			DefaultHeaderBackground = {
				name = "province_header"
				position = { -5 0 }
				size = { 300 46 }
				
				blockoverride "text"
				{
					text = "POPTYPES"
					parentanchor = top|hcenter
					position = { 0 6 }
				}
			}
			
			icon = {
				position = { 0 44 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 12 12 }
				size = { 290 176 }
				
				piechart = {
					size = { 70 70 }
					position = { 20 10 }
					
					datamodel = "[ViewPopsWindow.GetPopTypes]"
					
					item = {
						pieslice = {
							texture = "gfx/interface/piechart.dds"
							tooltip = "[PopTypeItem.GetName]"
							value = "[PopTypeItem.GetSize]"
							color = "[PopTypeItem.GetColor]"
						}
					}
				}
				
				icon = {
					name = "frame"
					position = { 15 5 }
					size = { 80 80 }
					texture = "gfx/interface/tiles/pie_chart_overlay_100.dds"
				}
				
				flowcontainer = {
					direction = vertical
					ignoreinvisible = yes
					container = {
						textbox = {
							position = { 140 10 }
							using = MarbleButtonFontS
							text = "PROMOTION_TITLE"
							fontsize = 14
						}
					}
					
					container = {
						visible = "[Not(ViewPopsWindow.GetProvince.HasPopActivity('promote'))]"
						
						icon = {
							position = { 158 12 }
							texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
							size = { 26 26 }
							tooltip = "NO_POP_PROMOTION"
						}
					}
					
					container = {
						visible = "[ViewPopsWindow.GetProvince.HasPopActivity('promote')]"
						
						
						
						
						flowcontainer = {
							position = { 112 10 }
							tooltip = "[ViewPopsWindow.GetProvince.GetActivityInformation('promote')]"
							
							icon = {
								texture = "[GetPopIcon(ViewPopsWindow.GetProvince.GetPopActivity('promote').GetPop.GetType)]"
								size = { 28 28 }
							}
							
							container = {
								container = {
									position = { 0 8 }
									
									icon = {
										name = "progressbar_frame"
										spriteType = Corneredtiled
										spriteborder = { 5 2 }
										size = { 68 11 }
										texture = "gfx/interface/tiles/progressbar_green_frame.dds"
										position = { 2 0 }
									}
									
									progressbar = {
										using = progressbar_green_horizontal
										position = { 4 2 }
										size = { 64 7 }
										value = "[FixedPointToFloat(ViewPopsWindow.GetProvince.GetActivityStatus('promote'))]"
									}
								}
							}
							
							icon = {
								texture = "[GetPopIcon(ViewPopsWindow.GetProvince.GetPopActivity('promote').GetChange)]"
								size = { 28 28 }
							}
							
							# Speed
							container = {
								
								tooltip = "[ViewPopsWindow.GetProvince.GetActivitySpeedTooltip('promote')]"
								
								#icon = {
								#	position = { 0 0 }
								#	texture = "gfx/interface/icons/modifiers/_PLACEHOLDER.dds" #TODO
								#	size = { 30 30 }
								#}
								
								textbox = {
									position = { 0 2 }
									autoresize = yes
									using = MarbleButtonFont
									fontsize = 14
									text = "[ViewPopsWindow.GetProvince.GetActivitySpeed('promote')|+=/%]"
								}
							}
						
						}
					}
					
					widget = {
						name = "kevin"
						size = { 0 10 }
					}
					
					container = {
						textbox = {
							position = { 140 10 }
							using = MarbleButtonFontS
							text = "DEMOTION_TITLE"
							fontsize = 14
						}
					}
					
					container = {
						container = {
							position = { 112 8 }
							visible = "[ViewPopsWindow.GetProvince.HasPopActivity('demote')]"
							
							tooltip = "[ViewPopsWindow.GetProvince.GetActivityInformation('demote')]"
							
							flowcontainer = {
								
								
								icon = {
									alpha = 0.33
									texture = "[GetPopIcon(ViewPopsWindow.GetProvince.GetPopActivity('demote').GetPop.GetType)]"
									size = { 28 28 }
								}
								
								container = {
									container = {
										position = { 0 8 }
										
										icon = {
											name = "progressbar_frame"
											spriteType = Corneredtiled
											spriteborder = { 5 2 }
											size = { 68 11 }
											texture = "gfx/interface/tiles/progressbar_green_frame.dds"
											position = { 2 0 }
										}
										
										progressbar = {
											using = progressbar_green_horizontal
											position = { 4 2 }
											size = { 64 7 }
											value = "[FixedPointToFloat(ViewPopsWindow.GetProvince.GetActivityStatus('promote'))]"
										}
									}
								}
								
								icon = {
									texture = "[GetPopIcon(ViewPopsWindow.GetProvince.GetPopActivity('demote').GetChange)]"
									size = { 28 28 }
								}
								
								container = {
									
									tooltip = "[ViewPopsWindow.GetProvince.GetActivitySpeedTooltip('demote')]"
									
									#icon = {
									#	position = { 0 0 }
									#	texture = "gfx/interface/icons/modifiers/_PLACEHOLDER.dds" #TODO
									#	size = { 28 28 }
									#}
									
									textbox = {
										position = { 0 2 }
										autoresize = yes
										using = MarbleButtonFontS
										fontsize = 14
										text = "[ViewPopsWindow.GetProvince.GetActivitySpeed('demote')|+=/%]"
									}
								}
							
							}
						}
						container = {
							visible = "[Not(ViewPopsWindow.GetProvince.HasPopActivity('demote'))]"
							position = { 158 12 }
							icon = {
								texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
								size = { 26 26 }
								tooltip = "NO_POP_DEMOTION"
							}
						#textbox = {
						#	position = { 50 0 }
						#	autoresize = yes
						#	using = MarbleButtonFont
						#	text = "NO_POP_DEMOTING_TEXT"
						#}
						}
					
					
					}
					flowcontainer = {
						visible = "[ViewPopsWindow.IsPlayerProvince]"
						ignoreinvisible = yes
						parentanchor = right
						textbox = {
							autoresize = yes
							text = "DISABLE_MANUMISSION"
							using = MarbleButtonFontS
							fontsize = 14
						}
						
						widget = {size = { 10 10 }}
						
						container = {
							datacontext = "[ViewPopsWindow]"
							tooltip = "SLAVE_PROMOTION_ALLOWED_TT"
							button = {
								texture = "gfx/interface/buttons/checkbox.dds"
								framesize = { 36 36 }
								frame = 1
								visible = "[ViewPopsWindow.GetProvince.HasSlavesLocked]"
								onclick = "[ViewPopsWindow.ToggleSlavesLocked]"
								position = { 0 -5 }
								size = { 32 32 }
							}
							
							button = {
								texture = "gfx/interface/buttons/checkbox.dds"
								framesize = { 36 36 }
								frame = 2
								size = { 32 32 }
								visible = "[Not(ViewPopsWindow.GetProvince.HasSlavesLocked)]"
								onclick = "[ViewPopsWindow.ToggleSlavesLocked]"
								position = { 0 -5 }
							}
						}
					}
				}
				#######################################
				# Counts / Ratios
				#######################################
				flowcontainer = {
					position = { 2 137 }
					direction = horizontal
					scale = 0.95
					container = {
						#tooltip = "[ViewPopsWindow.GetProvince.GetPopulationTooltip('citizen')]"
							
						flowcontainer = {
							position = { 0 2 }
							spacing = 0
							flowcontainer = {
								tooltip = "NOBLES_RATIO_TOOLTIP"
								icon = {
									size = { 32 32 }
									using = icon_pop_nobles
									alpha = "[TransparentIfZero_int32(ViewPopsWindow.GetProvince.GetPopulation('nobles'))]"
									icon = {
										visible = "[LessThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('nobles'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('nobles'))]"
										using = icon_plus
										position = { -8 0 }
									}
									
									icon = {
										visible = "[GreaterThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('nobles'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('nobles'))]"
										using = icon_minus
										position = { -8 0 }
									}
									
									datacontext = "[ViewPopsWindow.GetProvince]"
								
								}
								
								container = {
									flowcontainer = {
										direction = vertical
										position = { 6 -4 }
										textbox = {
											using = MarbleButtonFontS
											text = "[ViewPopsWindow.GetProvince.GetCurrentPopRatio('nobles')|%0]"
											fontsize = 14
											autoresize = yes
											parentanchor = top|hcenter
										}
										icon = {
											name = "horizontal_divider_ruler_martial_divider"
											texture = "gfx/interface/tiles/horizontal_divider.dds"
											#spriteType = corneredtiled
											spriteborder = { 0 0 }
											size = { 20 2 }
										#parentanchor = vcenter
										}
										container = {
											parentanchor = top|hcenter
											textbox = {
												using = MarbleButtonFontS
												text = "[ViewPopsWindow.GetProvince.GetDesiredPopRatio('nobles')|%0]"
												fontsize = 14
												autoresize = yes
												
												position = { -2 -4 }
											}
										}
									}
								}
							
							}
							flowcontainer = {
								tooltip = "CITIZEN_RATIO_TOOLTIP"
								icon = {
									size = { 32 32 }
									using = icon_pop_citizens
									alpha = "[TransparentIfZero_int32(ViewPopsWindow.GetProvince.GetPopulation('citizen'))]"
									icon = {
										visible = "[LessThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('citizen'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('citizen'))]"
										using = icon_plus
										position = { -8 0 }
									}
									
									icon = {
										visible = "[GreaterThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('citizen'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('citizen'))]"
										using = icon_minus
										position = { -8 0 }
									}
									
									datacontext = "[ViewPopsWindow.GetProvince]"
								
								}
								
								container = {
									flowcontainer = {
										direction = vertical
										position = { 6 -4 }
										textbox = {
											using = MarbleButtonFontS
											text = "[ViewPopsWindow.GetProvince.GetCurrentPopRatio('citizen')|%0]"
											fontsize = 14
											autoresize = yes
											parentanchor = top|hcenter
										}
										icon = {
											name = "horizontal_divider_ruler_martial_divider"
											texture = "gfx/interface/tiles/horizontal_divider.dds"
											#spriteType = corneredtiled
											spriteborder = { 0 0 }
											size = { 20 2 }
										#parentanchor = vcenter
										}
										container = {
											parentanchor = top|hcenter
											textbox = {
												using = MarbleButtonFontS
												text = "[ViewPopsWindow.GetProvince.GetDesiredPopRatio('citizen')|%0]"
												fontsize = 14
												autoresize = yes
												
												position = { -2 -4 }
											}
										}
									}
								}
							
							}
							flowcontainer = {
								tooltip = "FREEMEN_RATIO_TOOLTIP"
								icon = {
									size = { 33 33 }
									using = icon_pop_freemen
									alpha = "[TransparentIfZero_int32(ViewPopsWindow.GetProvince.GetPopulation('freemen'))]"
									icon = {
										visible = "[LessThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('freemen'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('freemen'))]"
										using = icon_plus
										position = { -8 0 }
									}
									
									icon = {
										visible = "[GreaterThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('freemen'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('freemen'))]"
										using = icon_minus
										position = { -8 0 }
									}
									datacontext = "[ViewPopsWindow.GetProvince]"
								
								}
								container = {
									flowcontainer = {
										direction = vertical
										position = { 6 -4 }
										textbox = {
											using = MarbleButtonFontS
											text = "[ViewPopsWindow.GetProvince.GetCurrentPopRatio('freemen')|%0]"
											fontsize = 14
											autoresize = yes
											parentanchor = top|hcenter
										}
										icon = {
											name = "horizontal_divider_ruler_martial_divider"
											texture = "gfx/interface/tiles/horizontal_divider.dds"
											#spriteType = corneredtiled
											spriteborder = { 0 0 }
											size = { 20 2 }
										#parentanchor = vcenter
										}
										container = {
											parentanchor = top|hcenter
											textbox = {
												using = MarbleButtonFontS
												text = "[ViewPopsWindow.GetProvince.GetDesiredPopRatio('freemen')|%0]"
												fontsize = 14
												autoresize = yes
												
												position = { -2 -4 }
											}
										}
									}
								}
							
							}
							
							flowcontainer = {
								icon = {
									tooltip = "TRIBESMEN_RATIO_TOOLTIP"
									size = { 33 33 }
									using = icon_pop_tribal
									alpha = "[TransparentIfZero_int32(ViewPopsWindow.GetProvince.GetPopulation('tribesmen'))]"
									icon = {
										visible = "[LessThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('tribesmen'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('tribesmen'))]"
										using = icon_plus
										position = { -8 0 }
									}
									
									icon = {
										visible = "[GreaterThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('tribesmen'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('tribesmen'))]"
										using = icon_minus
										position = { -8 0 }
									}
									datacontext = "[ViewPopsWindow.GetProvince]"
								
								}
								
								container = {
									flowcontainer = {
										direction = vertical
										position = { 6 -4 }
										textbox = {
											using = MarbleButtonFontS
											text = "[ViewPopsWindow.GetProvince.GetCurrentPopRatio('tribesmen')|%0]"
											fontsize = 14
											autoresize = yes
											parentanchor = top|hcenter
										}
										icon = {
											name = "horizontal_divider_ruler_martial_divider"
											texture = "gfx/interface/tiles/horizontal_divider.dds"
											#spriteType = corneredtiled
											spriteborder = { 0 0 }
											size = { 20 2 }
										#parentanchor = vcenter
										}
										container = {
											parentanchor = top|hcenter
											textbox = {
												using = MarbleButtonFontS
												text = "[ViewPopsWindow.GetProvince.GetDesiredPopRatio('tribesmen')|%0]"
												fontsize = 14
												autoresize = yes
												
												position = { -2 -4 }
											}
										}
									}
								}
							}
							flowcontainer = {
								tooltip = "SLAVES_RATIO_TOOLTIP"
								icon = {
									size = { 31 31 }
									using = icon_pop_slaves
									alpha = "[TransparentIfZero_int32(ViewPopsWindow.GetProvince.GetPopulation('slaves'))]"
									icon = {
										visible = "[LessThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('slaves'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('slaves'))]"
										using = icon_plus
										position = { -8 0 }
									}
									
									icon = {
										visible = "[GreaterThan_CFixedPoint(ViewPopsWindow.GetProvince.GetCurrentPopRatio('slaves'), ViewPopsWindow.GetProvince.GetDesiredPopRatio('slaves'))]"
										using = icon_minus
										position = { -8 0 }
									}
									datacontext = "[ViewPopsWindow.GetProvince]"
								
								}
								
								container = {
									flowcontainer = {
										direction = vertical
										position = { 6 -4 }
										textbox = {
											using = MarbleButtonFontS
											text = "[ViewPopsWindow.GetProvince.GetCurrentPopRatio('slaves')|%0]"
											fontsize = 14
											autoresize = yes
										#parentanchor = top|hcenter
										}
										icon = {
											name = "horizontal_divider_ruler_martial_divider"
											texture = "gfx/interface/tiles/horizontal_divider.dds"
											#spriteType = corneredtiled
											spriteborder = { 0 0 }
											size = { 20 2 }
										#parentanchor = vcenter
										}
										container = {
											parentanchor = top|hcenter
											textbox = {
												using = MarbleButtonFontS
												text = "[ViewPopsWindow.GetProvince.GetDesiredPopRatio('slaves')|%0]"
												fontsize = 14
												autoresize = yes
												
												position = { -2 -4 }
											}
										}
									}
								}
							}
						
						}
					}
				}
			
			}
		}
		container = {
			
			DefaultHeaderBackground = {
				name = "province_header_2"
				position = { -5 0 }
				size = { 328 46 }
				
				blockoverride "text"
				{
					text = "POP_CHANGES_INCOMING"
					parentanchor = top|hcenter
					position = { 0 6 }
				}
			}
			
			DefaultHeaderBackground = {
				name = "province_header"
				size = { 328 46 }
				position = { -5 220 }
				blockoverride "text"
				{
					text = "POP_CHANGES"
					parentanchor = top|hcenter
					position = { 0 6 }
				}
			}
			
			flowcontainer = {
				position = { 0 42 }
				direction = vertical
				
				container = {
					icon = {
						size = { 316 176 }
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 10 10 }
						position = { 0 2 }
						
						scrollarea = {
							position = { 4 2 }
							size = { 308 174 }
							scrollbarpolicy_horizontal = always_off
							
							scrollbar_vertical = {
								using = MarbleScrollBar
								blockoverride "ScrollBar_offset"
								{
									size = { 0 4 }
								}
							}
							
							scrollwidget = {
								dynamicgridbox = {
									position = { 0 0 }
									datamodel = "[ViewPopsWindow.GetMigrants]"
									
									item = {
										widget = {
											size = { 320 45 }
											container = {
												tooltip = "[MigratingPopItem.GetPop.GetProvince.GetActivityInformation('migrant')]"
												
												container = {
													position = { 0 0 }
													textbox = {
														position = { 42 6 }
														size = { 100 20 }
														elide = right
														using = MarbleButtonFont
														fontsize = 14
														text = "[MigratingPopItem.GetPop.GetReligion.GetName] [MigratingPopItem.GetPop.GetCulture.GetName]"
													}
													icon = {
														texture = "[GetPopIcon(MigratingPopItem.GetPop.GetType)]"
														size = { 32 32 }
													}
												}
												
												container = {
													position = { 152 0 }
													icon = {
														position = { 0 0 }
														texture = "gfx/interface/icons/modifiers/citizen_move_cost_modifier.dds"
														size = { 32 32 }
													}
													
													container = {
														position = { 36 6 }
														
														icon = {
															name = "progressbar_frame"
															spriteType = Corneredtiled
															spriteborder = { 5 2 }
															size = { 58 11 }
															texture = "gfx/interface/tiles/progressbar_green_frame.dds"
															position = { 2 0 }
														}
														
														progressbar = {
															using = progressbar_green_horizontal
															position = { 4 2 }
															size = { 54 7 }
															value = "[FixedPointToFloat(MigratingPopItem.GetChange.GetProgress)]"
														}
													}
													
													flowcontainer = {
														position = { 40 16 }
														textbox = {
															autoresize = yes
															using = MarbleButtonFontS
															fontsize = 14
															text = "[MigratingPopItem.GetPop.GetProvince.GetName]"
															parentanchor = vcenter
															minimumsize = { 72 0 }
														}
													}
													
													button = {
														name = "find_migration_target"
														position = { 98 20 }
														onclick = "[OnClickOnProvince(MigratingPopItem.GetPop.GetProvince)]"
														gfxtype = framedbuttongfx
														effectname = "NoHighlight"
														clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
														oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
														upframe = 1
														overframe = 2
														downframe = 3
														texture = "gfx/interface/minimap/minimap_find_province.dds"
														framesize = { 45 37 }
														size = { 40 32 }
														scale = 0.5
														onmousehierarchyenter = "[SetHighlightProvince(MigratingPopItem.GetPop.GetProvince.GetId)]"
														onmousehierarchyleave = "[ClearHighlightColors]"
													}
													
													
													textbox = {
														position = { 100 0 }
														autoresize = yes
														using = MarbleButtonFontS
														fontsize = 14
														tooltip = "[MigratingPopItem.GetPop.GetProvince.GetActivitySpeedTooltip('migrant')]"
														text = "[MigratingPopItem.GetPop.GetProvince.GetActivitySpeed('migrant')|+=/%]"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				
				widget = {
					name = "kevin_2"
					size = { 0 46 }
				}
				
				icon = {
					#position = { 0 80 }
					size = { 316 50 }
					texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
					spriteType = Corneredtiled
					spriteborder = { 10 10 }
					container = {
						container = {
							position = { 0 5 }
							visible = "[ViewPopsWindow.GetProvince.HasPopActivity('migrant')]"
							
							tooltip = "[ViewPopsWindow.GetProvince.GetActivityInformation('migrant')]"
							
							container = {
								position = { 5 0 }
								textbox = {
									position = { 48 5 }
									size = { 100 20 }
									elide = right
									using = MarbleButtonFontS
									fontsize = 14
									text = "[ViewPopsWindow.GetProvince.GetPopActivity('migrant').GetPop.GetReligion.GetName] [ViewPopsWindow.GetProvince.GetPopActivity('migrant').GetPop.GetCulture.GetName]"
								}
								textbox = {
									position = { 50 24 }
									autoresize = yes
									using = MarbleButtonFont
									text = ""
								}
								icon = {
									
									texture = "[GetPopIcon(ViewPopsWindow.GetProvince.GetPopActivity('migrant').GetPop.GetType)]"
									size = { 32 32 }
								}
							}
							
							container = {
								position = { 156 0 }
								icon = {
									position = { 0 0 }
									texture = "gfx/interface/icons/modifiers/citizen_move_cost_modifier.dds"
									size = { 32 32 }
								}
								
								container = {
									position = { 36 10 }
									
									icon = {
										name = "progressbar_frame"
										spriteType = Corneredtiled
										spriteborder = { 5 2 }
										size = { 70 11 }
										texture = "gfx/interface/tiles/progressbar_green_frame.dds"
										position = { 2 0 }
									}
									
									progressbar = {
										using = progressbar_green_horizontal
										position = { 4 2 }
										size = { 66 7 }
										value = "[FixedPointToFloat(ViewPopsWindow.GetProvince.GetActivityStatus('migrant'))]"
									}
								}
								
								flowcontainer = {
									position = { 40 20 }
									textbox = {
										autoresize = yes
										using = MarbleButtonFont
										text = "[ViewPopsWindow.GetProvince.GetPopActivity('migrant').GetTarget.GetName]"
										tooltip = "[ViewPopsWindow.GetProvince.GetPopActivity('migrant').GetTarget.GetModifierTooltip('local_migration_attraction')]"
										fontsize = 14
									}
								
								}
							}
						}
						button = {
							name = "find_migration_target"
							position = { 265 12 }
							visible = "[ViewPopsWindow.GetProvince.HasPopActivity('migrant')]"
							onclick = "[OnClickOnProvince(ViewPopsWindow.GetProvince.GetPopActivity('migrant').GetTarget)]"
							gfxtype = framedbuttongfx
							effectname = "NoHighlight"
							clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
							oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
							upframe = 1
							overframe = 2
							downframe = 3
							texture = "gfx/interface/minimap/minimap_find_province.dds"
							framesize = { 45 37 }
							size = { 40 32 }
							scale = 0.5
							parentanchor = vcenter
							onmousehierarchyenter = "[SetHighlightProvince(ViewPopsWindow.GetProvince.GetPopActivity('migrant').GetTarget.GetId)]"
							onmousehierarchyleave = "[ClearHighlightColors]"
						}
						container = {
							visible = "[Not(ViewPopsWindow.GetProvince.HasPopActivity('migrant'))]"
							position = { 34 12 }
							tooltip = "NO_POP_MIGRATING_TT"
							
							icon = {
								texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
								size = { 22 22 }
							
							}
							textbox = {
								position = { 50 0 }
								autoresize = yes
								using = MarbleButtonFontS
								text = "NO_POP_MIGRATING_TEXT"
							}
						}
						# Speed
						container = {
							position = { 238 9 }
							
							tooltip = "[ViewPopsWindow.GetProvince.GetActivitySpeedTooltip('migrant')]"
							visible = "[ViewPopsWindow.GetProvince.HasPopActivity('migrant')]"
							textbox = {
								position = { 32 0 }
								autoresize = yes
								using = MarbleButtonFontS
								fontsize = 14
								text = "[ViewPopsWindow.GetProvince.GetActivitySpeed('migrant')|-=/%]"
							}
						}
					
					
					}
				}
			
			
			}
		}
	}
	
	######################################
	# Current Pops
	######################################
	
	container = {
		position = { 462 264 }
		DefaultHeaderBackground = {
			name = "province_header_2"
			position = { -5 0 }
			size = { 150 46 }
			
			blockoverride "text"
			{
				text = "GROWTH_CHANGES"
				parentanchor = top|hcenter
				position = { 0 6 }
			}
		}
		
		icon = {
			position = { 0 46 }
			size = { 140 120 }
			texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
			spriteType = Corneredtiled
			spriteborder = { 10 10 }
			container = {
				visible = "[ViewPopsWindow.GetProvince.HasPopActivity('growing_pop')]"
				
				tooltip = "[ViewPopsWindow.GetProvince.GetActivityInformation('growing_pop')]"
				
				container = {
					position = { 0 2 }
					textbox = {
						position = { 32 5 }
						size = { 100 20 }
						using = MarbleButtonFont
						text = "[ViewPopsWindow.GetProvince.GetPopActivity('growing_pop').GetPop.GetReligion.GetName] [ViewPopsWindow.GetProvince.GetPopActivity('growing_pop').GetPop.GetCulture.GetName]"
						fontsize = 14
						elide = right
					}
					icon = {
						texture = "[GetPopIcon(ViewPopsWindow.GetProvince.GetPopActivity('growing_pop').GetPop.GetType)]"
						size = { 32 32 }
					}
				}
			
			}
			
			
			
			container = {
				visible = "[Not(ViewPopsWindow.GetProvince.HasPopActivity('growing_pop'))]"
				position = { 0 0 }
				icon = {
					texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
					size = { 32 32 }
					tooltip = "NO_POP_GROWING"
				}
			}
		
		}
		container = {
			position = { 12 82 }
			flowcontainer = {
				
				
				container = {
					
					icon = {
						name = "progressbar_frame"
						spriteType = Corneredtiled
						spriteborder = { 5 2 }
						size = { 70 11 }
						texture = "gfx/interface/tiles/progressbar_green_frame.dds"
						position = { 2 0 }
					}
					
					progressbar = {
						using = progressbar_green_horizontal
						position = { 4 2 }
						size = { 66 7 }
						value = "[FixedPointToFloat(ViewPopsWindow.GetProvince.GetActivityStatus('growing_pop'))]"
					}
				}
				
				# Speed
				container = {
					
					tooltip = "[ViewPopsWindow.GetProvince.GetActivitySpeedTooltip('growing_pop')]"
					textbox = {
						position = { 4 -6 }
						autoresize = yes
						using = MarbleButtonFontS
						fontsize = 14
						text = "[ViewPopsWindow.GetProvince.GetActivitySpeed('growing_pop')|+=/%]"
					
					}
				}
			}
		
		}
	
	
	}
	
	container = {
		position = { 18 268 }
		
		flowcontainer = {
			
			sort_button = {
				size = { 40 34 }
				onclick = "[ViewPopsWindow.SortPops('count')]"
				down = "[ViewPopsWindow.IsPopsSorted('count')]"
				
				icon = {
					parentanchor = center
					widgetanchor = center
					position = { 0 -1 }
					using = icon_population
					size = { 26 26 }
					tooltip = POP_VIEW_COUNT
				}
			
			}
			
			
			
			sort_button = {
				size = { 140 34 }
				onclick = "[ViewPopsWindow.SortPops('culture')]"
				down = "[ViewPopsWindow.IsPopsSorted('culture')]"
				
				icon = {
					parentanchor = center
					widgetanchor = center
					position = { 0 -2 }
					texture = "gfx/interface/icons/governor_policies/cultural_assimilation.dds"
					size = { 26 26 }
					tooltip = POP_VIEW_CULTURE
				}
			
			}
			
			sort_button = {
				size = { 124 34 }
				onclick = "[ViewPopsWindow.SortPops('religion')]"
				down = "[ViewPopsWindow.IsPopsSorted('religion')]"
				
				icon = {
					parentanchor = center
					widgetanchor = center
					position = { 0 -1 }
					using = icon_religious
					size = { 26 26 }
					tooltip = POP_VIEW_RELIGION
				}
			
			}
			sort_button = {
				size = { 70 34 }
				onclick = "[ViewPopsWindow.SortPops('happy')]"
				down = "[ViewPopsWindow.IsPopsSorted('happy')]"
				
				icon = {
					parentanchor = center
					widgetanchor = center
					position = { 2 -1 }
					framesize = { 50 50 }
					size = { 26 26 }
					texture = "gfx/interface/icons/shared_icons/pop_happy.dds"
					frame = 1
					tooltip = POP_VIEW_HAPPYNESS
				}
			
			}
			
			sort_button = {
				size = { 54 34 }
				onclick = "[ViewPopsWindow.SortPops('type')]"
				down = "[ViewPopsWindow.IsPopsSorted('type')]"
				
				icon = {
					parentanchor = center
					widgetanchor = center
					position = { 0 -1 }
					size = { 26 26 }
					texture = "gfx/interface/icons/shared_icons/pop_type.dds"
				}
			
			}
		}
		
		
		
		
		
		
		icon = {
			position = { 0 38 }
			size = { 432 124 }
			texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
			spriteType = Corneredtiled
			spriteborder = { 10 10 }
			
			
			
			scrollarea = {
				position = { 4 1 }
				size = { 439 120 }
				scrollbarpolicy_horizontal = always_off
				
				scrollbar_vertical = {
					using = MarbleScrollBar
					blockoverride "ScrollBar_offset"
					{
						size = { 0 4 }
					}
				}
				
				scrollwidget = {
					dynamicgridbox = {
						position = { 0 0 }
						datamodel = "[ViewPopsWindow.GetPops]"
						
						item = {
							widget = {
								size = { 800 23 }
								
								
								textbox = {
									position = { 11 4 }
									size = { 20 20 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[PopItem.GetCount]"
									fontsize = 14
									elide = right
								}
								
								
								textbox = {
									position = { 42 4 }
									size = { 100 20 }
									using = MarbleButtonFont
									text = "[PopItem.GetPop.GetCulture.GetName]"
									tooltip = "[PopItem.GetPop.GetCulture.GetTooltip]"
									fontsize = 14
									elide = right
								}
								textbox = {
									position = { 180 4 }
									size = { 100 20 }
									using = MarbleButtonFont
									text = "[PopItem.GetPop.GetReligion.GetName]"
									tooltip = "[PopItem.GetPop.GetReligion.GetTooltip]"
									fontsize = 14
									elide = right
								}
								textbox = {
									position = { 360 4 }
									size = { 34 20 }
									using = MarbleButtonFont
									text = "[PopItem.GetHappyness|0%]"
									tooltip = "[PopItem.GetHappynessTooltip]"
									widgetanchor = top|right
									fontsize = 14
									elide = right
								}
								icon = {
									position = { 384 2 }
									framesize = { 50 50 }
									size = { 24 24 }
									tooltip = "[PopItem.GetOutputTooltip]"
									texture = "[PopItem.GetIconTexture]"
									frame = 1
								}
							}
						}
					}
				}
			}
		}
	}
	
	
	button_standard_white_marble_S = {
		position = { -138 -22 }
		
		widgetanchor = bottom|right
		parentanchor = bottom|right
		size = { 200 38 }
		using = MarbleButtonFontS
		text = "ADD_POP_BUTTON"
		onclick = "[ViewPopsWindow.AddPop]"
		
		#visible = "[ViewPopsWindow.IsPlayerProvince]"
		enabled = "[ViewPopsWindow.CanMoveFrom]"
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click"
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
		tooltip = "[ViewPopsWindow.MovePopTooltip]"
	}
	
	
	###########################
	#Migration Attraction
	###########################
	
	
	icon = {
		position = { -21 -26 }
		widgetanchor = bottom|right
		parentanchor = bottom|right
		
		size = { 112 32 }
		texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
		spriteType = Corneredtiled
		spriteborder = { 28 20 }
		
		tooltip = "[ViewPopsWindow.GetProvince.GetModifierTooltip('local_migration_attraction')]"
		
		icon = {
			position = { 2 0 }
			size = { 30 30 }
			texture = "gfx/interface/icons/modifiers/citizen_move_cost_modifier.dds"
		}
		
		textbox = {
			name = "civilization_value"
			autoresize = yes
			position = { 68 1 }
			multiline = no
			using = MarbleButtonFont
			text = "[ViewPopsWindow.GetProvince.GetModifierValue('local_migration_attraction')]"
			widgetanchor = top|hcenter
			align = center
		}
	}
}

