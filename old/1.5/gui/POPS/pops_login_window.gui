
types POPS
{
	type pops_login_window = pops_window {
		name = "pops_login_window"
		parentanchor = center
		resizable = no
		minimumsize = { 800 310 }
		maximumsize = { 800 310 }

		blockoverride "title"
		{
			margin_left = 20
			margin_top = -20
			text = "POPS_LOGIN"
			fontsize = 20
		}
		blockoverride "hbox_properties"
		{
			layoutpolicy_horizontal = Preferred
			layoutpolicy_vertical = fixed
		}

		blockoverride "content_layout"
		{
			vbox = {
				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = expanding
				visible = "[POPSLoginView.IsLogin]"
				
				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_bottom = 20
					vbox = {
						#direction = vertical
						pops_textbox = {
							size = { 20 20 }
							autoresize = yes
							
							block "title"
							{
								text = "POPS_LOGIN"
								fontsize = 24
								margin_left = 20
								margin_top = 20
							}
						}
						
						pops_textbox = {
							text = "POPS_CREATE_ACCOUNT_CREARE_SUGGESTION"
							layoutpolicy_horizontal = expanding
							minimumsize = { 310 -1 }
							margin_left = 20
							margin_top = 12
						}
					}
					
					#hbox = {
					#	layoutpolicy_horizontal = expanding
					#}
				}
				
				vbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding

					pops_button = {
						block "create_account_button" { }

						text = "CREATE_ACCOUNT"
						onclick = "[OnCreateAccount]"
					}
				}
				
				vbox = {
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					margin_left = 20
					margin_right = 20
					margin_top = 8
					margin_bottom = 20
					spacing = 10

					pops_textbox_entry = {
						name = "pops_login_entry_email"
						minimumsize = { 500 0 }
						maximumsize = { 500 0 }
						blockoverride "title"
						{
							text = "EMAIL"
						}
						blockoverride "editbox_text"
						{
							text = "[POPSLoginView.GetEmail]"
						}
						blockoverride "textbox_size"
						{
							size = { 130 30 }
						}
						layoutpolicy_horizontal = expanding
						blockoverride "pops_editbox"
						{
							ontextchanged = "[POPSLoginView.SetEmail]"
							onreturnpressed = "[POPSLoginView.Login]"
						}
					}

					pops_textbox_entry = {
						layoutpolicy_horizontal = expanding
						name = "pops_login_entry_password"
						minimumsize = { 500 0 }
						maximumsize = { 500 0 }
						blockoverride "title"
						{
							text = "PASSWORD"
						}
						blockoverride "editbox_text"
						{
							text = "[POPSLoginView.GetPassword]"
						}
						blockoverride "textbox_size"
						{
							size = { 130 30 }
						}
						blockoverride "pops_editbox"
						{
							ontextchanged = "[POPSLoginView.SetPassword]"
							onreturnpressed = "[POPSLoginView.Login]"
						}
						blockoverride "password"
						{
							password = yes
						}
						margin_bottom = 4
					}
					
					pops_error_textbox = {
						text = "[POPSLoginView.GetErrorMessage]"
						fontcolor = { 1 0.1 0.1 1 }
						multiline = yes
						layoutpolicy_horizontal = expanding
						align = center
						minimumsize = { 300 22 }
						autoresize = yes
					}
					
					pops_button = {
						block "reset_password_button" { }
						
						text = "POPS_LOGIN_RESET_PASSWORD"
						layoutpolicy_horizontal = fixed
						onclick = "[POPSLoginView.SetState( 'password_reset' )]"
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 10
						margin_top = 14
						
						pops_button = {
							text = "CANCEL"
							layoutpolicy_horizontal = fixed
							onclick = "[POPSLoginView.Hide]"
						}

						pops_button_load_indicator = {
							text = "[POPSLoginView.GetLoginString]"
							layoutpolicy_horizontal = fixed
							enabled = "[POPSLoginView.IsValidLoginInfo]"
							onclick = "[POPSLoginView.Login]"
							blockoverride "load_indicator"
							{
								visible = "[POPSStatusIsLoggingIn]"
							}
						}
					}
				}
			}

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				visible = "[POPSLoginView.IsRestoringPassword]"
				spacing = 10
				margin = { 15 10 }

				pops_textbox = {
					layoutpolicy_horizontal = expanding
					text = "POPS_LOGIN_RESET_PASSWORD_DESC"
					multiline = yes
					size = { -1 60 }
				}

				pops_textbox_entry = {
					name = "pops_login_entry_email"
					layoutpolicy_horizontal = expanding
					maximumsize = { 500 0 }

					blockoverride "title"
					{
						text = "EMAIL"
					}

					blockoverride "editbox_text"
					{
						text = "[POPSLoginView.GetEmail]"
					}

					blockoverride "textbox_size"
					{
						size = { 130 30 }
					}

					blockoverride "pops_editbox"
					{
						ontextchanged = "[POPSLoginView.SetEmail]"
						onreturnpressed = "[POPSLoginView.ResetPassword]"
					}
				}

				hbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					spacing = 5

					pops_button = {
						text = "CANCEL"
						layoutpolicy_horizontal = fixed
						onclick = "[POPSLoginView.SetState( 'login' )]"
					}

					pops_button = {
						text = "POPS_LOGIN_RESET_PASSWORD_SEND"
						layoutpolicy_horizontal = fixed
						onclick = "[POPSLoginView.SetState( 'email_sent' )]"
					}
				}
			}

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				visible = "[POPSLoginView.IsEmailSent]"
				spacing = 10
				margin = { 15 10 }

				pops_textbox = {
					layoutpolicy_horizontal = expanding
					text = "POPS_LOGIN_RESET_PASSWORD_EMAIL_SENT"
				}

				pops_button = {
					text = "BACK"
					layoutpolicy_horizontal = fixed
					onclick = "[POPSLoginView.SetState( 'login' )]"
				}
			}

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				visible = "[POPSLoginView.IsLoggedIn]"
				spacing = 10
				margin = { 15 10 }

				pops_textbox = {
					text = "EMAIL"
					align = center
				}

				pops_textbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = { 400 -1 }
					maximumsize = { 500 -1 }
					text = "[POPStatusGetUserEmailMasked]"
					align = center
				}

				pops_textbox = {
					text = "USER_NAME"
					align = center
				}

				pops_textbox = {
					text = "[POPStatusGetUserName]"
					align = center
				}

				pops_button = {
					layoutpolicy_horizontal = expanding
					text = "POPS_LOGIN_CHANGE_USERNAME"
					maximumsize = { 200 -1 }
					onclick = "[POPSLoginView.SetState( 'change_username' )]"
				}

				pops_button = {
					text = "LOGOUT"
					layoutpolicy_horizontal = expanding
					maximumsize = { 200 -1 }
					onclick = "[POPSLoginView.Logout]"
					onclick = "[POPSLoginView.SetState( 'login' )]"
				}

				pops_button = {
					text = "CLOSE"
					layoutpolicy_horizontal = fixed
					onclick = "[POPSLoginView.Hide]"
				}
			}

			vbox = {
				name = "change_username"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				visible = "[POPSLoginView.IsChangingUserName]"
				spacing = 10
				margin = { 15 10 }

				pops_textbox = {
					text = "POPS_LOGIN_CHANGE_USER_NAME_DESC"
					max_width = 500
					autoresize = yes
					multiline = yes
				}

				pops_textbox_entry = {
					name = "edit_username"
					maximumsize = { 500 0 }
					blockoverride "title"
					{
						text = "USERNAME"
					}
					blockoverride "editbox_text"
					{
						text = "[POPStatusGetUserName]"
					}
					blockoverride "textbox_size"
					{
						size = { 130 30 }
					}
					layoutpolicy_horizontal = expanding
					blockoverride "pops_editbox"
					{
						ontextchanged = "[POPSLoginView.OnUserNameChange]"
						onreturnpressed = "[POPSLoginView.SetUserName]"
					}
				}

				pops_button = {
					text = "UPDATE_USERNAME"
					layoutpolicy_horizontal = fixed
					onclick = "[POPSLoginView.SetUserName]"
				}

				pops_textbox = {
					visible = "[POPSLoginView.IsSuccessfulSetName]"
					text = "POPS_LOGIN_CHANGE_USERNAME_SUCCESS"
				}

				pops_textbox = {
					text = "[POPSLoginView.GetErrorMessage]"
					multiline = yes
					layoutpolicy_horizontal = expanding
					align = center
					autoresize = yes
				}

				pops_textbox = {
					visible = "[POPSLoginView.IsEmptyUserNamePrompt]"
					text = "POPS_LOGIN_EMPTY_USERNAME"
				}

				pops_button = {
					text = "BACK"
					layoutpolicy_horizontal = fixed
					onclick = "[POPSLoginView.SetState( 'logged_in' )]"
				}
			}
		}
	}
}
