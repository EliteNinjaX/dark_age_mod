
window = {
	gfxtype = windowgfx
	name = "macro_builder_view"
	
	parentanchor = top|left
	size = { 472 608 }
	position = { -5 130 }
	widgetanchor = top|left
	movable = no
	
	widget = {
		name = "background"
		using = small_window_type
		size = { 100% 100% }
		alwaystransparent = yes
	}
	
	icon = {
		texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
		spriteType = Corneredtiled
		size = { 100% 51 }
		spriteborder = { 16 0 }
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	icon = {
		position = { 10 7 }
		texture = "[MacroBuilderView.GetActivePage.GetIconTexture]"
		size = { 36 36 }
	}

	textbox = {
		size = { 380 26 }
		position = { 52 10 }
		using = MarbleButtonFontL
		text = "[MacroBuilderView.GetActivePage.GetName]"
	}
	
	square_close_button = {
		name = "close_button"
		position = { -4 4 }
		parentanchor = top|right
		shortcut = "close_window"
		onclick = "[MacroBuilderView.OnClose]"
		tooltip = "CLOSE"
	}
	
	icon = {
		texture = "gfx/interface/tiles/marble_divider_vertical.dds"
		parentanchor = top|right
		spriteType = Corneredtiled
		position = { -62 47 }
		size = { 9 553 }
		spriteborder = { 19 16 }
	}
	
	dynamicgridbox = {
		name = "tab_buttons"
		parentanchor = top|right
		position = { -14 52 }
		
		datamodel = "[MacroBuilderView.GetPages]"
		
		item = {
			widget = {
				parentanchor = top|right
				size = { 48 48 }
				
				sort_button = {
					tooltip = "[MacroBuilderPage.GetTooltip]"
					size = { 48 50 }
					onclick = "[MacroBuilderPage.OnActivate]"
					down = "[MacroBuilderPage.IsActive]"
					
					icon = {
						position = { 5 4 }
						size = { 40 40 }
						texture = "[MacroBuilderPage.GetIconTexture]"
					}
				}
			}
		}
	}
	
	container = {
		position = { 14 47 }
		container = {
			name = "build_in_province"
			
			scrollarea = {
				size = { 384 552 }
				visible = "[Or(MacroBuilderView.IsLayoutActive('build_in_province'), And(MacroBuilderView.IsLayoutActive('build_in_province_with_list'), Not(MacroBuilderView.GetBuildInProvince.IsInProvinceMode)))]"
				scrollbarpolicy_horizontal = always_off
				
				scrollbar_vertical = {
					using = MarbleScrollBar
				}
				
				scrollwidget = {
					fixedgridbox = {
						datamodel = "[MacroBuilderView.GetBuildInProvinceModel]"
						size = { 380 552 }
						addcolumn = 371
						addrow = 40
						
						item = {
							widget = {
								size = { 371 40 }
								
								icon = {
									position = { 2 4 }
									size = { 36 36 }
									texture = "[MacroBuilderProvinceBuildable.GetIconTexture]"
									tooltip = "[MacroBuilderProvinceBuildable.GetTooltip]"
								}
								
								button_standard_white_marble_s = {
									position = { 40 4 }
									size = { 234 38 }
									using = MarbleButtonFontS
									text = "[MacroBuilderProvinceBuildable.GetName]"
									tooltip = "[MacroBuilderProvinceBuildable.GetTooltip]"
									enabled = "[MacroBuilderProvinceBuildable.IsEnabled]"
									onclick = "[MacroBuilderProvinceBuildable.OnClick]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									visible = "[Not(MacroBuilderProvinceBuildable.IsSelected)]"
								}
								
								button_standard_white_marble_s = {
									position = { 40 4 }
									size = { 234 38 }
									using = GoldenFontMB
									texture = "gfx/interface/tiles/marble_button_hl_s.dds"
									text = "[MacroBuilderProvinceBuildable.GetName]"
									tooltip = "[MacroBuilderProvinceBuildable.GetTooltip]"
									enabled = "[MacroBuilderProvinceBuildable.IsEnabled]"
									onclick = "[MacroBuilderProvinceBuildable.OnClick]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									visible = "[MacroBuilderProvinceBuildable.IsSelected]"
								}
								
								icon = {
									name = "frame"
									widgetanchor = top|right
									parentanchor = top|right
									position = { 0 6 }
									size = { 95 32 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 10 10 }
									shaderfile = "gfx/FX/pdxgui_default.shader"
									tooltip = "MACRO_BUILDER_COST"

									textbox = {
										name = "Value"
										parentanchor = center
										align = hcenter|nobaseline
										size = { 62 24 }
										using = MarbleButtonFont
										text = "[MacroBuilderProvinceBuildable.GetPrice]"
									}
								}
							}
						}
					}
				}
			}
			
			container = {
				name = "province_mode"
				visible = "[And(MacroBuilderView.IsLayoutActive('build_in_province_with_list'), MacroBuilderView.GetBuildInProvince.IsInProvinceMode)]"
				datacontext = "[MacroBuilderView.GetBuildInProvince]"
				
				sort_button = {
					text = SORT_NAME
					using = MarbleButtonFontS
					name = "sort_name"
					size = { 210 32 }
					tooltip = MACRO_BUILDER_SORT_PROVINCE_NAME_TT
					onclick = "[MacroBuilderBuildInProvince.SortProvinces('name')]"
					down = "[MacroBuilderBuildInProvince.IsProvincesSorted('name')]"
					
					blockoverride "text_position"
					{
						position = { 0 -9 }
					}					
				}
				
				sort_button = {
					#text = AMT
					name = "sort_free_slots"
					position = { 211 0 }
					size = { 43 32 }
					tooltip = MACRO_BUILDER_SORT_BUILD_AMOUNT_TT
					onclick = "[MacroBuilderBuildInProvince.SortProvinces('free_slots')]"
					down = "[MacroBuilderBuildInProvince.IsProvincesSorted('free_slots')]"
					
					icon = {
						#using = icon_pop_citizens
						texture = "gfx/interface/icons/shared_icons/quantity.dds" 
						position = { 0 1 }
						size = { 26 26 }
						parentanchor = top|hcenter
					}					
				}
				
				fixedgridbox = {
					position = { 255 0 }
					
					addcolumn = 58
					addrow = 30
					maxverticalslots = 1
					flipdirection = yes
					
					datamodel = "[MacroBuilderBuildInProvince.GetModificationHeaders]"
					
					item = {
						sort_button = {
							#text = "[ModificationItem.GetName]" # Probably use [ModificationItem.GetIcon] as icon instead of text
							
							size = { 57 32 }
							tooltip = "[ModificationItem.GetName]"
							onclick = "[MacroBuilderBuildInProvince.SortProvinces(ModificationItem.GetKey)]"
							down = "[MacroBuilderBuildInProvince.IsProvincesSorted(ModificationItem.GetKey)]"
							
							icon = {
								#using = icon_pop_citizens
								texture = "[ModificationItem.GetIcon]"
								position = { 0 2 }
								size = { 26 26 }
								parentanchor = top|hcenter
							}
						}
					}
				}
				
				icon = {
					position = { -2 34 }
					size = { 388 480 }
					texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
					spriteType = Corneredtiled
					spriteborder = { 28 20 }
				}				
				
				scrollarea = {
					position = { 0 36 }
					size = { 382 476 }
					scrollbarpolicy_horizontal = always_off
					
					scrollbar_vertical = {
						using = MarbleScrollBar
						blockoverride "ScrollBar_offset"
						{
							size = { 0 4 }
						}
					}
					
					scrollwidget = {
						fixedgridbox = {
							datamodel = "[MacroBuilderBuildInProvince.GetBuildableGlueItems]"
							size = { 380 470 }
							addcolumn = 371
							addrow = 38
							
							
							
							item = {
								widget = {
									size = { 371 38 }
									
									button_standard_white_marble_s = {
										position = { 0 4 }
										size = { 212 38 }
										using = MarbleButtonFontS
										text = "[BuildableGlueItem.GetProvince.GetName]"
										tooltip = "[BuildableGlueItem.GetProvinceTooltip]"
										enabled = "[BuildableGlueItem.CanBuild]"
										onclick = "[BuildableGlueItem.OnClick]"
										clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
										oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
										onmousehierarchyenter = "[SetHighlightProvince( BuildableGlueItem.GetProvince.GetId )]"
										onmousehierarchyleave = "[ClearHighlightColors]"
									}
									
									icon = {
										name = "build_count"
										widgetanchor = top|left
										parentanchor = top|left
										position = { 213 8 }
										size = { 40 30 }
										texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
										spriteType = Corneredtiled
										spriteborder = { 10 10 }
										shaderfile = "gfx/FX/pdxgui_default.shader"
										#tooltip = "MACRO_BUILDER_COST"

										textbox = {
											name = "Value"
											parentanchor = center
											align = hcenter|nobaseline
											size = { 62 24 }
											using = MarbleButtonFontS
											text = "[BuildableGlueItem.GetCanBeBuiltAmount]"
										}
									}
									
									fixedgridbox = {
										position = { 257 8 }
										
										addcolumn = 58
										addrow = 32
										maxverticalslots = 1
										flipdirection = yes
										
										datamodel = "[BuildableGlueItem.GetModifications]"
										
										item = {
											icon = {
												size = { 54 30 }
												texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
												spriteType = Corneredtiled
												spriteborder = { 10 10 }
												shaderfile = "gfx/FX/pdxgui_default.shader"
												tooltip = "[ModificationItem.GetName]"

												textbox = {
													parentanchor = center
													align = hcenter|nobaseline
													size = { 80 24 }
													using = MarbleButtonFontS
													fontsize = 14
													text = "[ModificationItem.GetDifferenceFormatted]"
												}
											}
										}
									}
								}
							}
						}
					}
				}
					button_standard_white_marble_s = {
						position = { 91 515 }
						size = { 200 38 }
						#using = GoldenFontMB
						#texture = "gfx/interface/tiles/marble_button_hl_s.dds"
						text = "BACK"
						enabled = yes
						onclick = "[MacroBuilderBuildInProvince.OnBack]"
						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
						oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
					}
			}
		}
		
		
		container = {
			name = "trade_goods"
			visible = "[MacroBuilderView.IsLayoutActive('trade_goods')]"
			
			scrollarea = {
				size = { 384 552 }
				scrollbarpolicy_horizontal = always_off
				
				scrollbar_vertical = {
					using = MarbleScrollBar
					blockoverride "ScrollBar_offset"
					{
						size = { 0 4 }
					}
				}
				
				scrollwidget = {
					dynamicgridbox = {
						datamodel = "[MacroBuilderView.GetTradeGoodsModel]"
						
						item = {
							container = {
								
								widget = {
									size = { 372 30 }
									
									DefaultHeaderBackground = {
										name = "province_header"
										position = { -4 0 }
										size = { 380 46 }
																				
										blockoverride "text"
										{
											text = "[MacroBuilderTradeGoodsGroup.GetName]"
											position = { 8 4 }
										}
									}
								}
								
								dynamicgridbox = {
									position = { 0 44 }
									datamodel = "[MacroBuilderTradeGoodsGroup.GetTradeGoodsModel]"
									
									item = {
										container = {
											icon = {
												size = { 38 38 }
												texture = "[MacroBuilderTradeGood.GetIconTexture]"
												tooltip = "[MacroBuilderTradeGood.GetTooltip]"
											}
											
											button_standard_white_marble_s = {
												position = { 40 0 }
												size = { 332 38 }
												using = MarbleButtonFontS
												text = "[MacroBuilderTradeGood.GetName]"
												tooltip = "[MacroBuilderTradeGood.GetTooltip]"
												enabled = "[MacroBuilderTradeGood.IsEnabled]"
												onclick = "[MacroBuilderTradeGood.OnClick]"
												clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
												oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
												visible = "[Not(MacroBuilderTradeGood.IsSelected)]"
											}
											
											button_standard_white_marble_s = {
												position = { 40 0 }
												size = { 332 38 }
												using = GoldenFontS
												texture = "gfx/interface/tiles/marble_button_hl_s.dds"
												text = "[MacroBuilderTradeGood.GetName]"
												tooltip = "[MacroBuilderTradeGood.GetTooltip]"
												enabled = "[MacroBuilderTradeGood.IsEnabled]"
												onclick = "[MacroBuilderTradeGood.OnClick]"
												clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
												oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
												visible = "[MacroBuilderTradeGood.IsSelected]"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
}
