window = {
	gfxtype = windowgfx
	name = "select_tactic_window"
	parentanchor = top|left
	#size = { 625 626 }
	position = { 534 120 }
	widgetanchor = top|left
	movable = no
	
	
	widget = {
		name = "background"
		using = standard_window_type
		size = { 100% 100% }
		alwaystransparent = no
	}
	
	square_close_button = {
		name = "close_button"
		position = { -3 5 }
		parentanchor = top|right
		shortcut = "close_window"
		onclick = "[SelectTacticWindow.OnClose]"
		tooltip = "CLOSE"
	}
	
	flowcontainer = {
		direction = vertical
		resizeparent = yes
		margin_bottom = 62
		margin_right = 26
		position = { 12 50 }
		
		scrollarea = {
			size = { 602 700 }
			maximumsize = { 625 626 }
			scrollbarpolicy_horizontal = always_off
			
			scrollbar_vertical = {
				using = MarbleScrollBar
				blockoverride "ScrollBar_offset"
				{
					size = { 0 4 }
				}
			}
			
			scrollwidget = {
			
				dynamicgridbox = {
					resizeparent = yes
					datamodel = "[SelectTacticWindow.GetTactics]"
					
					item = {
						entry_button = {
							tooltip = "COMBAT_TACTIC_BUTTON_LIST"
							size = { 600 80 }
							spriteborder = { 40 8 }
							onclick = "[SelectTactic.OnClick]"
							clicksound = "[SelectTactic.GetClickSound]"
							oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
							text = " "
			
							container = {
								position = { 10 0 }
			
								icon = {
									size = { 50 50 }
									texture = "[GetCombatTacticIcon(SelectTactic.GetTactic.GetIcon)]"
									position = { 10 4 }
								}
			
								flowcontainer = {
									tooltip = "[SelectTactic.GetTactic.GetCompositionEffectivenessDescription(SelectTactic.GetUnit)]"
									position = { 5 48 }
									icon = {
										size = { 21 21 }
										texture = "gfx/interface/unit_view/army_visible_icon.dds"
										widgetanchor = left|vcenter
										parentanchor = left|vcenter
									}
			
									textbox = {
										autoresize = yes
										using = MarbleButtonFontM
										align = left|nobaseline
										text = "[SelectTactic.GetTactic.CalculateCompositionEffectiveness(SelectTactic.GetUnit)|Y0%]"
										margin_left = 1
										widgetanchor = left|vcenter
										parentanchor = left|vcenter
									}
								}
							}
			
							container = {
								position = { 90 0 }
								textbox = {
									text = "[SelectTactic.GetTactic.GetName]"
									using = MarbleButtonFont
									position = { 0 3 }
									autoresize = yes
								}
			
								dynamicgridbox = {
									position = { 0 32 }
									flipdirection = yes
									ignoreinvisible = yes
									
									datamodel = "[SelectTacticWindow.GetSubUnitCounts]"
									datamodel_wrap = 4
			
									item = {
										widget = {
											size = { 67 18 }
			
											datacontext = "[SelectTactic.GetTactic]"
			
											tooltip = "[CombatTactic.GetCompositionEffectivenessDescriptionForType(GetSubDefinitionByIndex(SubUnitCounts.GetType),SelectTactic.GetUnit)]"
			
											icon = {
												size = { 18 18 }
												texture = "[GetSubUnitIcon(SubUnitCounts.GetType)]"
												parentanchor = left|vcenter
											}
			
											textbox = {
												position = { 20 0 }
												autoresize = yes
												using = MarbleButtonFontS
												text = "[CombatTactic.CalculateCompositionEffectFrom(GetSubDefinitionByIndex(SubUnitCounts.GetType),SelectTactic.GetUnit)|+=0%]"
												parentanchor = left|vcenter
												widgetanchor = left|vcenter
												align = left|nobaseline
											}
										}
									}
								}
							}
			
							dynamicgridbox = {
								position = { -10 8 }
								size = { 100 68 }
								parentanchor = top|right
								
								datamodel = "[SelectTactic.GetTactic.GetVersusTactics]"
								datamodel_wrap = 2
			
								item = {
									widget = {
										size = { 85 32 }
										tooltip = "COMBAT_TACTIC_AGAINST"
										icon = {
											size = { 32 32 }
											texture = "[GetCombatTacticIcon(CombatTactic.GetIcon)]"
										}
										textbox = {
											position = { 32 0 }
											size = { 32 32 }
											using = MarbleButtonFontM
											align = left|nobaseline
											text = "[SelectTactic.GetTactic.GetPowerVersusDiffWithEfficiency(CombatTactic.GetCombatTactic,SelectTactic.GetUnit)|+=0%]"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
