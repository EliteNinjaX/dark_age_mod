window = {
	gfxtype = windowgfx
	name = "overview_view"
	
	parentanchor = top|left
	size = { 940 910 }
	position = { 5 120 }
	widgetanchor = top|left
	movable = no

	using = advice_trigger_highlights

	widget = {
		name = "background"
		using = Large_window_type
		size = { 100% 100% }
		alwaystransparent = yes
		
		blockoverride "header"
		{
			text = "[OverviewView.GetPlayer.GetGovernment.GetName]"
			#tooltip = "[OverviewView.GetPlayer.GetGovernment.GetTooltip]"
			tooltip = "NATION_OVERVIEW_MENU_HEADER_TT"
		}
	}
	
	square_close_button = {
		name = "close_button"
		position = { -12 12 }
		parentanchor = top|right
		shortcut = "close_window"
		onclick = "[OverviewView.OnClose]"
		tooltip = "CLOSE"
	}
	
	left_arrow_button = {
		name = "previous_button"
		position = { 264 14 }
		parentanchor = top|left
		shortcut = "previous_window"
		onclick = "[OverviewView.OnPrevious]"
		tooltip = "PREVIOUS_OVERVIEW_VIEW"
	}
	
	
	### Tab Buttons
	widget = {
		name = "tab_buttons"
		size = { 100% 40 }
		position = { 0 70 }

		flowcontainer = {
			direction = horizontal
			parentanchor = top|hcenter
			spacing = 10

			sort_button = {
				name = "show_nation"
				visible = yes
				size = { 348 40 }
				tooltip = NATION_OVERVIEW_TAB_TOOLTIP
				onclick = "[OverviewView.ShowNation]"
				down = "[OverviewView.IsShowNation]"
				
				textbox = {
					using = MarbleButtonFontM
					parentanchor = hcenter
					autoresize = yes
					position = { 0 4 }
					align = center
					text = "SHOW_NATION"
				}
			}
	
			sort_button = {
				name = "show_decisions"
				visible = yes
				
				size = { 348 40 }
				tooltip = NATION_DECISIONS_TAB_TOOLTIP
				onclick = "[OverviewView.ShowDecisions]"
				down = "[OverviewView.IsShowDecisions]"
				
				textbox = {
					using = MarbleButtonFontM
					parentanchor = hcenter
					size = { 280 24 }
					position = { 0 4 }
					align = center
					text = "SHOW_DECISIONS"
				}
			}
		}
	}
	
	##################################################################
	# Nation TAB!
	##################################################################
	
	container = {
		name = "Nation Tab"
		visible = "[OverviewView.IsShowNation]"
		position = { 0 50 }
	
		container = {
			name = "header"
			position = { 45 60 }
			
			DefaultHeaderBackground = {
				name = "overview header"
				position = { 42 2 }
				size = { 804 46 }
				
				blockoverride "text"
				{
					text = "[OverviewView.GetPlayer.GetName]"
					datacontext = "[OverviewView]"
					tooltip = "OVERVIEW_COUNTRY_NAME"
				}

				flowcontainer = {
					position = { 0 -6 }
					spacing = 8
					direction = horizontal
					parentanchor = right
					margin_top = 14
					margin_right = 14 
					tooltip = "[OverviewView.GetPlayer.GetPrimaryCulture.GetTooltip]"

					icon = {
						#widgetanchor = bottom|hcenter
						#position = { 0 0 }
						texture = "gfx/interface/icons/governor_policies/cultural_assimilation.dds"
						size = { 28 28 }
					}
					
					textbox = {
						widgetanchor = top|hcenter
						align = right
						autoresize = yes
						size = { 300 24 }
						multiline = no
						elide = right
						using = BlackMarbleFont
						text = "[OverviewView.GetPlayer.GetPrimaryCulture.GetName]"	
						#position = { 0 0 }
					}
				}
			}
			
			icon = {
				position = { 0 -5 }
				framesize = { 54 54 }
				texture = "gfx/interface/diplomacy/country_rank.dds"
				frame = "[OverviewView.GetPlayer.GetRankFrame]"
				tooltip = "[OverviewView.GetPlayer.GetRankInformation]"
			}
		}
		
		container = {
			position = { 50 116 }
			
			icon = {
				name = "Civilization"
				position = { 0 0 }
				size = { 112 32 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 28 20 }
				
				tooltip = "[OverviewView.GetPlayer.GetModifierTooltip('country_civilization_value')]"
				
				icon = {
					position = { 2 0 }
					size = { 30 30 }
					using = icon_civilization
				}
				
				textbox = {
					name = "civilization_value"
					autoresize = yes
					position = { 68 1 }
					multiline = no
					using = MarbleButtonFont
					text = "[OverviewView.GetPlayer.GetModifierValue('country_civilization_value')]"
					widgetanchor = top|hcenter
					align = center
				}
			}
			
			icon = {
				name = "Cities"
				position = { 114 0 }
				size = { 72 32 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 28 20 }
				
				tooltip = "[OverviewView.GetPlayer.GetOwnedProvinceTooltip]"
				
				icon = {
					position = { 3 1 }
					size = { 28 28 }
					using = icon_city
				}
				
				textbox = {
					name = "cities_value"
					autoresize = yes
					position = { 48 1 }
					multiline = no
					using = MarbleButtonFont
					text = "[OverviewView.GetPlayer.GetOwnedProvinceCount]"
					widgetanchor = top|hcenter
					align = center
				}
			}
			
			icon = {
				name = "Population"
				position = { 188 0 }
				size = { 92 32 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 28 20 }
				
				tooltip = "[OverviewView.GetPlayer.BuildTotalPopulationToolTip]"
				
				icon = {
					position = { 3 1 }
					size = { 28 28 }
					using = icon_population
				}
				
				textbox = {
					name = "population_value"
					autoresize = yes
					position = { 58 1 }
					multiline = no
					using = MarbleButtonFont
					text = "[OverviewView.GetPlayer.GetTotalPopulation]"
					widgetanchor = top|hcenter
					align = center
				}
			}
			
			icon = {
				name = "Aggressive Expansion"
				position = { 284 0 }
				size = { 92 32 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 28 20 }
				
				tooltip = "[OverviewView.GetPlayer.GetCurrentAgressiveExpansionInfo]"
				
				icon = {
					position = { 3 1 }
					size = { 28 28 }
					using = icon_aggressive_expansion
				}
				
				textbox = {
					name = "aggressive_expansion_value"
					autoresize = yes
					position = { 50 1 }
					multiline = no
					using = MarbleButtonFont
					text = "[OverviewView.GetPlayer.GetCurrentAgressiveExpansion|2]"
					widgetanchor = top|hcenter
					align = center
					alpha = "[TransparentIfZero(OverviewView.GetPlayer.GetCurrentAgressiveExpansion)]"
				}
			}
	
			icon = {
				position = { 380 0 }
				size = { 200 32 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 28 20 }
				tooltip = "[OverviewView.GetPlayer.GetHeritage.GetTooltip]"
				
				
				modifier_icon = {
					position = { 4 2 }
					size = { 28 28 }
					datacontext = "[OverviewView.GetPlayer.GetHeritage.GetModifier]"
					tooltip = "[OverviewView.GetPlayer.GetHeritage.GetTooltip]"
				}
				
				textbox = {
					name = "heritage_name"
					position = { 36 0 }
					size = { 162 26 }
					multiline = no
					using = MarbleButtonFontS
					text = "[OverviewView.GetPlayer.GetHeritage.GetName]"
					elide = right
				}
			}
	
			######################################
			# Temporary Country Modifiers
			######################################
			
			margin_widget = {
				size = { 252 32 }
				position = { 584 0 }
				margin = { 4 0 }
				
				background = {
					texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
					spriteType = Corneredtiled
					spriteborder = { 10 10 }
					shaderfile = "gfx/FX/pdxgui_default.shader"
				}
				
				overlappingitembox = {
					datamodel = "[OverviewView.GetCountryModifiers]"
					size = { 246 30 }
					spacing = 1
					
					item = {
						container = {
							modifier_icon = {
								datacontext = "[TimedModifier.GetModifier]"
								tooltip = "[TimedModifier.GetTooltip]"
							}
							
							tooltip = "[TimedModifier.GetTooltip]"
						}
					}
				}
			}
			
			widget = {
				size = { 697 110 }
				position = { 0 38 }
				
				hbox = {
					fixedgridbox = {
						name = "ideas_grid"
						flipdirection = yes
						size = { 480 160 }
						addcolumn = 82
						addrow = 110
						maxhorizontalslots = 4
						maxverticalslots = 1
						
						item = {
							container = {
								datacontext = "[IdeaItem.GetIdea]"
								
								icon = {
									size = { 76 110 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
								}
								
								button = {
									visible = "[IdeaItem.IsValid]"
									size = { 64 64 }
									position = { 6 40 }
									texture = "[IdeaItem.GetIcon]"
									tooltip = IDEA_TOOLTIP
									onclick = "[IdeaItem.OpenSelection]"
								}
								
								button = {
									visible = "[Not(IdeaItem.IsValid)]"
									texture = "gfx/interface/icons/ideas/empty.dds"
									onclick = "[ClickHighlight(IdeaItem.GetHighlightGroupKey)]"
									onclick = "[IdeaItem.OpenSelection]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									tooltip = "SELECT"
									position = { 5 40 }
									size = { 64 64 }
	
									icon = {
										using = highlight_button_square_64
										visible = "[ShouldHighlight(IdeaItem.GetHighlightGroupKey)]"
									}
	
									icon = {
										using = highlight_button_square_64
										visible = "[ShouldHighlight('overview_idea_slot')]"
									}
								}
								
								icon = {
									name = "overlay"
									position = { 0 4 }
									texture = "[IdeaItem.GetGroupTexture]"
									size = { 32 32 }
									parentanchor = top|hcenter
									tooltip = "[IdeaItem.GetGroupMatchingTooltip]"
								}
								
								icon = {
									visible = "[IdeaItem.IsMisMatch]"
									name = "mismatch_overlay_cross"
									position = { 44 22 }
									texture = "gfx/interface/icons/font_icons/font_icon_cross.dds"
									size = { 16 16 }
									tooltip = "IDEA_MISMATCH"
								}
							}
						}
					}
					
					widget = {
						size = { 300 110 }
						layoutpolicy_horizontal = preferred
						icon = {
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 28 20 }
							size = { 100% 110 }
						}
						
						icon = {
							position = { 20 0 }
							name = "has_bonus"
							texture = "gfx/interface/icons/shared_icons/tick_cross.dds"
							frame = "[OverviewView.GetGovBonusFrame]"
							framesize = { 25 25 }
							parentanchor = vcenter|left
							widgetanchor = vcenter|left
							tooltip = "[OverviewView.GetGovBonusTooltip]"
							size = { 30 30 }
						}
						
						textbox = {
							position = { 60 0 }
							widgetanchor = left|vcenter
							parentanchor = left|vcenter
							autoresize = yes
							using = MarbleButtonFontS
							text = "[OverviewView.GetPlayer.GetGovernment.GetBonusDescription]"
							tooltip = [OverviewView.GetGovBonusTooltip]
						}
					}
				}
			}
			
			#CIVIL WAR
			icon = {
				name = "Possible Civil War"
				position = { 370 154 }
				size = { 327 32 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 28 20 }
				tooltip = "[OverviewView.GetPlayer.GetPossibleCivilWarTooltip]"
	
				icon = {
					position = { 2 0 }
					size = { 30 30 }
					texture = "gfx/interface/icons/shared_icons/civil_war_active_inactive.dds"
					frame = "[OverviewView.GetPlayer.GetCivilWarFrame]"
					framesize = { 50 50 }
				}
				
				container = {
					position = { 34 11 }
					
					icon = {
						name = "progressbar_frame"
						spriteType = Corneredtiled
						spriteborder = { 5 2 }
						size = { 284 11 }
						texture = "gfx/interface/tiles/progressbar_green_frame.dds"
					}
					
					progressbar = {
						using = progressbar_green_horizontal
						position = { 2 2 }
						size = { 280 7 }
						value = "[FixedPointToFloat(OverviewView.GetPlayer.GetProgressTowardsCivilWar)]"
					}
				}
			}
			
			container = {
				tooltip = "[OverviewView.GetPlayer.GetModifierTooltip('global_unrest')]"
				position = { 720 117 }
	
				icon = {
					name = "frame"
					texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
					spriteType = Corneredtiled
					spriteborder = { 28 20 }
					size = { 100 32 }
					
					icon = {
						using = icon_unrest
						position = { 3 -1 }
						size = { 32 32 }
						parentanchor = vcenter
					}
				
				}
				
				textbox = {
					position = { 14 2 }
					autoresize = yes
					using = MarbleButtonFont
					text = "[OverviewView.GetPlayer.GetModifierValue('global_unrest')]"
					parentanchor = top|hcenter
				}
			}
			
			icon = {
				name = "Free Investments"
				position = { 720 80 }
				size = { 100 32 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 28 20 }
				
				tooltip = "STATE_FREE_INVESTMENTS_TOOLTIP"
				
				icon = {
					position = { 3 -2 }
					size = { 32 32 }
					texture = "gfx/interface/icons/modifiers/state_free_investments.dds"
				}
				
				textbox = {
					name = "free_investments_text"
					autoresize = yes
					position = { 58 2 }
					multiline = no
					using = MarbleButtonFont
					text = "[GuiScope.SetRoot( OverviewView.GetPlayer.MakeScope).ScriptValue('free_investments_gov_view')|/0]"
					widgetanchor = top|hcenter
					align = center
				}
			}
			
			
			icon = {
				name = "Power Base"
				position = { 720 154 }
				size = { 100 70 }
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				spriteborder = { 28 20 }
				tooltip = "[OverviewView.GetPowerBaseInfo]"
				
				icon = {
					position = { 4 2 }
					size = { 36 36 }
					using = icon_power_base
				}
				
				textbox = {
					autoresize = yes
					position = { 44 4 }
					multiline = no
					using = MarbleButtonFont
					text = "[OverviewView.GetPlayer.GetTotalPowerBase|0]"
				}
				
				icon = {
					position = { 4 34 }
					size = { 36 36 }
					using = icon_disloyal_powerbase
				}
				
				textbox = {
					autoresize = yes
					position = { 44 36 }
					multiline = no
					using = MarbleButtonFont
					text = "[OverviewView.GetPlayer.GetNonLoyalPowerBase|R0]"
				}
			}
			
			
			#Pop Piecharts
			flowcontainer = {
				position = { 0 154 }
				
				icon = {
					size = { 117 68 }
					texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
					spriteType = Corneredtiled
					spriteborder = { 28 20 }
					
					icon = {
						position = { 7 14 }
						texture = "gfx/interface/icons/governor_policies/cultural_assimilation.dds"
						size = { 40 40 }
						tooltip = "POPCULTUREPIECHART"
					}
					
					piechart = {
						size = { 50 50 }
						position = { 55 9 }
						
						datamodel = "[OverviewView.GetPopCultures]"
						
						item = {
							pieslice = {
								texture = "gfx/interface/piechart.dds"
								tooltip = "[PopCultureItem.GetTooltip]"
								value = "[PopCultureItem.GetSize]"
								color = "[PopCultureItem.GetColor]"
							}
						}
					}
					
					icon = {
						name = "frame"
						position = { 52 7 }
						texture = "gfx/interface/tiles/pie_chart_overlay_100.dds"
						size = { 55 55 }
					}
				}
				
				widget = {
					size = { 6 6 }
				}
				
				icon = {
					size = { 117 68 }
					texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
					spriteType = Corneredtiled
					spriteborder = { 28 20 }
					
					icon = {
						position = { 8 14 }
						using = icon_religious
						size = { 40 40 }
						tooltip = "POPRELIGIONPIECHART"
					}
					
					piechart = {
						size = { 50 50 }
						position = { 55 9 }
						
						datamodel = "[OverviewView.GetPopReligions]"
						
						item = {
							pieslice = {
								texture = "gfx/interface/piechart.dds"
								tooltip = "[PopReligionItem.GetName]"
								value = "[PopReligionItem.GetSize]"
								color = "[PopReligionItem.GetColor]"
							}
						}
					}
					
					icon = {
						name = "frame"
						position = { 52 7 }
						texture = "gfx/interface/tiles/pie_chart_overlay_100.dds"
						size = { 55 55 }
					}
				}
				
				widget = {
					size = { 6 6 }
				}
				
				icon = {
					size = { 117 68 }
					texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
					spriteType = Corneredtiled
					spriteborder = { 28 20 }
					
					
					icon = {
						position = { 7 14 }
						texture = "gfx/interface/icons/shared_icons/pop_type.dds"
						size = { 40 40 }
						tooltip = "POPTYPEPIECHART"
					}
					
					piechart = {
						size = { 50 50 }
						position = { 55 9 }
						
						datamodel = "[OverviewView.GetPopTypes]"
						
						item = {
							pieslice = {
								texture = "gfx/interface/piechart.dds"
								tooltip = "[PopTypeItem.GetName]"
								value = "[PopTypeItem.GetSize]"
								color = "[PopTypeItem.GetColor]"
							}
						}
					}
					
					icon = {
						name = "frame"
						position = { 52 7 }
						texture = "gfx/interface/tiles/pie_chart_overlay_100.dds"
						size = { 55 55 }
					}
				}
			}
		}
		
		
		##############################################
		# States
		##############################################
		widget = {
			position = { 47 350 }
			size = { 840 487 }
			
			flowcontainer = {
			
				sort_button = {
					name = "sort_name"
					size = { 245 32 }
					tooltip = SORT_PROVINCE_TT
					onclick = "[OverviewView.Sort('name')]"
					down = "[OverviewView.IsSorted('name')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					using = MarbleButtonFontS
					
					blockoverride "text_position"
					{
						parentanchor = top|hcenter
						position = { 0 2 }
						text = "PROVINCE_NAME_HEADING"
					}
				}
				
				
				sort_button = {
					name = "sort_gov"
					#position = { 264 0 }
					size = { 96 32 }
					tooltip = SORT_GOVERNOR_TT
					onclick = "[OverviewView.Sort('governor')]"
					down = "[OverviewView.IsSorted('governor')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					using = MarbleButtonFontS
					
					blockoverride "text_position"
					{
						parentanchor = top|hcenter
						position = { 0 2 }
						text = "GOVERNOR_NAME_HEADING"
					}
				}
	
				sort_button = {
					name = "sort_nobles"
					#position = { 362 0 }
					size = { 51 32 }
					tooltip = SORT_NOBLES_TT
					onclick = "[OverviewView.Sort('nobles')]"
					down = "[OverviewView.IsSorted('nobles')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					icon = {
						using = icon_pop_nobles
						size = { 26 26 }
						position = { 26 2 }
						widgetanchor = top|hcenter
					}
				}
				
				sort_button = {
					name = "sort_citizens"
					#position = { 362 0 }
					size = { 51 32 }
					tooltip = SORT_CITIZENS_TT
					onclick = "[OverviewView.Sort('citizen')]"
					down = "[OverviewView.IsSorted('citizen')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					icon = {
						using = icon_pop_citizens
						size = { 26 26 }
						position = { 27 2 }
						widgetanchor = top|hcenter
					}
				}
				
				sort_button = {
					name = "sort_freemen"
					#position = { 418 0 }
					size = { 51 32 }
					tooltip = SORT_FREEMEN_TT
					onclick = "[OverviewView.Sort('freemen')]"
					down = "[OverviewView.IsSorted('freemen')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					icon = {
						using = icon_pop_freemen
						size = { 26 26 }
						position = { 27 2 }
						widgetanchor = top|hcenter
					}
				}
				
				sort_button = {
					name = "sort_tribesmen"
					#position = { 474 0 }
					size = { 51 32 }
					tooltip = SORT_TRIBESMEN_TT
					onclick = "[OverviewView.Sort('tribesmen')]"
					down = "[OverviewView.IsSorted('tribesmen')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					icon = {
						using = icon_pop_tribal
						size = { 26 26 }
						position = { 27 2 }
						widgetanchor = top|hcenter
					}
				}
				
				sort_button = {
					name = "sort_slaves"
					#position = { 530 0 }
					size = { 51 32 }
					tooltip = SORT_SLAVES_TT
					onclick = "[OverviewView.Sort('slaves')]"
					down = "[OverviewView.IsSorted('slaves')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					icon = {
						using = icon_pop_slaves
						size = { 26 26 }
						position = { 25 2 }
						widgetanchor = top|hcenter
					}
				}
			
				sort_button = {
					name = "sort_trade_roots"
					#position = { 585 0 }
					size = { 60 32 }
					tooltip = SORT_TRADE_TT
					onclick = "[OverviewView.Sort('trade')]"
					down = "[OverviewView.IsSorted('trade')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					icon = {
						texture = "gfx/interface/icons/shared_icons/trade.dds"
						size = { 26 26 }
						position = { 34 2 }
						widgetanchor = top|hcenter
					}
				}
				
				sort_button = {
					name = "sort_loyalty"
					#position = { 649 0 }
					size = { 94 32 }
					tooltip = SORT_LOYALTY_TT
					onclick = "[OverviewView.Sort('loyalty')]"
					down = "[OverviewView.IsSorted('loyalty')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					icon = {
						texture = "gfx/interface/icons/shared_icons/loyalty.dds"
						size = { 26 26 }
						position = { 49 2 }
						widgetanchor = top|hcenter
					}
				}
				
				sort_button = {
					name = "sort_food"
					#position = { 742 0 }
					size = { 86 32 }
					tooltip = SORT_FOOD_TT
					onclick = "[OverviewView.Sort('food')]"
					down = "[OverviewView.IsSorted('food')]"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
					icon = {
						texture = "gfx/interface/icons/shared_icons/food.dds"
						size = { 26 26 }
						position = { 44 2 }
						widgetanchor = top|hcenter
					}
				}
			}
			
			icon = {
				texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
				spriteType = Corneredtiled
				position = { 2 36 }
				spriteborder = { 20 20 }
				size = { 837 450 }
			}
			
			scrollarea = {
				position = { 2 38 }
				size = { 834 446 }
				scrollbarpolicy_horizontal = always_off
				
				scrollbar_vertical = {
					using = MarbleScrollBar
					blockoverride "ScrollBar_offset"
					{
						size = { 0 4 }
					}
				}
				
				scrollwidget = {
					
					fixedgridbox = {
						name = "states_grid"
						size = { 718 340 }
						
						addcolumn = 718
						addrow = 58
						
						datamodel = "[OverviewView.GetStates]"
						
						item = {
							flowcontainer = {
								onmousehierarchyenter = "[SetHighlightArea( StateItem.GetState.GetArea )]"
								onmousehierarchyleave = "[ClearHighlightColors]"
								spacing = 1
								
								button_standard_white_marble_s = {
									#position = { 2 13 }
									tooltip = "[StateItem.GetState.GetMemberInformation]"
									onclick = "[OnClickOnState(StateItem.GetState)]"
									using = MarbleButtonFont
									size = { 208 38 }
									parentanchor = vcenter
									buttonText = {
										textbox = {
											parentanchor = top|hcenter
											using = MarbleButtonFontS
											autoresize = yes
											text = "[StateItem.GetState.GetShortName]"
											elide = right
											position = { 0 2 }
										}
									}
								}
								
								button = {
									#position = { 220 10 }
									size = { 44 44 }
									texture = "gfx/interface/buttons/icon_button_base.dds"
									datacontext = "[GetScriptedGui('release_subject_button')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).AddScope('target_state',StateItem.GetState.MakeScope ).End )]"
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).AddScope('target_state',StateItem.GetState.MakeScope ).End )]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).AddScope('target_state',StateItem.GetState.MakeScope ).End )]"
									tooltip = "RELEASE_SUBJECT_BUTTON_TOOLTIP"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_nation_release_subject"
									parentanchor = vcenter
									icon = {
										texture = "gfx/interface/icons/shared_icons/release_subject.dds"
										position = { 1 2 }
										size = { 36 36 }
										parentanchor = top|hcenter
									}
								}
								
								portrait_button = {
									using = portrait_40_no_pop
									name = "player_portrait"
									parentanchor = vcenter
									datacontext = "[StateItem.GetState.GetGovernorOrRuler]"
								}
								
								button = {
									#position = { 310 10 }
									datacontext = "[StateItem.GetState]"
									tooltip = "OVERVIEW_GOVPOL_TOOLTIP"
									texture = "gfx/interface/buttons/button_square_42.dds"
									#size = { 50 50 }
									parentanchor = vcenter
									icon = {
										size = { 40 40 }
										parentanchor = vcenter|hcenter
										widgetanchor = vcenter|hcenter
										texture = "[GetGovernorPolicyIcon(StateItem.GetState.GetGovernorPolicy)]"
									}
									onclick = "[ChangePolicy(StateItem.GetState)]"
								}
								
								icon = {
									#position = { 363 15 }
									size = { 50 34 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
									parentanchor = vcenter
									textbox = {
										position = { 0 3 }
										autoresize = yes
										using = MarbleButtonFont
										text = "[StateItem.GetState.GetPopulation('nobles')]"
										align = center
										parentanchor = top|hcenter
										widgetanchor = top|hcenter
										tooltip = "[StateItem.GetState.GetPopulationInfo('nobles')]"
									}
								}
								
								icon = {
									#position = { 363 15 }
									size = { 50 34 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
									parentanchor = vcenter
									textbox = {
										position = { 0 3 }
										autoresize = yes
										using = MarbleButtonFont
										text = "[StateItem.GetState.GetPopulation('citizen')]"
										align = center
										parentanchor = top|hcenter
										widgetanchor = top|hcenter
										tooltip = "[StateItem.GetState.GetPopulationInfo('citizen')]" 
									}
								}
								
								icon = {
									#position = { 419 15 }
									size = { 50 34 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
									parentanchor = vcenter
									textbox = {
										position = { 0 3 }
										autoresize = yes
										using = MarbleButtonFont
										text = "[StateItem.GetState.GetPopulation('freemen')]"
										align = center
										parentanchor = top|hcenter
										widgetanchor = top|hcenter
										tooltip = "[StateItem.GetState.GetPopulationInfo('freemen')]"
									}
								}
								
								icon = {
									#position = { 475 15 }
									size = { 50 34 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
									parentanchor = vcenter
									textbox = {
										position = { 0 3 }
										autoresize = yes
										using = MarbleButtonFont
										text = "[StateItem.GetState.GetPopulation('tribesmen')]"
										align = center
										parentanchor = top|hcenter
										widgetanchor = top|hcenter
										tooltip = "[StateItem.GetState.GetPopulationInfo('tribesmen')]"
									}
								}
								
								icon = {
									#position = { 532 15 }
									size = { 50 34 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
									parentanchor = vcenter
									textbox = {
										position = { 0 3 }
										autoresize = yes
										using = MarbleButtonFont
										text = "[StateItem.GetState.GetPopulation('slaves')]"
										align = center
										parentanchor = top|hcenter
										widgetanchor = top|hcenter
										tooltip = "[StateItem.GetState.GetPopulationInfo('slaves')]"
									}
								}
								
								icon = {
									#position = { 587 15 }
									size = { 60 34 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
									parentanchor = vcenter
									textbox = {
										position = { 0 3 }
										autoresize = yes
										using = MarbleButtonFont
										text = "[StateItem.GetState.GetTradeRoutesShort]"
										tooltip = "[StateItem.GetState.GetTradeRoutesTooltip]"
										align = center
										parentanchor = top|hcenter
										widgetanchor = top|hcenter
									}
								}
								
								icon = {
									#position = { 652 15 }
									size = { 90 34 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
									parentanchor = vcenter
									flowcontainer = {
										position = { 3 3 }
										direction = horizontal
										parentanchor = top|hcenter
										widgetanchor = top|hcenter
										ignoreinvisible = no
										
										textbox = {
											autoresize = yes
											using = MarbleButtonFont
											text = "[StateItem.GetState.GetStateLoyalty|1]%"
											tooltip = "[StateItem.GetState.GetLoyaltyTooltip]"
											align = center
										
										}
										icon = {
											texture = "gfx/interface/icons/shared_icons/state_loyalty_increase.dds"
											framesize = { 50 50 }
											size = { 28 28 }
											frame = "[StateItem.GetState.GetMonthlyLoyaltyFrame]"
											tooltip = "[StateItem.GetState.GetLoyaltyTooltip]"
											visible = "[Not(StateItem.GetState.IsCapitalState)]"
										}
									
									}
								}
								
								icon = {
									#position = { 745 15 }
									size = { 74 34 }
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 28 20 }
									parentanchor = vcenter
									container = {
										position = { 3 3 }
										
										
										icon = {
											texture = "gfx/interface/icons/shared_icons/state_loyalty_increase.dds"
											framesize = { 50 50 }
											size = { 28 28 }
											frame = "[StateItem.GetState.GetFoodFrame]"
											position = { 22 -6 }
										}
										
										icon = { 
											name = "food_bar_frame"
											position = { 0 17 }
											spriteborder = { 5 2 }
											size = { 68 9 }
											texture = "gfx/interface/tiles/progressbar_green_frame.dds"
											spriteType = Corneredtiled
											
											progressbar = {
												name = "foodbar"
												position = { 3 1 }
												size = { 64 6 }
												visible = "[GreaterThanOrEqualTo_CFixedPoint(StateItem.GetState.GetMonthlyFood, '(CFixedPoint)0')]"
												using = progressbar_green_horizontal
												value = "[FixedPointToFloat(StateItem.GetState.GetFoodCapacityPercent)]"
											}
											progressbar = {
												name = "foodbar_negative"
												position = { 3 1 }
												size = { 64 6 }
												visible = "[LessThan_CFixedPoint(StateItem.GetState.GetMonthlyFood, '(CFixedPoint)0')]"
												using = progressbar_red_horizontal
												value = "[FixedPointToFloat(StateItem.GetState.GetFoodCapacityPercent)]"
											}
										}
										tooltip = "[StateItem.GetState.GetFoodTooltip]"
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	##################################################################
	# Decisions TAB!
	##################################################################
	
	container = {
		name = "Decisions Tab"
		visible = "[OverviewView.IsShowDecisions]"
		position = { 0 50 }
		#parentanchor = top|hcenter
		#resizeparent = yes
		ignoreinvisible = yes
		
		container = {
			name = "header"
			position = { 45 60 }
			
			DefaultHeaderBackground = {
				name = "overview header"
				position = { 42 2 }
				size = { 804 46 }
				
				blockoverride "text"
				{
					text = "NATION_DECISIONS"
					datacontext = "[OverviewView]"
				}
			}
			
			icon = {
				position = { 0 -5 }
				framesize = { 54 54 }
				texture = "gfx/interface/diplomacy/country_rank.dds"
				frame = "[OverviewView.GetPlayer.GetRankFrame]"
				tooltip = "[OverviewView.GetPlayer.GetRankInformation]"
			}

			flowcontainer = {
				position = { 0 52 }
				direction = vertical
				ignoreinvisible = yes
				parentanchor = hcenter
				
				widget = {
					size = { 634 720 }
					parentanchor = hcenter

					background = {
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 10 10 }
						shaderfile = "gfx/FX/pdxgui_default.shader"
					}
					
					scrollarea = {

						parentanchor = hcenter
						size = { 620 718 }
						scrollbarpolicy_horizontal = always_off
						
						scrollbar_vertical = {
							using = MarbleScrollBar
							blockoverride "ScrollBar_offset"
							{
								size = { 0 4 }
							}
						}

						name = "decisions_grid_scrollarea"
						
						scrollwidget = {
							dynamicgridbox = {
								name = "decisions_grid"
								position = { 10 10 }
								size = { 600 44 }
								#resizeparent = yes
								
								datamodel = "[OverviewView.GetDecisions]"
								
								item = {
									widget = {
										size = { 600 44 }
										
										icon = {
											name = "frame"
											position = { 48 9 }
											texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
											spriteType = Corneredtiled
											spriteborder = { 12 12 }
											size = { 480 28 }
											
											textbox = {
												position = { 0 -6 }
												autoresize = yes
												parentanchor = bottom|hcenter
												widgetanchor = bottom|hcenter
												align = center
												using = MarbleButtonFontS
												text = "[DecisionItem.GetName]"
												enabled = "[DecisionItem.IsAllowed]"
												tooltip = "[DecisionItem.GetEffect]"
											}
										}
										
										button_standard_white_marble_s = {
											position = { 42 4 }
											size = { 548 38 }
											onclick = "[DecisionItem.Enact]"
											enabled = "[DecisionItem.IsAllowed]"
											tooltip = "[DecisionItem.GetEffect]"
											visible = "[Not(DecisionItem.IsAllowed)]"
											
											buttonText = {
												textbox = {
													parentanchor = bottom|hcenter
													text = "[DecisionItem.GetName]"
													using = MarbleButtonFontS
													autoresize = yes
													position = { 0 -12 }
												}
											}
										}
										
										button_standard_white_marble_g_s = {
											position = { 42 4 }
											size = { 548 38 }
											onclick = "[DecisionItem.Enact]"
											visible = "[DecisionItem.IsAllowed]"
											tooltip = "[DecisionItem.GetEffect]"
											
											buttonText = {
												textbox = {
													parentanchor = bottom|hcenter
													text = "[DecisionItem.GetName]"
													using = MarbleButtonFontS
													autoresize = yes
													position = { 0 -12 }
												}
											}
										}
										
										icon = {
											name = "has bonus checkbox"
											position = { 5 4 }
											texture = "gfx/interface/buttons/checkbox.dds"
											frame = "[DecisionItem.GetAllowedFrame]"
											tooltip = "[DecisionItem.GetAllowedDesc]"
											framesize = { 36 36 }
										}
									}
								}
							}
						}
					}
				}

				widget = {
					visible = "[IsDataModelEmpty(OverviewView.GetDecisions)]"
					size = { 548 40 }
					
					textbox = {
						parentanchor = vcenter|hcenter
						autoresize = yes
						using = MarbleButtonFont
						text = "NO_DECISIONS_CURRENTLY"
					}
				}
			}
		}
	}
}

