

window = {
	gfxtype = windowgfx
	name = "combat_window"
	movable = no
	
	parentanchor = bottom|hcenter
	size = { 755 400 }
	position = { 0 4 }
	widgetanchor = bottom|hcenter
	
	container = {
		resizeparent = yes
		ignoreinvisible = yes
		
		
		widget = {
			size = { 755 400 }
			alwaystransparent = yes
			
			widget = {
				name = "background"
				using = standard_window_type
				size = { 100% 100% }
				alwaystransparent = no
			}
			
			icon = {
				visible = "[Not(CombatView.CanRetreat)]"
				tooltip = "[CombatView.GetRetreatTooltip]"
				
				texture = "gfx/interface/icons/shared_icons/retreating.dds"
				size = { 50 50 }
				position = { 0 0 }
			}
			
			textbox = {
				position = { 0 8 }
				size = { 820 32 }
				#autoresize = yes
				using = MarbleButtonFontL
				align = center
				text = "[CombatView.GetCombat.GetName]"
				parentanchor = top|hcenter
				autoresize = yes
			}
			
			
			square_close_button = {
				name = "close_button"
				position = { -2 5 }
				parentanchor = top|right
				shortcut = "close_window"
				onclick = "[CombatView.OnClose]"
				tooltip = "CLOSE"
			}
			
			icon = {
				
				size = { 735 92 }
				position = { 10 175 }
				texture = "[CombatView.GetTerrainTexture]"
			
			#texture = "gfx/interface/icons/terrain_big/plains.dds"
			}
			
			icon = {
				name = "battle_board"
				position = { 10 170 }
				texture = "gfx/interface/combat/battle_board.dds"
			}
			
			dynamicgridbox = {
				position = { 10 175 }
				datacontext = "[CombatView.GetCombat.GetAttacker]"
				using = combatant_modifiers
				
				blockoverride "Not_for_land"
				{
				}
			}
			
			container = {
				position = { 10 44 }
				datacontext = "[CombatView.GetCombat.GetAttacker]"
				using = combatant_summary
				name = "attacker_widget"
				#	position = { 10 44 }
				parentanchor = top|left
				widgetanchor = top|left
			}
			
			
			container = {
				position = { 100 98 }
				
				datacontext = "[CombatView.GetCombat.GetAttacker]"
				tooltip = "[Combatant.GetLeadingUnit.GetTactic.GetFullDescription(Combatant.GetLeadingUnit)]"
				icon = {
					texture = "[GetCombatTacticIcon(Combatant.GetLeadingUnit.GetTactic.GetIcon)]"
					position = { 0 -15 }
					size = { 64 64 }
				}
				icon = {
					position = { -10 28 }
					texture = "gfx/interface/combat/tactic_indicator.dds"
					framesize = { 50 50 }
					size = { 44 44 }
					frame = "[Combatant.GetTacticImpactFrame]"
				}
				
				margin_widget = {
					size = { 40 30 }
					position = { 28 40 }
					margin = { 4 4 }
					
					tooltip = "[Combatant.GetLeadingUnit.GetTactic.GetPowerVersusDiffWithEfficiencyDescription(CombatView.GetCombat.GetDefender.GetLeadingUnit.GetTactic,Combatant.GetLeadingUnit)]"
					
					parentanchor = top|left
					widgetanchor = top|left
					
					background = {
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 10 10 }
						shaderfile = "gfx/FX/pdxgui_default.shader"
					}
					
					textbox = {
						position = { 0 2 }
						size = { 32 32 }
						using = MarbleButtonFontS
						align = right
						parentanchor = bottom|right
						
						text = "[Combatant.GetLeadingUnit.GetTactic.GetPowerVersusDiffWithEfficiency(CombatView.GetCombat.GetDefender.GetLeadingUnit.GetTactic,Combatant.GetLeadingUnit)|+=0%]"
					}
				}
			}
			
			dynamicgridbox = {
				position = { 10 225 }
				datacontext = "[CombatView.GetCombat.GetDefender]"
				using = combatant_modifiers
				
				blockoverride "Not_for_land"
				{
				}
			}
			
			container = {
				position = { 10 266 }
				datacontext = "[CombatView.GetCombat.GetDefender]"
				using = combatant_summary
				name = "defender_widget"
				parentanchor = top|left
				widgetanchor = top|left
			}
			
			container = {
				position = { 100 320 }
				datacontext = "[CombatView.GetCombat.GetDefender]"
				tooltip = "[Combatant.GetLeadingUnit.GetTactic.GetFullDescription(Combatant.GetLeadingUnit)]"
				icon = {
					texture = "[GetCombatTacticIcon(Combatant.GetLeadingUnit.GetTactic.GetIcon)]"
					position = { 0 -15 }
					size = { 64 64 }
				}
				icon = {
					position = { -10 26 }
					texture = "gfx/interface/combat/tactic_indicator.dds"
					framesize = { 50 50 }
					size = { 44 44 }
					frame = "[Combatant.GetTacticImpactFrame]"
				}
				
				margin_widget = {
					size = { 40 30 }
					position = { 28 40 }
					margin = { 4 4 }
					
					tooltip = "[Combatant.GetLeadingUnit.GetTactic.GetPowerVersusDiffWithEfficiencyDescription(CombatView.GetCombat.GetAttacker.GetLeadingUnit.GetTactic,Combatant.GetLeadingUnit)]"
					
					parentanchor = top|left
					widgetanchor = top|left
					
					background = {
						texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
						spriteType = Corneredtiled
						spriteborder = { 10 10 }
						shaderfile = "gfx/FX/pdxgui_default.shader"
					}
					
					textbox = {
						position = { 0 2 }
						size = { 32 32 }
						using = MarbleButtonFontS
						align = right
						parentanchor = bottom|right
						
						text = "[Combatant.GetLeadingUnit.GetTactic.GetPowerVersusDiffWithEfficiency(CombatView.GetCombat.GetAttacker.GetLeadingUnit.GetTactic,Combatant.GetLeadingUnit)|+=0%]"
					}
				}
			}
			
			
			dynamicgridbox = {
				name = "attacker_front"
				position = { 113 197 }
				size = { 300 20 }
				
				flipdirection = yes
				
				datamodel = "[CombatView.GetAttackerFrontRow]"
				
				item = {
					using = combatant_unit_counter_new
				}
			}
			
			
			
			dynamicgridbox = {
				name = "defender_front"
				position = { 113 228 }
				size = { 300 20 }
				
				flipdirection = yes
				
				datamodel = "[CombatView.GetDefenderFrontRow]"
				
				item = {
					using = combatant_unit_counter_new
				}
			}
		
		}
	}
}

