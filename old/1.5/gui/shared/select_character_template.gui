template select_character_list
{
	position = { 16 54 }
	size = { 660 500 }
	
	scrollarea = {
		
		scrollbar_vertical = {
			using = MarbleScrollBar
		}
		
		using = standard_list
		name = "envoys_scroll_area"
		
		blockoverride "ss_scrollarea"
		{
			position = { 0 0 }
			size = { 648 450 }
		}
		
		blockoverride "ss_container"
		{
			fixedgridbox = {
				name = "characters_grid"
				position = { 0 0 }
				size = { 660 500 }
				addcolumn = 640
				addrow = 100
				
				item = {
					container = {
						datacontext = "[CharacterListItem.GetCharacter]"
						enabled = "[CharacterListItem.IsSelectable]"
						tooltip = "[CharacterListItem.GetText('tooltip')]"
						
						entry_button = {
							name = "select"
							spriteborder = { 40 10 }
							position = { 0 0 }
							size = { 634 100 }
							onclick = "[CharacterListItem.OnClick('character')]"
							clicksound = "event:/SFX/UI/Character/Unique/sfx_ui_character_grant_position"		
						}
						
						portrait_button = {
							using = portrait_50
							position = { 9 5 }
						}
						
						flowcontainer = {
							position = { 73 7 }
							spacing = 10
							
							container = {
								icon = {
									texture = "gfx/interface/tiles/family_tile.dds"
									size = { 340 30 }
									color = "[CharacterListItem.GetCharacter.GetFamily.GetBackgroundColor]"	
									visible = "[EqualTo_int32( CharacterListItem.GetCharacter.GetCountry.GetId, CharacterListItem.GetCharacter.GetEmployer.GetId )]" 	
									
								}
								
								textbox = {
									name = "name"
									
									using = MarbleButtonFontM
									parentanchor = top|left
									autoresize = yes
									align = left
									text = "[Character.GetName]"
									tooltip = "[Character.GetPortraitTooltip]"
									size = { 220 24 }
									position = { 8 0 }
									elide = right
								}
								
								textbox = {
									visible = "[And( Not(Character.GetFamily.IsMinor), EqualTo_int32( Character.GetCountry.GetId, Character.GetEmployer.GetId ))]" 
									position = { 0 1 }
									text = "[Character.GetFamily.GetNumberOfJobs] / [Character.GetFamily.GetNumberOfExpectedJobs]"
									using = MarbleButtonFontM
									parentanchor = right
									tooltip = "[Character.GetFamily.GetWageTooltip]" 
									size = { 60 24 }
									align = left
									elide = right
								}
								
							}

							container = {
								visible = "[And( Character.GetFamily.IsScorned, EqualTo_int32( Character.GetCountry.GetId, Character.GetEmployer.GetId ))]" 
								tooltip = "[Character.GetFamily.GetWageTooltip]"
								icon = {
									texture = "gfx/interface/icons/shared_icons/scorned_family.dds"
									size = { 29 29 }
								}
							}
						}
						
						textbox = {
							name = "age"
							position = { -12 18 }
							#	size = { 80 25 }
							multiline = no
							using = MarbleButtonFontM
							
							parentanchor = top|right
							widgetanchor = top|right
							align = right
							
							text = "[Character.GetAgeInfo]"
							tooltip = "[Character.GetAgeOnDeathOrBirthDate]"
						}

						icon = {
							name = "Skill"
							size = { 114 50 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 28 20 }
							tooltip = "[CharacterListItem.GetSpecificSkill.GetAttributeBreakdownTooltip]"
							position = { -13 -13 }							
							parentanchor = bottom|right
							widgetanchor = bottom|right									
							
							icon = {
								using = icon_statesmanship
								size = { 28 28 }
								position = { 74 4 }
							}
							
							container = {
								position = { 68 34 }
								
								icon = {
									name = "progressbar_frame"
									spriteType = Corneredtiled
									spriteborder = { 5 2 }
									size = { 40 11 }
									texture = "gfx/interface/tiles/progressbar_green_frame.dds"
								}
								
								progressbar = {
									using = progressbar_green_horizontal
									position = { 2 2 }
									size = { 36 7 }
									value = "[FixedPointToFloat(CharacterListItem.GetCharacter.GetExperience)]"
								}
							}
							
							icon = {
								position = { 62 2 }
								size = { 6 44 }
								spriteType = Corneredtiled
								spriteborder = { 0 8 }
								texture = "gfx/interface/tiles/vertical_divider.dds"
							}
							
							icon = {
								name = "skill_icon"
								position = { 4 8 }
								size = { 32 32 }
								framesize = { 50 50 }
								texture = "gfx/interface/icons/icon_skills.dds"
								frame = "[CharacterListItem.GetSpecificSkill.GetFrame]"
							}
							
							textbox = {
								position = { 48 10 }
								text = "[CharacterListItem.GetSpecificSkill.GetValue]"
								widgetanchor = top|hcenter
								align = center
								autoresize = yes
								using = MarbleButtonFont
							}
						}						

						flowcontainer = {
							position = { 219 45 }
							spacing = 4
							
							#Prominence
							margin_widget = {
								margin = { 4 4 }
								background = {
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 10 10 }
									shaderfile = "gfx/FX/pdxgui_default.shader"
								}
								
								size = { 68 36 }
								
								
								icon = {
									name = "skill_icon"
									texture = "gfx/interface/icons/shared_icons/prominence.dds"
									size = { 24 24 }
									position = { 0 0 }
								
								}
								
								
								textbox = {
									position = { 32 0 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[Character.GetProminence|0]"
								
								}
								tooltip = "[Character.GetProminenceToolTip]"
							}
							
							#Popularity
							margin_widget = {
								margin = { 4 4 }
								background = {
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 10 10 }
									shaderfile = "gfx/FX/pdxgui_default.shader"
								}
								
								size = { 68 36 }
								
								
								icon = {
									name = "skill_icon"
									texture = "gfx/interface/icons/shared_icons/popularity.dds"
									size = { 24 24 }
									position = { 0 0 }
								
								}
								
								
								textbox = {
									position = { 32 0 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[Character.GetPopularity|0]"
								
								}
								tooltip = "[Character.GetPopularityToolTip]"
							}
							
							
							#Loyalty
							icon = {
								texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
								spriteType = Corneredtiled
								spriteborder = { 10 10 }
								shaderfile = "gfx/FX/pdxgui_default.shader"
								size = { 68 36 }
								
								icon = {
									name = "loyalty_highlight_frame"
									texture = "gfx/interface/tiles/highlight_tile_red.dds"
									widgetanchor = top|right
									parentanchor = top|right
									position = { 0 -1 }
									size = { 84 50 } 
									scale = 0.8
									alpha = 1
									visible = "[LessThanOrEqualTo_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)33')]"
								} 
								
								icon = {
									name = "skill_icon"
									using = icon_loyalty
									size = { 24 24 }
									position = { 2 4 }
								
								}
								
								
								textbox = {
									position = { 32 4 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[Character.GetLoyalty|0]"
								
								}
								tooltip = "[Character.GetLoyaltyToolTip]"
							}
							
							#Corruption
							margin_widget = {
								margin = { 4 4 }
								background = {
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 10 10 }
									shaderfile = "gfx/FX/pdxgui_default.shader"
								}
								
								size = { 68 36 }
								
								
								icon = {
									name = "skill_icon"
									texture = "gfx/interface/icons/shared_icons/corruption.dds"
									size = { 24 24 }
									position = { 0 0 }
								
								}
								
								
								textbox = {
									position = { 32 0 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[Character.GetCorruption|0]"
								
								}
								tooltip = "[Character.GetCorruptionToolTip]"
							}
						
						}
						
						
						overlappingitembox = {
							datamodel = "[CharacterListItem.GetTraitItems]"
							spacing = 5
							
							
							
							position = { 74 34 }
							size = { 170 60 }
							
							item = {
								container = {
									visible = "[TraitItem.IsValid]"
									datacontext = "[TraitItem.GetTrait]"
									
									icon = {
										size = { 30 30 }
										alwaystransparent = yes
										texture = "[TraitItem.GetIcon]"
										tooltip = "[TraitItem.GetTooltip]"
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

template select_character_list_military
{
	position = { 16 54 }
	size = { 660 500 }
	
	scrollarea = {
		
		scrollbar_vertical = {
			using = MarbleScrollBar
		}
		
		using = standard_list
		name = "envoys_scroll_area"
		
		blockoverride "ss_scrollarea"
		{
			position = { 0 0 }
			size = { 648 450 }
		}
		
		blockoverride "ss_container"
		{
			fixedgridbox = {
				name = "characters_grid"
				position = { 0 0 }
				size = { 660 500 }
				addcolumn = 640
				addrow = 100
				
				item = {
					container = {
						datacontext = "[CharacterListItem.GetCharacter]"
						enabled = "[CharacterListItem.IsSelectable]"
						tooltip = "[CharacterListItem.GetText('tooltip')]"
						
						entry_button = {
							name = "select"
							spriteborder = { 40 10 }
							position = { 0 0 }
							size = { 634 100 }
							onclick = "[CharacterListItem.OnClick('character')]"
							clicksound = "event:/SFX/UI/Character/Unique/sfx_ui_character_grant_position"		
						}
						
						portrait_button = {
							using = portrait_50
							position = { 9 5 }
						}
						
						flowcontainer = {
							position = { 73 7 }
							spacing = 10
							
							container = {
								icon = {
									texture = "gfx/interface/tiles/family_tile.dds"
									size = { 340 30 }
									color = "[CharacterListItem.GetCharacter.GetFamily.GetBackgroundColor]"	
									visible = "[EqualTo_int32( CharacterListItem.GetCharacter.GetCountry.GetId, CharacterListItem.GetCharacter.GetEmployer.GetId )]" 	
									
								}
								
								textbox = {
									name = "name"
									
									using = MarbleButtonFontM
									parentanchor = top|left
									autoresize = yes
									align = left
									text = "[Character.GetName]"
									tooltip = "[Character.GetPortraitTooltip]"
									minimumsize = { 200 24 }
									position = { 8 0 }
								}
								
							}
							
							textbox = {
								visible = "[And( Not(Character.GetFamily.IsMinor), EqualTo_int32( Character.GetCountry.GetId, Character.GetEmployer.GetId ))]" 
								#position = { 0 1 }
								text = "[Character.GetFamily.GetNumberOfJobs] / [Character.GetFamily.GetNumberOfExpectedJobs]"
								using = MarbleButtonFontM
								#parentanchor = right
								tooltip = "[Character.GetFamily.GetWageTooltip]" 
								size = { 40 24 }
								align = left
								elide = right
							}

							container = {
								visible = "[And( Character.GetFamily.IsScorned, EqualTo_int32( Character.GetCountry.GetId, Character.GetEmployer.GetId ))]"
								tooltip = "[Character.GetFamily.GetWageTooltip]"
								icon = {
									texture = "gfx/interface/icons/shared_icons/scorned_family.dds"
									size = { 29 29 }
								}
							}
						} 
						
						textbox = {
							name = "age"
							position = { -12 18 }
							#	size = { 80 25 }
							multiline = no
							using = MarbleButtonFontM
							
							parentanchor = top|right
							widgetanchor = top|right
							align = right
							
							text = "[Character.GetAgeInfo]"
							tooltip = "[Character.GetAgeOnDeathOrBirthDate]"
						}

						icon = {
							name = "Skill"
							size = { 66 50 }
							texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
							spriteType = Corneredtiled
							spriteborder = { 28 20 }
							tooltip = "[CharacterListItem.GetSpecificSkill.GetAttributeBreakdownTooltip]"
							position = { -13 -13 }							
							parentanchor = bottom|right
							widgetanchor = bottom|right									
							
							icon = {
								name = "skill_icon"
								position = { 4 8 }
								size = { 32 32 }
								framesize = { 50 50 }
								texture = "gfx/interface/icons/icon_skills.dds"
								frame = "[CharacterListItem.GetSpecificSkill.GetFrame]"
							}
							
							textbox = {
								position = { 48 13 }
								text = "[CharacterListItem.GetSpecificSkill.GetValue]"
								widgetanchor = top|hcenter
								align = center
								autoresize = yes
								using = MarbleButtonFont
							}
						}						

						flowcontainer = {
							position = { 219 45 }
							spacing = 4
							
							#Prominence
							margin_widget = {
								margin = { 4 4 }
								background = {
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 10 10 }
									shaderfile = "gfx/FX/pdxgui_default.shader"
								}
								
								size = { 68 36 }
								
								
								icon = {
									name = "skill_icon"
									texture = "gfx/interface/icons/shared_icons/prominence.dds"
									size = { 24 24 }
									position = { 0 0 }
								
								}
								
								
								textbox = {
									position = { 32 0 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[Character.GetProminence|0]"
								
								}
								tooltip = "[Character.GetProminenceToolTip]"
							}
							
							#Popularity
							margin_widget = {
								margin = { 4 4 }
								background = {
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 10 10 }
									shaderfile = "gfx/FX/pdxgui_default.shader"
								}
								
								size = { 68 36 }
								
								
								icon = {
									name = "skill_icon"
									texture = "gfx/interface/icons/shared_icons/popularity.dds"
									size = { 24 24 }
									position = { 0 0 }
								
								}
								
								
								textbox = {
									position = { 32 0 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[Character.GetPopularity|0]"
								
								}
								tooltip = "[Character.GetPopularityToolTip]"
							}
							
							
							#Loyalty
							icon = {
								texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
								spriteType = Corneredtiled
								spriteborder = { 10 10 }
								shaderfile = "gfx/FX/pdxgui_default.shader"
								size = { 68 36 }
								
								icon = {
									name = "loyalty_highlight_frame"
									texture = "gfx/interface/tiles/list_slot_corner_tiles_highlighted_red.dds"
									spriteType = Corneredtiled
									spriteborder = { 8 8 }
									size = { 100% 100% } 
									alpha = 1
									visible = "[LessThanOrEqualTo_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)33')]"
								} 
								
								icon = {
									name = "skill_icon"
									using = icon_loyalty
									size = { 24 24 }
									position = { 2 4 }
								
								}
								
								
								textbox = {
									position = { 32 4 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[Character.GetLoyalty|0]"
								
								}
								tooltip = "[Character.GetLoyaltyToolTip]"
							}
							
							#Corruption
							margin_widget = {
								margin = { 4 4 }
								background = {
									texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
									spriteType = Corneredtiled
									spriteborder = { 10 10 }
									shaderfile = "gfx/FX/pdxgui_default.shader"
								}
								
								size = { 68 36 }
								
								
								icon = {
									name = "skill_icon"
									texture = "gfx/interface/icons/shared_icons/corruption.dds"
									size = { 24 24 }
									position = { 0 0 }
								
								}
								
								
								textbox = {
									position = { 32 0 }
									autoresize = yes
									using = MarbleButtonFont
									text = "[Character.GetCorruption|0]"
								
								}
								tooltip = "[Character.GetCorruptionToolTip]"
							}
						
						}
						
						
						overlappingitembox = {
							datamodel = "[CharacterListItem.GetTraitItems]"
							spacing = 5
							
							
							
							position = { 74 34 }
							size = { 170 60 }
							
							item = {
								container = {
									visible = "[TraitItem.IsValid]"
									datacontext = "[TraitItem.GetTrait]"
									
									icon = {
										size = { 30 30 }
										alwaystransparent = yes
										texture = "[TraitItem.GetIcon]"
										tooltip = "[TraitItem.GetTooltip]"
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

template select_character_list_deity
{
	position = { 16 54 }
	size = { 660 500 }
	
	scrollarea = {
		
		scrollbar_vertical = {
			using = MarbleScrollBar
		}
		
		using = standard_list
		name = "envoys_scroll_area"
		
		blockoverride "ss_scrollarea"
		{
			position = { 0 0 }
			size = { 648 388 }
		}
		
		blockoverride "ss_container"
		{
			fixedgridbox = {
				name = "characters_grid"
				position = { 0 0 }
				size = { 660 500 }
				addcolumn = 640
				addrow = 100
				
				item = {
					container = {
						datacontext = "[CharacterListItem.GetCharacter]"
						enabled = "[CharacterListItem.IsSelectable]"
						tooltip = "[CharacterListItem.GetText('tooltip')]"
						
						entry_button = {
							name = "select"
							spriteborder = { 40 10 }
							position = { 0 0 }
							size = { 634 100 }
							onclick = "[CharacterListItem.OnClick('character')]"
							clicksound = "event:/SFX/UI/Character/Unique/sfx_ui_character_grant_position"		
							
						}
						
						portrait_button = {
							using = portrait_50
							position = { 9 5 }
						}
						
						textbox = {
							name = "death_reason_box"
							visible = "[Character.IsDead]"
							align = left
							
							multiline = no
							using = MarbleButtonFontS
							autoresize = yes
							
							parentanchor = right|bottom
							elide = left
							position = { -12 -12 }
							maximumsize = { 580 40 }
							
							text = "[Character.GetDeathReason]"
						}
						
						flowcontainer = {
							position = { 73 7 }
							spacing = 10
							
							container = {
								icon = {
									texture = "gfx/interface/tiles/family_tile.dds"
									size = { 340 30 }
									color = "[CharacterListItem.GetCharacter.GetFamily.GetBackgroundColor]"	
									visible = "[EqualTo_int32( CharacterListItem.GetCharacter.GetCountry.GetId, CharacterListItem.GetCharacter.GetEmployer.GetId )]" 	
									
								}
								
								textbox = {
									name = "name"
									
									using = MarbleButtonFontM
									parentanchor = top|left
									autoresize = yes
									align = left
									text = "[Character.GetName]"
									tooltip = "[Character.GetPortraitTooltip]"
									size = { 220 24 }
									position = { 8 0 }
									elide = right
								}
							}
						}
						
						textbox = {
							name = "age"
							position = { -12 18 }
							#	size = { 80 25 }
							multiline = no
							using = MarbleButtonFontM
							
							parentanchor = top|right
							widgetanchor = top|right
							align = right
							
							text = "[Character.GetAgeInfo]"
							tooltip = "[Character.GetAgeOnDeathOrBirthDate]"
						}	 					
						
						overlappingitembox = {
							datamodel = "[CharacterListItem.GetTraitItems]"
							spacing = 5
							
							position = { 74 38 }
							size = { 240 60 }
							
							item = {
								container = {
									visible = "[TraitItem.IsValid]"
									datacontext = "[TraitItem.GetTrait]"
									
									icon = {
										size = { 30 30 }
										alwaystransparent = yes
										texture = "[TraitItem.GetIcon]"
										tooltip = "[TraitItem.GetTooltip]"
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


