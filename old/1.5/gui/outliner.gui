@outliner_height = 104

window = {
	gfxtype = windowgfx
	name = "outliner"
	
	parentanchor = top|right
	position = { 1 @outliner_height }
	
	#size = { 318 506 } #old height for reference
	size = { 318 490 }
	movable = no

	background = {
		texture = "gfx/interface/icons/outliner/outliner_backdrop.dds"
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	textbox = {
		using = MarbleButtonFont
		text = "OUTLINER"
		fontsize = 20
		position = { 0 3 }
		size = { 318 25 }
		align = center

	}
	
	icon = {
		position = { -4 32 }
		parentanchor = right
		texture = "gfx/interface/rope_scrollbar.dds"
	}
	
	
	scrollarea = {
		position = { 0 36 }
		#size = { 310 455 }
		size = { 310 450 }
		parentanchor = top|hcenter
		
		scrollbarpolicy_horizontal = always_off


		
		scrollbar_vertical = {
			using = RopeScrollBar
		}
		
		scrollwidget = {
			dynamicgridbox = {
				name = "category_grid"
				
				datamodel = "[Outliner.GetCategories]"
				ignoreinvisible = yes
				
				item = {
					container = {
						visible = "[And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0'))]"
						
						button = {
							position = { 12 8 }
							size = { 288 24 }
							onclick = "[OutlinerCategory.ToggleCollapsed]"
						}
						
						flowcontainer = {
							margin_top = 8
							margin_left = 74
							textbox = {
								autoresize = yes
								using = BlackMarbleFontColor
								font = BaseFont
								fontsize = 17
								text = "[OutlinerCategory.GetName]"
								tooltip = "[OutlinerCategory.GetTooltip]"
							}

							widget = {
								size = { 40 20 }
								icon = {
									position = { 14 5 }
									size = { 18 18 }
									framesize = { 18 18 }
									texture = "gfx/interface/icons/outliner/arrow_down.dds"
									visible = "[Not(OutlinerCategory.IsCollapsed)]"
								}
								icon = {
									position = { 14 5 }
									size = { 18 18 }
									framesize = { 18 18 }
									texture = "gfx/interface/icons/outliner/arrow_right.dds"
									visible = "[OutlinerCategory.IsCollapsed]"
								}
							}

						}

						# textbox = {
							# position = { 12 8 }
							# parentanchor = top|right
							# autoresize = yes
							# using = MarbleButtonFont
							# text = "[OutlinerCategory.GetItemCount]"
							# visible = "[OutlinerCategory.IsCollapsed]"
						# }

						icon = {
							position = { 8 8 }
							#size = { 268 28 }
							texture = "gfx/interface/icons/outliner/outliner_header.dds"
						}
						
						dynamicgridbox = {
							name = "item_grid"
							position = { 0 32 }
							
							datamodel = "[OutlinerCategory.GetItems]"
							
							item = {
								button_group = {
									tooltip = "[OutlinerItem.GetTooltip]"
									onclick = "[OutlinerItem.OnClick]"
									onrightclick = "[OutlinerItem.OnRightClick]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click"
									
									flowcontainer = {
										spacing = 0
										direction = vertical
										ignoreinvisible = yes
											
										container = {
											ignoreinvisible = yes
											
											container = {
												ignoreinvisible = yes
												position = { 16 7 }
												
												widget = {
													size = { 280 44 }
													visible = "[OutlinerItem.HasCharacter]"
													
													button = {
														using = portrait_40_no_pop
														scale = 0.8
														datacontext = "[OutlinerItem.GetCharacter]"
														parentanchor = top|left
														position = { 0 -1 }
														clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
													}
	
													textbox = {
														name = "character_name"
														position = { 36 -4 }
														elide = right
														size = { 180 20 }
														using = MarbleButtonFontS
														text = "[OutlinerItem.GetText]"
														fontcolor = { 1 1 1 1 }
													}
													
													country_flag = {
														parentanchor = right
														position = { 0 20 }
														datacontext = "[OutlinerItem.GetCharacter.GetEmployer]"
														
														blockoverride "flag"
														{
															
															texture = "[OutlinerItem.GetCharacter.GetEmployer.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
															frame = "[OutlinerItem.GetCharacter.GetEmployer.AccessCoatOfArms.GetFrame('(int32)120','(int32)120'))]"
															framesize = { 120 120 }
														}
														
														blockoverride "size"
														{
															size = { 26 26 }
														}
														
														blockoverride "click"
														{
															onclick = "[OpenDiplomacy(OutlinerItem.GetCharacter.GetEmployer)]"
														}
													}
													
													flowcontainer = {
														position = { 36 14 }
														visible = "[OutlinerItem.GetCharacter.HasActiveAmbition]"
														tooltip = "[OutlinerItem.GetCharacter.GetAmbitionInformation]"
														spacing = 4
														textbox = {
															using = MarbleButtonFontS
															fontcolor = { 1 1 1 1 }
															parentanchor = top|left
															autoresize = yes
															align = left
															fontsize = 13
															text = "SCHEME_OUTLINER"
															widgetanchor = top|left
															
															
														}
														
														textbox = {
															using = MarbleButtonFontS
															fontcolor = { 1 1 1 1 }
															parentanchor = top|left
															autoresize = yes
															maximumsize = { 164 24 }
															elide = right
															align = left
															visible = "[OutlinerItem.GetCharacter.HasActiveAmbition]"
															text = "[OutlinerItem.GetCharacter.GetAmbitionName]"
															widgetanchor = top|left
															fontsize = 13
															tooltip = "[OutlinerItem.GetCharacter.GetAmbitionInformation]"
														}
													}
													
													container = {
														position = { 36 34 }
														icon = {
															name = "overlay"
															texture = "gfx/interface/tiles/progressbar_overlay_opaque.dds"
															parentanchor = center
															size = { 214 9 }
															alpha = 0.4
														}
														
														progressbar = {
															using = progressbar_green_horizontal
															tooltip = "[OutlinerItem.GetCharacter.GetAmbitionInformation]"
															value = "[FixedPointToFloat( OutlinerItem.GetCharacter.GetAmbitionProgress )]"
															size = { 214 9 }
															visible = "[And(OutlinerItem.GetCharacter.HasCheckedAmbition, GreaterThan_int32(OutlinerItem.GetCharacter.GetAge, '(int32)15'))]"
														}
													}
													
													flowcontainer = {
														position = { 0 -3 }
														parentanchor = right
														textbox = {
															name = "loyalty"
															size = { 48 20 }
															using = MarbleButtonFontS
															align = right
															elide = right
															fontcolor = { 1 1 1 1 }
															text = "[OutlinerItem.GetStatus]"
														}
														icon = {
															using = icon_loyalty
															size = { 22 22 }
														}
													}
												}												
												
												textbox = {
													name = "item_status_text"
													visible = "[Not(OutlinerItem.HasCharacter)]"
													size = { 48 18 }
													autoresize = yes
													using = MarbleButtonFontS
													text = "[OutlinerItem.GetText]"
													fontcolor = { 1 1 1 1 }
												}

												#widget = {
												#	size = { 18 18 }
													
													icon = {
														name = "item_icon"
														position = { 20 0 }
														size = { 14 14 }
														parentanchor = bottom|right
														texture = "[OutlinerItem.GetIcon]"
													}
												#}
											}
											
											textbox = {
												name = "item_text"
												position = { 108 10 }
												size = { 186 12 }
												#multiline = yes
												using = MarbleButtonFontS
												align = top|right
												fontcolor = { 1 1 1 1 }
												text = "[OutlinerItem.GetStatus]"
												visible = "[And(OutlinerItem.IsStatusText,Not(OutlinerItem.HasCharacter))]"
											}
										}
										
										widget = {
											size = { 4 3 }
											visible = "[OutlinerItem.IsStatusProgress]"
										}
										
										container = {
											visible = "[OutlinerItem.IsStatusProgress]"
											
											icon = {
												name = "progressbar_frame"
												spriteType = Corneredtiled
												spriteborder = { 5 2 }
												size = { 244 9 }
												position = { 12 0 }
												texture = "gfx/interface/tiles/progressbar_green_frame.dds"
											}
											
											progressbar = {
												name = "item_status_progress"
												using = progressbar_green_horizontal
												parentanchor = top|hcenter
												position = { 14 2 }
												size = { 240 5 }
												value = "[OutlinerItem.GetStatusPercent]"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	



	settings_button = {
		position = { 3 0 }
		size = { 42 42 }
		onclick = "[Outliner.OnShowSettings]"
		tooltip = "OUTLINER_SETTINGS"
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
	}
	
	
	state = {
		name = _show
		
		animation = {
			position = { 1 @outliner_height }
		}
		bezier = { 0.44 1.11 0.74 0.91 }
		
		duration = 0.2
		
	}
	
	state = {
		name = _hide
		
		animation = {
			position = { 300 @outliner_height }
		}
		bezier = { 0.44 0.2 0.74 0.91 }
		
		duration = 0.2
		
	}
	
}
